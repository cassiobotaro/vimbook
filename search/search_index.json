{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"O EDITOR DE TEXTO VIM","text":"<p>\"Um livro escrito em portugu\u00eas sobre o editor de texto Vim. A ideia \u00e9 que este material cres\u00e7a e torne-se uma refer\u00eancia confi\u00e1vel e pr\u00e1tica. Use este livro no termos da Licen\u00e7a de Documenta\u00e7\u00e3o Livre GNU (GFDL).\"</p> <p>Este trabalho est\u00e1 em constante aprimoramento e \u00e9 fruto da colabora\u00e7\u00e3o de volunt\u00e1rios. Participe do desenvolvimento enviando sugest\u00f5es e melhorias; acesse o site do projeto no endere\u00e7o: https://github.com/cassiobotaro/vimbook</p>"},{"location":"#regras-para-contribuicao","title":"Regras para contribui\u00e7\u00e3o","text":"<p>Veja como contribuir para o projeto</p> <p>Note</p> <pre><code>Este livro \u00e9 apenas a transcri\u00e7\u00e3o do [livro original](https://code.google.com/archive/p/vimbook) para [markdown](https://spec.commonmark.org/) e posteriormente utilizando [mkdocs](https://www.mkdocs.org/). Uma lista completa com os autores originais e aqueles que ajudaram na transcri\u00e7\u00e3o pode ser encontrada em: [https://github.com/cassiobotaro/vimbook/blob/main/AUTHORS](https://github.com/cassiobotaro/vimbook/blob/main/AUTHORS)\n</code></pre>"},{"location":"capitulo_1/ajuda_integrada/","title":"Ajuda integrada","text":""},{"location":"capitulo_1/ajuda_integrada/#ajuda-integrada","title":"Ajuda integrada","text":"<p>O Vim possui uma ajuda integrada muito completa, s\u00e3o mais de 100 arquivos somando milhares de linhas. O \u00fanico inconveniente \u00e9 n\u00e3o haver ainda tradu\u00e7\u00e3o para o portugu\u00eas, sendo o ingl\u00eas seu idioma oficial; entretanto, as explica\u00e7\u00f5es costumam ser sint\u00e9ticas e diretas, de forma que no\u00e7\u00f5es em ingl\u00eas seriam suficientes para a compreens\u00e3o de grande parte do conte\u00fado da ajuda integrada.</p> <p>Obs: No Vim quase todos os comandos podem ser abreviados, no caso <code>help</code> pode ser chamado por <code>h</code> e assim por diante. Um comando s\u00f3 pode ser abreviado at\u00e9 o ponto em que este nome mais curto n\u00e3o coincida com o nome de algum outro comando existente. Para chamar a ajuda do Vim pressione <code>Esc</code> e em seguida: <pre><code>:help .... vers\u00e3o longa, ou\n:h ....... vers\u00e3o abreviada\n</code></pre></p> <p>ou simplesmente <code>&lt;F1&gt;</code>.</p> <p>Siga os links usando o atalho <code>ctrl+]</code> (em modo gr\u00e1fico o clique do mouse tamb\u00e9m funciona) e para voltar use <code>ctrl+o</code> ou <code>ctrl+t</code>. Para as situa\u00e7\u00f5es de desespero pode-se digitar: <pre><code>:help!\n</code></pre></p> <p>Quando um comando puder ser abreviado poder\u00e1 aparecer desta forma: <code>:so[urce]</code>. Deste modo se est\u00e1 indicando que o comando <code>:source</code> pode ser usado de forma abreviada, no caso <code>:so</code>.</p>"},{"location":"capitulo_1/como_interpretar_atalhos_e_comandos/","title":"Como interpretar atalhos e comandos","text":""},{"location":"capitulo_1/como_interpretar_atalhos_e_comandos/#como-interpretar-atalhos-e-comandos","title":"Como interpretar atalhos e comandos","text":"<p>A tecla <code>&lt;Ctrl&gt;</code> \u00e9 representada na maioria dos manuais e na ajuda pelo caractere <code>^</code> (circunflexo), ou seja, o atalho <code>Ctrl-L</code> aparecer\u00e1 assim: <pre><code>^L\n</code></pre></p> <p>No arquivo de configura\u00e7\u00e3o do Vim, um <code>&lt;Enter&gt;</code> pode aparecer como: <pre><code>&lt;cr&gt;\n</code></pre></p> <p>Para saber mais sobre como usar atalhos no Vim veja a se\u00e7\u00e3o Mapeamentos e para ler sobre o arquivo de configura\u00e7\u00e3o veja o cap\u00edtulo Como editar prefer\u00eancias no Vim.</p>"},{"location":"capitulo_1/dicas_iniciais/","title":"Dicas iniciais","text":""},{"location":"capitulo_1/dicas_iniciais/#dicas-iniciais","title":"Dicas iniciais","text":"<p>Ao longo do livro alguns comandos ou dicas podem estar duplicados, o que \u00e9 \u00fatil devido ao contexto e tamb\u00e9m porque o aprendizado por satura\u00e7\u00e3o \u00e9 um \u00f3timo recurso. Ao perceber uma dica duplicada, antes de reclamar veja se j\u00e1 sabe o que est\u00e1 sendo passado. Contudo dicas e sugest\u00f5es ser\u00e3o bem vindas!</p> <p>Para abrir um arquivo com Vim digite em um terminal: <pre><code>vim texto.txt\n</code></pre> onde <code>texto.txt</code> \u00e9 o nome do arquivo que deseja-se criar ou editar.</p> <p>Em algumas distribui\u00e7\u00f5es, pode-se usar o comando <code>vi</code> ao inv\u00e9s de <code>vim</code>.</p>"},{"location":"capitulo_1/em_caso_de_erros/","title":"Em caso de erros","text":""},{"location":"capitulo_1/em_caso_de_erros/#em-caso-de-erros","title":"Em caso de erros","text":"<p>Recarregue o arquivo que est\u00e1 sendo editado pressionando <code>Esc</code> e em seguida usando o comando <code>:e</code>, ou simplesmente inicie outro arquivo ignorando o atual, com o comando <code>:enew!</code>, ou saia do arquivo sem modifica-lo, com <code>:q!</code>. Pode-se ainda tentar gravar for\u00e7ado com o comando <code>:wq!</code>.</p>"},{"location":"capitulo_1/entrando_em_modo_de_edicao/","title":"Entrando em modo de edi\u00e7\u00e3o","text":""},{"location":"capitulo_1/entrando_em_modo_de_edicao/#entrando-em-modo-de-edicao","title":"Entrando em modo de edi\u00e7\u00e3o","text":"<p>Estando no modo normal, digita-se: <pre><code>a .... inicia inser\u00e7\u00e3o de texto ap\u00f3s o caractere atual\ni .... inicia inser\u00e7\u00e3o de texto antes do caractere atual\nA .... inicia inser\u00e7\u00e3o de texto no final da linha\nI .... inicia inser\u00e7\u00e3o de texto no come\u00e7o da linha\no .... inicia inser\u00e7\u00e3o de texto na linha abaixo\nO .... inicia inser\u00e7\u00e3o de texto na linha acima\ngi ... inicia inser\u00e7\u00e3o no \u00faltimo ponto onde ocorreu inser\u00e7\u00e3o\n</code></pre></p> <p>Outra possibilidade \u00e9 utilizar a tecla <code>&lt;Insert&gt;</code> para entrar no modo de inser\u00e7\u00e3o de texto antes do caractere atual, ou seja, o mesmo que a tecla <code>i</code>. Uma vez no modo de inser\u00e7\u00e3o, a tecla <code>&lt;Insert&gt;</code> permite alternar o modo de digita\u00e7\u00e3o de inser\u00e7\u00e3o simples de caracteres para substitui\u00e7\u00e3o de caracteres.</p> <p>Agora come\u00e7amos a sentir o gostinho de usar o Vim, uma tecla seja mai\u00fascula ou min\u00fascula, faz muita diferen\u00e7a se voc\u00ea n\u00e3o estiver em modo de inser\u00e7\u00e3o, e para sair do modo de inser\u00e7\u00e3o e voltar ao modo normal sempre use <code>&lt;Esc&gt;</code>.</p>"},{"location":"capitulo_1/erros_comuns/","title":"Erros comuns","text":""},{"location":"capitulo_1/erros_comuns/#erros-comuns","title":"Erros comuns","text":"<ul> <li> <p>Estando em modo de inser\u00e7\u00e3o pressionar     <code>j</code> na inten\u00e7\u00e3o de rolar o documento, neste caso     estaremos inserindo simplesmente a letra <code>j</code>.</p> </li> <li> <p>Estando em modo normal acionar acidentalmente o <code>&lt;Caps Lock&gt;</code> e tentar     rolar o documento usando a letra <code>J</code>, o efeito \u00e9 a jun\u00e7\u00e3o das linhas, ali\u00e1s um \u00f3timo recurso quando a inten\u00e7\u00e3o \u00e9 de fato esta.</p> </li> <li> <p>Em modo normal tentar digitar um n\u00famero seguido de uma palavra e ao     perceber que nada est\u00e1 sendo digitado, iniciar o modo de inser\u00e7\u00e3o,     digitando por fim o que se queria, o resultado \u00e9 que o n\u00famero que     foi digitado inicialmente vira um quantificador para o que se     digitou ao entrar no modo de inser\u00e7\u00e3o. A palavra aparecer\u00e1 repetida     na quantidade do n\u00famero digitado. Assim, se voc\u00ea quiser digitar 10     vezes <code>isto \u00e9 um teste</code> fa\u00e7a assim: <pre><code>&lt;Esc&gt; ........... se assegure de estar em modo normal\n10 .............. quantificador\ni ............... entra no modo de inser\u00e7\u00e3o\nisto \u00e9 um teste &lt;Enter&gt; &lt;Esc&gt;\n</code></pre></p> </li> </ul> <p>Alguns atalhos \u00fateis\u2026 <pre><code>Ctrl-O ..... comando do modo normal no modo insert\ni Ctrl-a ... repetir a \u00faltima inser\u00e7\u00e3o\n@: ......... repetir o \u00faltimo comando\nShift-insert colar texto da \u00e1rea de transfer\u00eancia\ngi ......... modo de inser\u00e7\u00e3o no mesmo ponto da \u00faltima vez\ngv ......... repete sele\u00e7\u00e3o visual\n</code></pre></p> <p>Para saber mais sobre repeti\u00e7\u00e3o de comandos veja o cap\u00edtulo Repeti\u00e7\u00e3o de comandos.</p> <p>No Vim, cada arquivo aberto \u00e9 chamado de <code>buffer</code>, ou seja, dados carregados na mem\u00f3ria. Voc\u00ea pode acessar o mesmo buffer em mais de uma janela, bem como dividir a janela em v\u00e1rios buffers distintos o que veremos mais adiante.</p>"},{"location":"capitulo_1/instalacao_do_vim/","title":"Instala\u00e7\u00e3o do vim","text":""},{"location":"capitulo_1/instalacao_do_vim/#instalacao-do-vim","title":"Instala\u00e7\u00e3o do Vim","text":""},{"location":"capitulo_1/instalacao_do_vim/#instalacao-no-windows","title":"Instala\u00e7\u00e3o no Windows","text":"<p>H\u00e1 uma vers\u00e3o gr\u00e1fica do Vim dispon\u00edvel para v\u00e1rios sistemas operacionais, incluindo o Windows; esta vers\u00e3o pode ser encontrada no site oficial. Para instal\u00e1-lo basta baixar o instalador no link indicado e dispar\u00e1-lo com um duplo clique (este procedimento requer privil\u00e9gios de administrador).</p>"},{"location":"capitulo_1/instalacao_do_vim/#instalacao-no-gnulinux","title":"Instala\u00e7\u00e3o no GNU/Linux","text":"<p>A maioria das distribui\u00e7\u00f5es GNU/Linux traz o Vim em seus reposit\u00f3rios, sendo que \u00e9 bastante comum o Vim j\u00e1 vir inclu\u00eddo na instala\u00e7\u00e3o t\u00edpica da distribui\u00e7\u00e3o. A forma de instala\u00e7\u00e3o prefer\u00edvel depende da distribui\u00e7\u00e3o:</p> <ul> <li> <p>J\u00e1 vir instalado por default \u2013 neste caso nada     precisa ser feito.</p> </li> <li> <p>Estar dispon\u00edvel no reposit\u00f3rio, mas n\u00e3o instalado \u2013 em     distribui\u00e7\u00f5es derivadas da Debian GNU/Linux<sup>1</sup>, a instala\u00e7\u00e3o do Vim     atrav\u00e9s dos reposit\u00f3rios \u00e9 usualmente executada digitando-se     <code>apt-get install vim</code><sup>2</sup> em um terminal     (este procedimento requer privil\u00e9gios de administrador e,     tipicamente, conex\u00e3o com a internet).</p> <p>Algumas distribui\u00e7\u00f5es GNU/Linux dividem o programa Vim em v\u00e1rios pacotes. Pacotes adicionais como <code>gvim</code>, <code>vim-enhanced</code>, <code>vim-python</code><sup>3</sup>, entre outros, representam diferentes vers\u00f5es do mesmo aplicativo. O <code>gvim</code> \u00e9 a vers\u00e3o gr\u00e1fica do Vim e o <code>vim-enhanced</code> \u00e9 uma vers\u00e3o do vim compilada com um suporte interno ao Python<sup>4</sup>. A alternativa para resolver esse problema \u00e9 buscar na documenta\u00e7\u00e3o da distribui\u00e7\u00e3o o que significa cada pacote.</p> </li> <li> <p>N\u00e3o estar dispon\u00edvel no reposit\u00f3rio da distribui\u00e7\u00e3o \u2013 cen\u00e1rio     muito improv\u00e1vel, mas nas sua ocorr\u00eancia o Vim pode     ser instalado atrav\u00e9s da compila\u00e7\u00e3o do c\u00f3digo-fonte; basta seguir as     instru\u00e7\u00f5es do site oficial.</p> </li> </ul> <ol> <li> <p>Debian GNU/Linux - http://www.debian.org/index.pt.html \u21a9</p> </li> <li> <p>Recomenda-se tamb\u00e9m instalar a documenta\u00e7\u00e3o em HTML do Vim: <code>apt-get install vim-doc</code> \u21a9</p> </li> <li> <p>Para ubuntu e Debian\u00a0\u21a9</p> </li> <li> <p>O Python (http://www.python.org) \u00e9 uma linguagem de programa\u00e7\u00e3o orientada a objetos muito comum no meio profissional e acad\u00eamico\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_1/introducao/","title":"Introdu\u00e7\u00e3o","text":"<p>A edi\u00e7\u00e3o de texto \u00e9 uma das tarefas mais frequentemente executadas por seres humanos em ambientes computacionais, em qualquer n\u00edvel. Usu\u00e1rios finais, administradores de sistemas, programadores de software, desenvolvedores web, e tantas outras categorias, todos eles, constantemente, necessitam editar textos.</p> <p>Usu\u00e1rios finais editam texto para criar documentos, enviar e-mails, atualizar o blog, escrever recados ou simplesmente trocar mensagens instant\u00e2neas pela internet. Administradores de sistemas editam arquivos de configura\u00e7\u00e3o, criam regras de seguran\u00e7a, editam scripts e manipulam sa\u00eddas de comandos armazenados em arquivos de texto. Programadores desenvolvem c\u00f3digos-fonte e a documenta\u00e7\u00e3o de programas essencialmente em editores de texto. Desenvolvedores web interagem com editores de texto para criarem layout e din\u00e2mica de sites.</p> <p>Tamanha \u00e9 a frequ\u00eancia e onipresen\u00e7a da tarefa de edi\u00e7\u00e3o de texto que a efici\u00eancia, flexibilidade e o repert\u00f3rio de ferramentas de editores de texto tornam-se quesitos cr\u00edticos para se atingir produtividade e conforto na edi\u00e7\u00e3o de textos.</p> <p>Qualquer tarefa de aprendizado requer um certo esfor\u00e7o. Todo programa introduz novos conceitos, op\u00e7\u00f5es e configura\u00e7\u00f5es que transformam o modus operandi do usu\u00e1rio. Em princ\u00edpio, quanto maior o esfor\u00e7o, maior o benef\u00edcio. Quem quer apenas escrever textos, pode-se contentar com um editor b\u00e1sico, cuja as \u00fanicas op\u00e7\u00f5es s\u00e3o digitar o texto, abrir e salvar o documento ou pode utilizar um editor que permita pr\u00e9-configurar a\u00e7\u00f5es, formatar o conte\u00fado, revisar a ortografia, etc, al\u00e9m da a\u00e7\u00e3o b\u00e1sica que \u00e9 escrever textos.</p> <p>Qualquer usu\u00e1rio de computador pode abrir o primeiro tipo de editor e imediatamente come\u00e7ar a escrever, a curto prazo, sua a\u00e7\u00e3o ter\u00e1 consequ\u00eancias imediatas e n\u00e3o requer conhecimentos adicionais. Por outro lado, esse usu\u00e1rio ter\u00e1 que fazer esfor\u00e7o para digitar o mesmos cabe\u00e7alho todos os dias.</p> <p>O outro tipo de editor permite que o usu\u00e1rio pr\u00e9-configure o cabe\u00e7alho do documento e todos os dias esse trecho j\u00e1 estar\u00e1 digitado. Em contrapartida, o usu\u00e1rio deve aprender como pr\u00e9-configurar o editor. O que requer esfor\u00e7o para aprender a utilizar o programa escolhido. O benef\u00edcio somente ser\u00e1 observado a m\u00e9dio/longo prazo, quando o tempo ganho ao utilizar a configura\u00e7\u00e3o ser\u00e1 superior ao tempo consumido aprendendo sobre o programa. O \u201cVim\u201d<sup>1</sup> \u00e9 um editor de texto extremamente configur\u00e1vel, criado para permitir a edi\u00e7\u00e3o de forma eficiente, tornando-a produtiva e confort\u00e1vel. Tamb\u00e9m \u00e9 uma aprimora\u00e7\u00e3o do editor \u201cVi\u201d, um tradicional programa dos sistemas Unix. Possui uma s\u00e9rie de mudan\u00e7as em rela\u00e7\u00e3o a este \u00faltimo. O pr\u00f3prio slogan do Vim \u00e9 Vi IMproved, ou seja, Vi Melhorado. O Vim \u00e9 t\u00e3o conhecido e respeitado entre programadores, e t\u00e3o \u00fatil para programa\u00e7\u00e3o, que muitos o consideram uma verdadeira \u201cIDE (Integrated Development Environment, em portugu\u00eas, Ambiente Integrado de Desenvolvimento)\u201d.</p> <p>Ele \u00e9 capaz de reconhecer mais de 500 sintaxes de linguagens de programa\u00e7\u00e3o e marca\u00e7\u00e3o, possui mapeamento para teclas, macros, abrevia\u00e7\u00f5es, busca por Express\u00f5es Regulares<sup>2</sup>, entre outras facilidades.</p> <p>A figura\u00a01.1 mostra o vim sendo usando para editar o arquivo o desse livro sobre vim.</p> <p></p> <p>Figura 1.1 - Usando o vim para editar o c\u00f3digo em LaTex</p> <p>O Vim conta com uma comunidade bastante atuante e \u00e9, ao lado do Emacs<sup>3</sup>, um dos editores mais usados nos sistemas GNU/Linux<sup>4</sup>, embora esteja tamb\u00e9m dispon\u00edvel em outros sistemas, como o Windows e o Macintosh.</p> <ol> <li> <p>Vim - http://www.vim.org \u21a9</p> </li> <li> <p>Express\u00f5es Regulares - http://guia-er.sourceforge.net/guia-er.html \u21a9</p> </li> <li> <p>Emacs - http://www.gnu.org/software/emacs/ \u21a9</p> </li> <li> <p>O kernel Linux sem os programas GNU n\u00e3o serviria para muita coisa.\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_1/modos_de_operacao/","title":"Modos de opera\u00e7\u00e3o","text":""},{"location":"capitulo_1/modos_de_operacao/#modos-de-operacao","title":"Modos de opera\u00e7\u00e3o","text":"<p>A tabela abaixo mostra uma refer\u00eancia r\u00e1pida para os modos de opera\u00e7\u00e3o do Vim, a seguir mais detalhes sobre cada um dos modos.</p> Modo Descri\u00e7\u00e3o Atalho Normal Para deletar, copiar, formatar, etc <code>&lt;esc&gt;</code> Inser\u00e7\u00e3o Prioritariamente, digita\u00e7\u00e3o de texto i, a, I, A, o, O Visual Sele\u00e7\u00e3o de blocos verticais e linhas inteiras V, v, Ctrl-v Comando Uma verdadeira linguagem de programa\u00e7\u00e3o <code>&lt;esc&gt;</code>: <p>Em oposi\u00e7\u00e3o \u00e0 esmagadora maioria dos editores o Vim \u00e9 um editor que trabalha com \u201cmodos de opera\u00e7\u00e3o (modo de inser\u00e7\u00e3o, modo normal, modo visual e etc)\u201d, o que a princ\u00edpio dificulta a vida do iniciante, mas abre um universo de possibilidades, pois ao trabalhar com modos distintos uma tecla de atalho pode ter v\u00e1rios significados, exemplificando: Em modo normal pressionar <code>dd</code> apaga a linha atual, j\u00e1 em modo de inser\u00e7\u00e3o ele ir\u00e1 se comportar como se voc\u00ea estivesse usando qualquer outro editor, ou seja, ir\u00e1 inserir duas vezes a letra <code>d</code>. Em modo normal pressionar a tecla <code>v</code> inicia uma sele\u00e7\u00e3o visual (use as setas de dire\u00e7\u00e3o). Para sair do modo visual <code>&lt;Esc&gt;</code>. Como um dos princ\u00edpios do vim \u00e9 agilidade pode-se usar ao inv\u00e9s de setas (em modo normal) as letras <code>h,l,k,j</code> como se fossem setas: <pre><code>    k\nh       l\n    j\n</code></pre></p> <p>Imagine as letras acima como teclas de dire\u00e7\u00e3o, a letra <code>k</code> \u00e9 uma seta acima a letra <code>j</code> \u00e9 uma seta abaixo e assim por diante.</p>"},{"location":"capitulo_10/comandos_relativos_a_verificacao_ortografica/","title":"Comandos relativos \u00e0 verifica\u00e7\u00e3o ortogr\u00e1fica","text":""},{"location":"capitulo_10/comandos_relativos_a_verificacao_ortografica/#comandos-relativos-a-verificacao-ortografica","title":"Comandos relativos \u00e0 verifica\u00e7\u00e3o ortogr\u00e1fica","text":""},{"location":"capitulo_10/comandos_relativos_a_verificacao_ortografica/#encontrando-palavras-desconhecidas","title":"Encontrando palavras desconhecidas","text":"<p>Muito embora o verificador ortogr\u00e1fico cheque imediatamente cada palavra digitada, sinalizando-a ao usu\u00e1rio caso n\u00e3o a reconhe\u00e7a, \u00e0s vezes \u00e9 mais apropriado realizar a verifica\u00e7\u00e3o ortogr\u00e1fica do documento por inteiro. O Vim disp\u00f5e de comandos espec\u00edficos para busca e movimenta\u00e7\u00e3o em palavras grafadas incorretamente (desconhecidas) no escopo do documento, dentre eles: <pre><code>]s ..... vai para a pr\u00f3xima palavra desconhecida\n[s ..... como o ]s, mas procura no sentido oposto\n</code></pre> Ambos os comandos aceitam um prefixo num\u00e9rico, que indica a quantidade de movimenta\u00e7\u00f5es (buscas). Por exemplo, o comando 3]s vai para a terceira palavra desconhecida a partir da posi\u00e7\u00e3o atual.</p>"},{"location":"capitulo_10/comandos_relativos_a_verificacao_ortografica/#tratamento-de-palavras-desconhecidas","title":"Tratamento de palavras desconhecidas","text":"<p>H\u00e1 basicamente duas opera\u00e7\u00f5es poss\u00edveis no tratamento de uma palavra apontada pelo verificador ortogr\u00e1fico do Vim como desconhecida:</p> <ol> <li> <p>corrigi-la \u2013 identificando o erro com ou sem o     aux\u00edlio das sugest\u00f5es do Vim.</p> </li> <li> <p>cadastr\u00e1-la no dicion\u00e1rio \u2013 ensinando o Vim a     reconhecer sua grafia.</p> </li> </ol> <p>Assume-se nos comandos descritos nas se\u00e7\u00f5es a seguir que o cursor do editor encontra-se sobre a palavra marcada como desconhecida.</p>"},{"location":"capitulo_10/comandos_relativos_a_verificacao_ortografica/#correcao-de-palavras-grafadas-incorretamente","title":"Corre\u00e7\u00e3o de palavras grafadas incorretamente","text":"<p>\u00c9 poss\u00edvel que na maioria das vezes o usu\u00e1rio perceba qual foi o erro cometido na grafia, de forma que o pr\u00f3prio possa corrigi-la sem aux\u00edlio externo. No entanto, algumas vezes o erro n\u00e3o \u00e9 evidente, e sugest\u00f5es fornecidas pelo Vim podem ser bastante convenientes. Para listar as sugest\u00f5es para a palavra em quest\u00e3o executa-se: <pre><code>z= ..... solicita sugest\u00f5es ao verificador ortogr\u00e1fico\n</code></pre> Se alguma das sugest\u00f5es \u00e9 v\u00e1lida \u2013 as mais prov\u00e1veis est\u00e3o nas primeiras posi\u00e7\u00f5es \u2013 ent\u00e3o basta digitar seu prefixo num\u00e9rico e pressionar <code>&lt;Enter&gt;</code>. Se nenhuma sugest\u00e3o for adequada, basta simplesmente pressionar <code>&lt;Enter&gt;</code> e ignorar a corre\u00e7\u00e3o.</p>"},{"location":"capitulo_10/comandos_relativos_a_verificacao_ortografica/#cadastramento-de-novas-palavras-no-dicionario","title":"Cadastramento de novas palavras no dicion\u00e1rio","text":"<p>Por mais completo que um dicion\u00e1rio seja, eventualmente palavras, especialmente as de menor abrang\u00eancia, ter\u00e3o que ser cadastradas a fim de aprimorar a exatid\u00e3o da verifica\u00e7\u00e3o ortogr\u00e1fica. A manuten\u00e7\u00e3o do dicion\u00e1rio d\u00e1-se pelo cadastramento e retirada de palavras: <pre><code>zg ..... adiciona a palavra no dicion\u00e1rio\nzw ..... retira a palavra no dicion\u00e1rio, marcando-a como\n         `desconhecida'\n</code></pre></p>"},{"location":"capitulo_10/dicionario_de_termos/","title":"O dicion\u00e1rio de termos","text":""},{"location":"capitulo_10/dicionario_de_termos/#o-dicionario-de-termos","title":"O dicion\u00e1rio de termos","text":"<p>A qualidade da verifica\u00e7\u00e3o ortogr\u00e1fica do Vim est\u00e1 diretamente ligada \u00e0 completude e corretude do dicion\u00e1rio da linguagem em quest\u00e3o. Dicion\u00e1rios pouco completos s\u00e3o inconvenientes \u00e0 medida que acusam falso positivos em demasia; pior, dicion\u00e1rios contendo palavras grafadas incorretamente, al\u00e9m de acusarem falso positivos, induzem o usu\u00e1rio ao erro ao sugerirem grafias erradas.</p> <p>\u00c9 razoavelmente comum o Vim j\u00e1 vir instalado com dicion\u00e1rios de relativa qualidade para algumas linguagens (ao menos ingl\u00eas, habitualmente). Entretanto, ainda \u00e9 raro para a maioria das instala\u00e7\u00f5es do Vim trazer por default um dicion\u00e1rio realmente completo e atualizado da l\u00edngua portuguesa. A pr\u00f3xima se\u00e7\u00e3o sintetiza, pois, os passos para a instala\u00e7\u00e3o de um excelente\u2014e dispon\u00edvel livremente\u2014dicion\u00e1rio de palavras para a l\u00edngua portuguesa.</p>"},{"location":"capitulo_10/dicionario_de_termos/#dicionario-portugues-segundo-o-acordo-ortografico","title":"Dicion\u00e1rio portugu\u00eas segundo o acordo ortogr\u00e1fico","text":"<p>A equipe do projeto BrOffice.org e seus colaboradores mant\u00eam e disponibilizam livremente um grandioso dicion\u00e1rio de palavras da l\u00edngua portuguesa. Al\u00e9m do expressivo n\u00famero de termos, o dicion\u00e1rio contempla as mudan\u00e7as ortogr\u00e1ficas definidas pelo Acordo Ortogr\u00e1fico que entraram em vigor no in\u00edcio de 2009.</p> <p>A instala\u00e7\u00e3o envolve tr\u00eas passos, s\u00e3o eles:</p> <ol> <li> <p>obten\u00e7\u00e3o do dicion\u00e1rio atrav\u00e9s do site BrOffice.org;</p> </li> <li> <p>convers\u00e3o para o formato interno de dicion\u00e1rio do Vim; e</p> </li> <li> <p>instala\u00e7\u00e3o dos arquivos resultantes.</p> </li> </ol>"},{"location":"capitulo_10/dicionario_de_termos/#obtencao-do-dicionario","title":"Obten\u00e7\u00e3o do dicion\u00e1rio","text":"<p>O dicion\u00e1rio pode ser obtido no site do libreoffice. O arquivo baixado encontra-se compactado no formato oxt, bastando portanto descompact\u00e1-lo com qualquer utilit\u00e1rio compat\u00edvel com este formato, por exemplo, o comando unzip.</p>"},{"location":"capitulo_10/dicionario_de_termos/#conversao-do-dicionario","title":"Convers\u00e3o do dicion\u00e1rio","text":"<p>Ap\u00f3s a descompacta\u00e7\u00e3o, os arquivos <code>pt_BR.aff</code> e <code>pt_BR.dic</code>, extra\u00eddos no diret\u00f3rio corrente<sup>1</sup>, ser\u00e3o usados para a cria\u00e7\u00e3o dos dicion\u00e1rios no formato interno do Vim<sup>2</sup>. A convers\u00e3o propriamente dita \u00e9 feita pelo pr\u00f3prio Vim atrav\u00e9s do comando mkspell:</p> <ol> <li> <p>Carrega-se o Vim a partir do diret\u00f3rio onde foram extra\u00eddos     <code>pt_BR.aff</code> e <code>pt_BR.dic</code></p> </li> <li> <p>O comando mkspell \u00e9 ent\u00e3o executado como: <pre><code>:mkspell pt pt_BR\n</code></pre> O Vim ent\u00e3o gera um arquivo de dicion\u00e1rio da forma <code>pt.&lt;codifica\u00e7\u00e3o&gt;.spl</code>, onde <code>&lt;codifica\u00e7\u00e3o&gt;</code> \u00e9 a codifica\u00e7\u00e3o de caracteres do sistema, normalmente <code>utf-8</code> ou <code>latin1</code>; caso queira-se um dicion\u00e1rio em uma codifica\u00e7\u00e3o diferente da padr\u00e3o ser\u00e1 preciso ajustar a vari\u00e1vel encoding antes da invoca\u00e7\u00e3o do comando mkspell: <pre><code>:set encoding=&lt;codifica\u00e7\u00e3o&gt;\n:mkspell pt pt_BR\n</code></pre></p> </li> </ol>"},{"location":"capitulo_10/dicionario_de_termos/#instalacao-dos-dicionarios-gerados","title":"Instala\u00e7\u00e3o do(s) dicion\u00e1rio(s) gerado(s)","text":"<p>Finalmente, o dicion\u00e1rio gerado\u2014ou os dicion\u00e1rios, dependendo do uso ou n\u00e3o de codifica\u00e7\u00f5es diferentes\u2014deve ser copiado para o subdiret\u00f3rio spell/ dentro de qualquer caminho (diret\u00f3rio) que o Vim \u201cenxergue\u201d. A lista de caminhos lidos pelo Vim encontra-se na vari\u00e1vel runtimepath, que pode ser inspecionada atrav\u00e9s de: <pre><code>:set runtimepath\n</code></pre> \u00c9 suficiente ent\u00e3o copiar o dicion\u00e1rio <code>pt.&lt;codifica\u00e7\u00e3o&gt;.spl</code> para o subdiret\u00f3rio spell/ em qualquer um dos caminhos listados atrav\u00e9s do comando mostrado.</p> <ol> <li> <p>Eventualmente, dependendo da vers\u00e3o do pacote de corre\u00e7\u00e3o ortogr\u00e1fica, os arquivos de dicion\u00e1rio podem ser extra\u00eddos no subdiret\u00f3rio dictionaries ou outro qualquer.\u00a0\u21a9</p> </li> <li> <p>O formato interno de dicion\u00e1rio do Vim assegura melhor desempenho, em termos de agilidade e consumo de mem\u00f3ria, quando a verifica\u00e7\u00e3o ortogr\u00e1fica do editor encontra-se em opera\u00e7\u00e3o.\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_10/habilitando_a_verificacao_ortografica/","title":"Habilitando a verifica\u00e7\u00e3o ortogr\u00e1fica","text":""},{"location":"capitulo_10/habilitando_a_verificacao_ortografica/#habilitando-a-verificacao-ortografica","title":"Habilitando a verifica\u00e7\u00e3o ortogr\u00e1fica","text":"<p>A verifica\u00e7\u00e3o ortogr\u00e1fica atua em uma linguagem (dicion\u00e1rio) por vez, portanto, sua efetiva habilita\u00e7\u00e3o depende da especifica\u00e7\u00e3o desta linguagem. Por exemplo, para habilitar no arquivo em edi\u00e7\u00e3o a verifica\u00e7\u00e3o ortogr\u00e1fica na l\u00edngua portuguesa (ptis_active), assumindo-se a exist\u00eancia do dicion\u00e1rio em quest\u00e3o: <pre><code>:setlocal spell spelllang=pt\n</code></pre> ou de forma abreviada: <pre><code>:setl spell spl=pt\n</code></pre> Trocando-se setlocalis_active (setlis_active) por apenas setis_active (seis_active) faz com que o comando tenha efeito global, isto \u00e9, todos os arquivos da sess\u00e3o corrente do Vim estariam sob efeito da verifica\u00e7\u00e3o ortogr\u00e1fica e do mesmo dicion\u00e1rio (no caso o ptis_active).</p> <p>A desabilita\u00e7\u00e3o da verifica\u00e7\u00e3o d\u00e1-se digitando: <pre><code>:setlocal nospell\n:set nospell            (efeito global)\n</code></pre> Caso queira-se apenas alterar o dicion\u00e1rio de verifica\u00e7\u00e3o ortogr\u00e1fica, suponha para a l\u00edngua inglesa (enis_active), basta: <pre><code>:setlocal spelllang=en\n:set spelllang=en       (efeito global)\n</code></pre></p>"},{"location":"capitulo_10/habilitando_a_verificacao_ortografica/#habilitacao-automatica-na-inicializacao","title":"Habilita\u00e7\u00e3o autom\u00e1tica na inicializa\u00e7\u00e3o","text":"<p>\u00c0s vezes torna-se cansativo a digita\u00e7\u00e3o expl\u00edcita do comando de habilita\u00e7\u00e3o da verifica\u00e7\u00e3o ortogr\u00e1fica sempre quando desejada. Seria conveniente se o Vim habilitasse automaticamente a verifica\u00e7\u00e3o para aqueles tipos de arquivos que comumente fazem uso da verifica\u00e7\u00e3o ortogr\u00e1fica, como por exemplo arquivos \u201ctexto\u201d. Isto \u00e9 poss\u00edvel editando-se o arquivo de configura\u00e7\u00e3o do Vim .vimrc(veja Como Editar Prefer\u00eancias no Vim) e incluindo as seguintes linhas: <pre><code>autocmd Filetype text setl spell spl=pt\nautocmd BufNewFile,BufRead *.txt setl spell spl=pt\n</code></pre> Assim habilita-se automaticamente a verifica\u00e7\u00e3o ortogr\u00e1fica usando o dicion\u00e1rio da l\u00edngua portuguesa (pt) para arquivos do tipo texto e os terminados com a extens\u00e3o .txt. Mais tecnicamente, diz-se ao Vim para executar o comando <code>setl spell spl=pt</code> sempre quando o tipo do arquivo (Filetype) for text (texto) ou quando um arquivo com extens\u00e3o .txt for carregado (BufRead) ou criado (BufNewFile).</p>"},{"location":"capitulo_10/verificacao_ortografica/","title":"Verifica\u00e7\u00e3o Ortogr\u00e1fica","text":"<p>O Vim possui um recurso nativo de verifica\u00e7\u00e3o ortogr\u00e1fica (spell) em tempo de edi\u00e7\u00e3o, apontando palavras e express\u00f5es desconhecidas\u2014usualmente erros de grafia\u2014enquanto o usu\u00e1rio as digita.</p> <p>Basicamente, para cada palavra digitada o Vim procura por sua grafia em um dicion\u00e1rio. N\u00e3o encontrando-a, a palavra \u00e9 marcada como desconhecida (sublinhando-a ou alterando sua cor), e fornece ao usu\u00e1rio mecanismos para corrigi-la (atrav\u00e9s de sugest\u00f5es) ou cadastr\u00e1-la no dicion\u00e1rio caso esteja de fato grafada corretamente.</p>"},{"location":"capitulo_11/criando_sessoes/","title":"Criando sess\u00f5es","text":""},{"location":"capitulo_11/criando_sessoes/#criando-sessoes","title":"Criando sess\u00f5es","text":"<p>Sess\u00f5es s\u00e3o criadas atrav\u00e9s do comando <code>:mksession</code>: <pre><code>:mks[ession] sessao.vim .... cria a sess\u00e3o e armazena-a em sessao.vim\n:mks[ession]! sessao.vim ... salva a sess\u00e3o e sobrescreve-a em sessao.vim\n</code></pre></p>"},{"location":"capitulo_11/o_que_uma_sessao_armazena/","title":"O que uma sess\u00e3o armazena?","text":""},{"location":"capitulo_11/o_que_uma_sessao_armazena/#o-que-uma-sessao-armazena","title":"O que uma sess\u00e3o armazena?","text":"<p>Uma sess\u00e3o \u00e9 composta das seguintes informa\u00e7\u00f5es:</p> <ul> <li> <p>Mapeamentos globais</p> </li> <li> <p>Vari\u00e1veis globais</p> </li> <li> <p>Arquivos abertos incluindo a lista de buffers</p> </li> <li> <p>Diret\u00f3rio corrente ( :h curdir)</p> </li> <li> <p>Posi\u00e7\u00e3o e tamanho das janelas (o layout)</p> </li> </ul>"},{"location":"capitulo_11/restaurando_sessoes/","title":"Restaurando sess\u00f5es","text":""},{"location":"capitulo_11/restaurando_sessoes/#restaurando-sessoes","title":"Restaurando sess\u00f5es","text":"<p>Ap\u00f3s gravar sess\u00f5es, elas podem ser carregadas ao iniciar o Vim: <pre><code>vim -S sessao.vim\n</code></pre> ou ent\u00e3o de dentro do pr\u00f3prio Vim (no modo de comando): <pre><code>:so sessao.vim\n</code></pre> Ap\u00f3s restaurar a sess\u00e3o, o nome da sess\u00e3o corrente \u00e9 acess\u00edvel atrav\u00e9s de uma vari\u00e1vel interna <code>v:this_session</code>; caso queira-se exibir na linha de comando o nome da sess\u00e3o ativa (incluindo o caminho), faz-se: <pre><code>:echo v:this_session\n</code></pre> Podemos fazer mapeamentos para atualizar a sess\u00e3o atual e exibir detalhes da mesma: <pre><code>\"mapeamento para gravar sess\u00e3o\nnmap &lt;F4&gt; :wa&lt;Bar&gt;exe \"mksession! \" . v:this_session&lt;CR&gt;:so ~/sessions/\n\n\"mapeamento para exibir a sess\u00e3o ativa\nmap &lt;s-F4&gt; &lt;esc&gt;:echo v:this_session&lt;cr&gt;\n</code></pre></p>"},{"location":"capitulo_11/salvando_sessoes_de_trabalho/","title":"Salvando Sess\u00f5es de Trabalho","text":"<p>Suponha a situa\u00e7\u00e3o em que um usu\u00e1rio est\u00e1 trabalhando em um projeto no qual v\u00e1rios arquivos s\u00e3o editados simultaneamente; quatro arquivos est\u00e3o abertos, algumas macros foram criadas e vari\u00e1veis que n\u00e3o constam no <code>vimrc</code> foram definidas. Em uma situa\u00e7\u00e3o normal, se o Vim for fechado a quase totalidade dessas informa\u00e7\u00f5es se perde<sup>1</sup>; para evitar isto uma sess\u00e3o pode ser criada, gerando-se um \u201cretrato do estado atual\u201d, e ent\u00e3o restaurada futuramente pelo usu\u00e1rio\u2014na pr\u00e1tica \u00e9 como se o usu\u00e1rio n\u00e3o tivesse sa\u00eddo do editor.</p> <p>Uma sess\u00e3o do Vim guarda, portanto, uma s\u00e9rie de informa\u00e7\u00f5es sobre a edi\u00e7\u00e3o corrente, de modo a permitir que o usu\u00e1rio possa restaur\u00e1-la quando desejar. Sess\u00f5es s\u00e3o bastante \u00fateis, por exemplo, para se alternar entre diferentes projetos, carregando-se rapidamente os arquivos e defini\u00e7\u00f5es relativas a cada projeto.</p> <ol> <li> <p>Algumas informa\u00e7\u00f5es, no entanto, s\u00e3o automaticamente armazenadas no arquivo viminfo; veja :h viminfo\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_11/viminfo/","title":"Viminfo","text":""},{"location":"capitulo_11/viminfo/#viminfo","title":"Viminfo","text":"<p>Se o Vim for fechado e iniciado novamente, normalmente perder\u00e1 uma por\u00e7\u00e3o consider\u00e1vel de informa\u00e7\u00f5es. A diretiva viminfo pode ser usada para memorizar estas informa\u00e7\u00f5es.</p> <ul> <li> <p>Hist\u00f3rico da linha de comando</p> </li> <li> <p>Hist\u00f3rico de buscas</p> </li> <li> <p>Hist\u00f3rico de entradas input-line history</p> </li> <li> <p>Conte\u00fado de registradores n\u00e3o vazios</p> </li> <li> <p>Marcas de v\u00e1rios arquivos</p> </li> <li> <p>\u00daltimo padr\u00e3o de busca/substitui\u00e7\u00e3o</p> </li> <li> <p>A lista de buffers</p> </li> <li> <p>Vari\u00e1veis globais</p> </li> </ul> <p>Deve-se colocar no arquivo de configura\u00e7\u00e3o algo como:</p> <pre><code>set viminfo=%,'50,\\\"100,/100,:100,n\n</code></pre> <p>Algumas op\u00f5es da diretiva viminfo:</p> <p>!</p> <p>:   Quando inclu\u00eddo salva e restaura vari\u00e1veis globais (vari\u00e1veis com     letra mai\u00fascula) e que n\u00e3o cont\u00e9m letras em min\u00fasculo como     MANTENHAISTO.</p> <p>\"</p> <p>:   N\u00famero m\u00e1ximo de linhas salvas para cada registrador.</p> <p>%</p> <p>:   Quando inclu\u00eddo salva e restaura a lista de buffers.     Caso o Vim seja iniciado com um nome como argumento, a lista de     buffers n\u00e3o \u00e9 restaurada. Buffers sem     nome e buffers de ajuda n\u00e3o s\u00e3o armazenados no     viminfo.</p> <p>\u2019</p> <p>:   N\u00famero m\u00e1ximo de arquivos rec\u00e9m editados.</p> <p>/</p> <p>:   M\u00e1ximo de itens do hist\u00f3rico de buscas.</p> <p>:</p> <p>:   M\u00e1ximo de itens do hist\u00f3rico da linha de comando</p> <p>\\&lt;</p> <p>:   N\u00famero m\u00e1ximo de linhas salvas por cada registrador, se zero os     registradores n\u00e3o ser\u00e3o salvos. Quando n\u00e3o inclu\u00eddo, todas as linhas s\u00e3o     salvas.</p> <p>Para ver mais op\u00e7\u00f5es sobre o arquivo \u2018viminfo\u2019 leia \u2018:h viminfo\u2019. Pode-se tamb\u00e9m usar um arquivo de \u201cSess\u00e3o\u201d. A diferen\u00e7a \u00e9 que \u2018viminfo\u2019 n\u00e3o depende do local de trabalho (escopo). Quando o arquivo \u2018viminfo\u2019 existe e n\u00e3o est\u00e1 vazio, as informa\u00e7\u00f5es novas s\u00e3o combinadas com as existentes. A op\u00e7\u00e3o \u2018viminfo\u2019 \u00e9 uma string contendo informa\u00e7\u00f5es sobre o que deve ser armazenado, e cont\u00e9m limites de o quanto vai ser armazenado para cada item.</p>"},{"location":"capitulo_12/abreviacoes/","title":"Abrevia\u00e7\u00f5es","text":""},{"location":"capitulo_12/abreviacoes/#abreviacoes","title":"Abrevia\u00e7\u00f5es","text":"<p>Abrevia\u00e7\u00f5es habilitam auto-texto para o Vim. O seu funcionamento consiste de tr\u00eas campos, o primeiro \u00e9 o modo no qual a abrevia\u00e7\u00e3o funcionar\u00e1, o segundo \u00e9 a palavra que ir\u00e1 disparar a abrevia\u00e7\u00e3o e o terceiro campo \u00e9 a abrevia\u00e7\u00e3o propriamente dita. Para que em modo de comando \u2018:\u2019 a palavra \u2018salvar\u2019 funcione para salvar os arquivos, adiciona-se a seguinte abrevia\u00e7\u00e3o ao \u2018\\~/.vimrc\u2019. <pre><code>cab salvar w&lt;cr&gt;\n\"&lt;cr&gt; corresponde ao &lt;Enter&gt;\n</code></pre> Abaixo abrevia\u00e7\u00f5es para o modo de inser\u00e7\u00e3o: <pre><code> iab slas S\u00e9rgio Luiz Ara\u00fajo Silva\n iab Linux GNU/Linux\n iab linux GNU/Linux\n</code></pre></p>"},{"location":"capitulo_12/ajustando_paragrafos_em_modo_normal/","title":"Ajustando par\u00e1grafos em modo normal","text":""},{"location":"capitulo_12/ajustando_paragrafos_em_modo_normal/#ajustando-paragrafos-em-modo-normal","title":"Ajustando par\u00e1grafos em modo normal","text":"<p>O comando <code>gqap</code> ajusta o par\u00e1grafo atual em modo normal. Usando a op\u00e7\u00e3o :set nojoinspaces o vim colocar\u00e1 dois espa\u00e7os ap\u00f3s o ponto final ao se ajustar os par\u00e1grafos.</p> <p>geralmente usamos <code>^I</code> para representar uma tabula\u00e7\u00e3o <code>&lt;Tab&gt;</code>, e <code>$</code> para indicar o fim de linha. Mas \u00e9 poss\u00edvel customizar essas op\u00e7\u00f5es. sintaxe: <pre><code>set listchars=key:string,key:string\n\n - eol:{char}\n Define o caracter a ser posto depois do fim da linha\n\n - tab:{char1}{char2}\n O tab \u00e9 mostrado pelo primeiro caracter {char1} e\n seguido por {char2}\n\n - trail:{char}\n Esse caracter representa os espa\u00e7os em branco.\n\n - extends:{char}\n Esse caracter representa o in\u00edcio do fim da linha\n sem quebr\u00e1-la\n Est\u00e1 op\u00e7\u00e3o funciona com a op\u00e7\u00e3o nowrap habilitada\n\n\"exemplo 1:\n\"set listchars=tab:&gt;-,trail:.,eol:#,extends:@\n\n\"exemplo 2:\n\"set listchars=tab:&gt;-\n\n\"exemplo 3:\n\"set listchars=tab:&gt;-\n\n\"exemplo 4:\nset nowrap    \"Essa op\u00e7\u00e3o desabilita a quebra de linha\n\"set listchars=extends:+\n</code></pre></p>"},{"location":"capitulo_12/autocomandos/","title":"Autocomandos","text":""},{"location":"capitulo_12/autocomandos/#autocomandos","title":"Autocomandos","text":"<p>Autocomandos habilitam comandos autom\u00e1ticos para situa\u00e7\u00f5es espec\u00edficas. Para executar determinada a\u00e7\u00e3o ao iniciar um novo arquivo o autocomando dever\u00e1 obedecer este padr\u00e3o: <pre><code>au BufNewFile tipo a\u00e7\u00e3o\n</code></pre> Veja um exemplo: <pre><code>au BufNewFile,BufRead *.txt source ~/.vim/syntax/txt.vim\n</code></pre> No exemplo acima o Vim aplica autocomandos para arquivos novos \u201cBufNewfile\u201d ou existentes \u201cBufRead\u201d terminados em <code>txt</code>, e para estes tipos carrega um arquivo de syntax, ou seja, um esquema de cores espec\u00edfico. <pre><code>\" http://aurelio.net/doc/vim/txt.vim    coloque em ~/.vim/syntax\nau BufNewFile,BufRead *.txt source ~/.vim/syntax/txt.vim\n</code></pre> Para arquivos do tipo texto \u2018.txt\u2019 use um arquivo de syntax em particular.</p> <p>O autocomando abaixo coloca um cabe\u00e7alho para scripts bash caso a linha 1 esteja vazia, observe que os arquivos em quest\u00e3o tem que ter a extens\u00e3o .sh. <pre><code>au BufNewFile,BufRead *.sh if getline(1) == \"\" | normal ,sh\n</code></pre> Para configurar o vim de modo que o diret\u00f3rio corrente fique no path coloque este c\u00f3digo no <code>vimrc</code>. <pre><code>\"fonte: wikia - wiki sobre o vim\nif exists('+autochdir')\n  set autochdir\nelse\n  autocmd BufEnter * silent! lcd %:p:h:gs/ /\\\\ /\nendif\n</code></pre></p>"},{"location":"capitulo_12/autocomandos/#exemplos-praticos-de-autocomandos","title":"Exemplos pr\u00e1ticos de autocomandos","text":""},{"location":"capitulo_12/autocomandos/#detectando-indentacao-fora-do-padrao","title":"Detectando indenta\u00e7\u00e3o fora do padr\u00e3o","text":"<p>H\u00e1 situa\u00e7\u00f5es em que \u00e9 necess\u00e1ria a uniformiza\u00e7\u00e3o de a\u00e7\u00f5es, por exemplo, em c\u00f3digos Python deve-se manter um padr\u00e3o para a indenta\u00e7\u00e3o, ou ser\u00e1 com espa\u00e7os ou ser\u00e1 com tabula\u00e7\u00f5es, n\u00e3o se pode misturar os dois pois o interpretador retornaria um erro. Outra situa\u00e7\u00e3o em que misturar espa\u00e7os com tabula\u00e7\u00f5es ocasiona erros \u00e9 em c\u00f3digos LaTeX, ao compilar o documento a formata\u00e7\u00e3o n\u00e3o sai como desejado. At\u00e9 que se perceba o erro leva um tempo. Para configurar o vim de forma que ele detecte este tipo de erro ao entrar no arquivo: <pre><code>au! VimEnter * match ErrorMsg /^\\t\\+/\n\n\" explica\u00e7\u00e3o para o autocomando acima\nau! ............... automaticamente\nVimEnter .......... ao entrar no vim\n* ................. para qualquer tipo de arquivo\nmatch ErrorMsg .... destaque como erro\n/ ................. inicio de um padr\u00e3o\n^ ................. come\u00e7o de linha\n\\t ................ tabula\u00e7\u00e3o\n\\+ ................ uma vez ou mais\n/ ................. fim do padr\u00e3o de buscas\n</code></pre> Para evitar que este erro se repita, ou seja, que sejam adicionados no come\u00e7o de linha espa\u00e7os no lugar de tabula\u00e7\u00f5es adiciona-se ao \\~/.vimrc <pre><code>set expandtab\n</code></pre> \u00c9 perfeitamente poss\u00edvel um autocomando que fa\u00e7a direto a substitui\u00e7\u00e3o de tabula\u00e7\u00f5es por espa\u00e7os, mas neste caso n\u00e3o \u00e9 recomendado que o autocomando se aplique a todos os tipos de aquivos.</p>"},{"location":"capitulo_12/autocomandos/#inserindo-automaticamente-modelos-de-documento","title":"Inserindo automaticamente modelos de documento","text":"<p>Pode-se criar um autocomando para inserir um modelo de documento \u2018html\u2019 por exemplo de forma autom\u00e1tica, ou seja, se voc\u00ea criar um novo documento do tipo \u2018html\u2019 o vim colocar\u00e1 em seu conte\u00fado um modelo pre-definido. <pre><code>au BufNewFile *.html 0r ~/.vim/skel/skel.html\n</code></pre></p>"},{"location":"capitulo_12/comentarios/","title":"Coment\u00e1rios","text":""},{"location":"capitulo_12/comentarios/#comentarios","title":"Coment\u00e1rios","text":"<p>Coment\u00e1rios s\u00e3o linhas que s\u00e3o ignoradas pelo interpretador Vim e servem normalmente para descri\u00e7\u00e3o de comandos e a\u00e7\u00f5es, deixando portanto mais leg\u00edvel e did\u00e1tico o arquivo de configura\u00e7\u00e3o. Uma linha \u00e9 um coment\u00e1rio se seu primeiro caractere \u00e9 uma aspa <code>\"</code>: <pre><code>\" linhas come\u00e7adas com aspas s\u00e3o coment\u00e1rios\n\" e portanto ser\u00e3o ignoradas pelo Vim\n</code></pre> Recomenda-se usar coment\u00e1rios ao adicionar ou modificar comandos no arquivo vimrc, pois assim torna-se mais f\u00e1cil futuras leituras e modifica\u00e7\u00f5es neste arquivo.</p>"},{"location":"capitulo_12/como_adicionar_o_python_ao_path_do_vim/","title":"Como adicionar o Python ao path do Vim?","text":""},{"location":"capitulo_12/como_adicionar_o_python_ao_path_do_vim/#como-adicionar-o-python-ao-path-do-vim","title":"Como adicionar o Python ao path do Vim?","text":"<p>Coloque o seguinte script em: <pre><code> * ~/.vim/after/ftplugin/python.vim    (on Unix systems)\n %* $HOME/vimfiles/after/ftplugin/python.vim    (on Windows systems)\n\n python &lt;&lt; EOF\n import os\n import sys\n import vim\n for p in sys.path:\n     # Add each directory in sys.path, if it exists.\n     if os.path.isdir(p):\n         # Command `set' needs backslash before each space.\n         vim.command(r``s'' % (p.replace(`` '', r`` '')))\n EOF\n</code></pre> Isto lhe permite usar gf ou Ctrl-w Ctrl-F para abrir um arquivo sob o cursor</p>"},{"location":"capitulo_12/como_editar_preferencias_no_vim/","title":"Como Editar Prefer\u00eancias no Vim","text":"<p>O arquivo de prefer\u00eancias do Vim \u00e9 nomeado vimrc, um arquivo oculto que normalmente encontra-se no diret\u00f3rio de trabalho (home) do usu\u00e1rio: <pre><code>~/.vimrc\n/home/usuario/.vimrc\n</code></pre> No sistema operacional Windows o arquivo costuma ser: <pre><code>~\\_vimrc\nc:\\documents and settings\\usuario\\_vimrc\n</code></pre></p>"},{"location":"capitulo_12/complementacao_com_tab/","title":"Complementa\u00e7\u00e3o com \"tab\"","text":""},{"location":"capitulo_12/complementacao_com_tab/#complementacao-com-tab","title":"Complementa\u00e7\u00e3o com \u201ctab\u201d","text":"<pre><code>\"Word completion\n\"Complementa\u00e7\u00e3o de palavras\n\nset dictionary+=/usr/dict/words\nset complete=.,w,k\n\n\"------ complementa\u00e7\u00e3o de palavras ----\n\"usa o tab em modo de inser\u00e7\u00e3o para completar palavras\n\nfunction! InsertTabWrapper(direction)\n   let col = col(``.'') - 1\n   if !col || getline(``.'')[col - 1] !~ '\\k'\n      return ``&gt;''\n   elseif ``d'' == a:direction\n      return ``&gt;''\n   else\n      return ``&gt;''\n   endif\nendfunction\n\ninoremap &lt;tab&gt; &lt;c-r&gt;=InsertTabWrapper (``d'')&lt;cr&gt;\ninoremap &lt;s-tab&gt; &lt;c-r&gt;=InsertTabWrapper (``d'')&lt;cr&gt;\n</code></pre>"},{"location":"capitulo_12/criando_menus_para_um_modo_especifico/","title":"Criando menus para um modo espec\u00edfico","text":""},{"location":"capitulo_12/criando_menus_para_um_modo_especifico/#criando-menus-para-um-modo-especifico","title":"Criando menus para um modo espec\u00edfico","text":"<pre><code>:menu .... Normal, Visual e Operator-pending\n:nmenu ... Modo Normal\n:vmenu ... Modo Visual\n:omenu ... Operator-pending modo\n:menu! ... Insert e Comando\n:imenu ... Modo de inser\u00e7\u00e3o\n:cmenu ... Modo de comando\n:amenu ... Todos os modos\n</code></pre>"},{"location":"capitulo_12/criando_um_menu/","title":"Criando um menu","text":""},{"location":"capitulo_12/criando_um_menu/#criando-um-menu","title":"Criando um menu","text":"<p>Como no Vim podemos ter infinitos comandos fica complicado memorizar tudo \u00e9 a\u00ed que entram os menus, podemos colocar nossos plugins e atalhos favoritos em um menu veja este exemplo <pre><code>amenu Ferramentas.ExibirNomeDoTema :echo g:colors_name&lt;cr&gt;\n</code></pre> O comando acima diz: <pre><code>amenu ........................ cria um menu\nFerramentas.ExibirNomeDoTema . Menu plugin submenu ExibirNomeDoTema\n:echo g:colors_name&lt;cr&gt; ...... exibe o nome do tema atual\n</code></pre> Caso haja espa\u00e7os no nome a definir voc\u00ea pode fazer assim <pre><code>amenu Ferramentas.Exibir\\ nome\\ do\\ tema :echo g:colors_name&lt;cr&gt;\n</code></pre></p>"},{"location":"capitulo_12/definindo_registros_previamente/","title":"Definindo registros previamente","text":"<p>Definindo uma macro de nome <code>s</code> para ordenar e retirar linhas duplicadas <pre><code>let @s=\":sort u\"\n</code></pre> Para executar o registro <code>s</code> definido acima fa\u00e7a: <pre><code>@s\n</code></pre> O Vim colocar\u00e1 no comando <pre><code>:sort -u\n</code></pre> Bastando pressionar <code>&lt;Enter&gt;</code>. Observa\u00e7\u00e3o: Este registro pr\u00e9vio pode ficar no <code>vimrc</code> ou ser digitado em comando \u201c:\u201d <pre><code>:5,20sort u\n\"da linha 5 at\u00e9 a linha 20 ordene e retire duplicados\n\n:sort n\n\" ordene meu documento considerando n\u00fameros\n\" isto \u00e9 \u00fatil pois se a primeira coluna contiver\n\" n\u00fameros a ordena\u00e7\u00e3o pode ficar errada caso n\u00e3o usemos\n\" o par\u00e2metro ``n''\n</code></pre></p>"},{"location":"capitulo_12/efetivacao_das_alteracoes_no_vimrc/","title":"Efetiva\u00e7\u00e3o das altera\u00e7\u00f5es no vimrc","text":""},{"location":"capitulo_12/efetivacao_das_alteracoes_no_vimrc/#efetivacao-das-alteracoes-no-vimrc","title":"Efetiva\u00e7\u00e3o das altera\u00e7\u00f5es no <code>vimrc</code>","text":"<p>As altera\u00e7\u00f5es no vimrc s\u00f3 ser\u00e3o efetivadas na pr\u00f3xima vez que o Vim for aberto, a n\u00e3o ser que o recarregamento do arquivo de configura\u00e7\u00e3o seja instru\u00eddo explicitamente: <pre><code>:source ~/vimrc ....... se estiver no GNU/Linux\n:source ~/_vimrc ...... caso use o Windows\n:so arquivo ........... `so' \u00e9 uma abrevia\u00e7\u00e3o de `source'\n</code></pre></p>"},{"location":"capitulo_12/evitando_arquivos_de_backup_no_disco/","title":"Evitando arquivos de backup no disco","text":""},{"location":"capitulo_12/evitando_arquivos_de_backup_no_disco/#evitando-arquivos-de-backup-no-disco","title":"Evitando arquivos de backup no disco","text":"<p>Nota-se em algumas situa\u00e7\u00f5es que existem alguns arquivos com o mesmo nome dos arquivos que foram editados, por\u00e9m com um til (\\~) no final. Esses arquivos s\u00e3o backups que o Vim gera antes de sobrescrever os arquivos, e podem desde ocupar espa\u00e7o significativo no disco r\u00edgido at\u00e9 representar falha de seguran\u00e7a, como por exemplo arquivos .php\\~ que n\u00e3o s\u00e3o interpretados pelo servidor web e exp\u00f5em o c\u00f3digo-fonte.</p> <p>Para que os backups sejam feitos enquanto os arquivos estejam sendo escritos, por\u00e9m n\u00e3o mantidos ap\u00f3s terminar a escrita, utiliza-se no <code>.vimrc</code>: <pre><code>set nobackup\nset writebackup\n</code></pre> Fonte: Site do Eust\u00e1quio Rangel.</p>"},{"location":"capitulo_12/exemplo_de_menu/","title":"Exemplo de menu","text":""},{"location":"capitulo_12/exemplo_de_menu/#exemplo-de-menu","title":"Exemplo de menu","text":"<p><pre><code>\" cores\nmenu T&amp;emas.cores.quagmire :colo quagmire&lt;CR&gt;\nmenu T&amp;emas.cores.inkpot :colo inkpot&lt;CR&gt;\nmenu T&amp;emas.cores.google :colo google&lt;CR&gt;\nmenu T&amp;emas.cores.ir_black :colo ir_black&lt;CR&gt;\nmenu T&amp;emas.cores.molokai :colo molokai&lt;CR&gt;\n\" Fontes\nmenu T&amp;emas.fonte.Inconsolata :set gfn=Inconsolata:h10&lt;CR&gt;\nmenu T&amp;emas.fonte.Anonymous :set anti gfn=Anonymous:h8&lt;CR&gt;\nmenu T&amp;emas.fonte.Envy\\ Code :set anti gfn=Envy_Code_R:h10&lt;CR&gt;\nmenu T&amp;emas.fonte.Monaco :set gfn=monaco:h9&lt;CR&gt;\nmenu T&amp;emas.fonte.Crisp :set anti gfn=Crisp:h12&lt;CR&gt;\nmenu T&amp;emas.fonte.Liberation\\ Mono :set gfn=Liberation\\ Mono:h10&lt;CR&gt;\n</code></pre> O comando \u201c:update\u201d Atualiza o menu rec\u00e9m modificado. Quando o comando \u201c:amenu\u201d \u00c9 usado sem nenhum argumento o Vim mostra os menus definidos atualmente. Para listar todas as op\u00e7\u00f5es de menu para <code>Plugin</code> por exemplo digita-se no modo de comandos \u201c:amenu Plugin\u201d.</p>"},{"location":"capitulo_12/exemplo_de_menu/#ocultando-as-barras-de-ferramentas-e-menu","title":"Ocultando as barras de ferramentas e menu","text":"<pre><code>:set guioptions-=m  ........ oculta menus\n:set guioptions-=T  ........ oculta icones\n\nobs: para exibir novamente repita o comando\nsubstituindo o sinal de menos por mais.\n</code></pre>"},{"location":"capitulo_12/exibindo_caracteres_invisiveis/","title":"Exibindo caracteres invis\u00edveis","text":""},{"location":"capitulo_12/exibindo_caracteres_invisiveis/#exibindo-caracteres-invisiveis","title":"Exibindo caracteres invis\u00edveis","text":"<pre><code>:set list\n</code></pre>"},{"location":"capitulo_12/funcoes/","title":"Fun\u00e7\u00f5es","text":""},{"location":"capitulo_12/funcoes/#funcoes","title":"Fun\u00e7\u00f5es","text":""},{"location":"capitulo_12/funcoes/#fechamento-automatico-de-parenteses","title":"Fechamento autom\u00e1tico de par\u00eanteses","text":"<pre><code> \" --------------------------------------\n \" Ativa fechamento autom\u00e1tico para par\u00eantese\n \" Set automatic expansion of parenthesis/brackets\n inoremap ( ()&lt;Esc&gt;:call BC_AddChar(\")\")&lt;cr&gt;i\n inoremap { {}&lt;Esc&gt;:call BC_AddChar(\"}\")&lt;cr&gt;i\n inoremap [ []&lt;Esc&gt;:call BC_AddChar(\"]\")&lt;cr&gt;i\n \"\n \" mapeia Ctrl-j para pular fora de par\u00eanteses colchetes etc...\n inoremap &lt;C-j&gt; &lt;Esc&gt;:call search(BC_GetChar(), \"W\")&lt;cr&gt;a\n \" Function for the above\n function! BC_AddChar(schar)\n    if exists(\"k\")\n        let b:robstack = b:robstack . a:schar\n    else\n        let b:robstack = a:schar\n    endif\n endfunction\n function! BC_GetChar()\n    let l:char = b:robstack[strlen(b:robstack)-1]\n    let b:robstack = strpart(b:robstack, 0, strlen(b:robstack)-1)\n    return l:char\n endfunction\n\n'''Outra op\u00e7\u00e3o para fechamento de par\u00eanteses'''\n\n \" Fechamento autom\u00e1tico de par\u00eanteses\n imap { {}&lt;left&gt;\n imap ( ()&lt;left&gt;\n imap [ []&lt;left&gt;\n\n \" pular fora dos par\u00eanteses, colchetes e chaves, mover o cursor\n \" no modo de inser\u00e7\u00e3o\n imap &lt;c-l&gt; &lt;Esc&gt;&lt;right&gt;a\n imap &lt;c-h&gt; &lt;Esc&gt;&lt;left&gt;a\n</code></pre>"},{"location":"capitulo_12/funcoes/#funcao-para-barra-de-status","title":"Fun\u00e7\u00e3o para barra de status","text":"<p><pre><code>set statusline=%F%m%r%h%w\nset statusline+=[FORMAT=%{&amp;ff}]\nset statusline+=[TYPE=%Y]\nset statusline+=[ASCII=\\%03.3b][HEX=\\%02.2B]\nset statusline+=[POS=%04l,%04v][%p%%][LEN=%L]\nset laststatus=2\n</code></pre> Caso este c\u00f3digo n\u00e3o funcione acesse este link </p>"},{"location":"capitulo_12/funcoes/#rolar-outra-janela","title":"Rolar outra janela","text":"<p>Se voc\u00ea dividir janelas tipo <pre><code> Ctrl-w n\n</code></pre> pode colocar esta fun\u00e7\u00e3o no seu <code>.vimrc</code> <pre><code> \" rola janela alternativa\n fun! ScrollOtherWindow(dir)\n  if a:dir == \"down\"\n    let move = \"\\&lt;C-E&gt;\"\n  elseif a:dir == \"up\"\n    let move = \"\\&lt;C-Y&gt;\"\n  endif\n  exec \"normal \\&lt;C-W&gt;p\" . move . \"\\&lt;C-W&gt;p\"\nendfun\nnmap &lt;silent&gt; &lt;M-Down&gt; :call ScrollOtherWindow(\"down\")&lt;CR&gt;\nnmap &lt;silent&gt; &lt;M-Up&gt; :call ScrollOtherWindow(\"up\")&lt;CR&gt;\n</code></pre> Esta fun\u00e7\u00e3o \u00e9 acionada com o atalho Alt-\u2b06 e Alt-\u2b07.</p>"},{"location":"capitulo_12/funcoes/#funcao-para-numerar-linhas","title":"Fun\u00e7\u00e3o para numerar linhas","text":"<p>No site wikia h\u00e1 um c\u00f3digo de fun\u00e7\u00e3o para numerar linhas </p>"},{"location":"capitulo_12/funcoes/#funcao-para-trocar-o-esquema-de-cores","title":"Fun\u00e7\u00e3o para trocar o esquema de cores","text":"<p><pre><code> function! &lt;SID&gt;SwitchColorSchemes()\n    if !exists(\"g:colors_name\")\n      let g:colors_name = 'default'\n    endif\n    if g:colors_name == 'default'\n      colorscheme delek\n    elseif g:colors_name == 'delek'\n      colorscheme desert\n    elseif g:colors_name == 'desert'\n      colorscheme elflord\n    elseif g:colors_name == 'elflord'\n      colorscheme  evening\n    elseif g:colors_name == 'evening'\n      colorscheme industry\n    elseif g:colors_name == 'industry'\n      colorscheme koehler\n    elseif g:colors_name == 'koehler'\n      colorscheme morning\n    elseif g:colors_name == 'morning'\n      colorscheme default\n    endif\n endfunction\n map &lt;silent&gt; &lt;F6&gt; :call &lt;SID&gt;SwitchColorSchemes()&lt;CR&gt;\n</code></pre> Obs: Talvez os esquemas de cores aqui mostrados podem n\u00e3o existir em sua plataforma, verifique os esquemas dispon\u00edveis e modifique a fun\u00e7\u00e3o para que tudo funcione corretamente.</p>"},{"location":"capitulo_12/funcoes/#uma-funcao-para-inserir-cabecalho-de-script","title":"Uma fun\u00e7\u00e3o para inserir cabe\u00e7alho de script","text":"<p>para chamar a fun\u00e7\u00e3o basta pressionar <code>,sh</code> em modo normal <pre><code> \" Cria um cabe\u00e7alho para scripts bash\n fun! InsertHeadBash()\n    normal(1G)\n    :set ft=bash\n    :set ts=4\n    call append(0, \"#!/bin/bash\")\n    call append(1, \"# Criado em: \" . strftime(\"%a %d/%b/%Y hs %H:%M\"))\n    call append(2, \"# Ultima modifica\u00e7\u00e3o: \" . strftime(\"%a %d/%b/%Y hs %H:%M\"))\n    call append(3, \"# NOME DA SUA EMPRESA \")\n    call append(4, \"# Prop\u00f3sito do script \")\n    normal($)\n endfun\n map ,sh :call InsertHeadBash()&lt;cr&gt;\n</code></pre></p>"},{"location":"capitulo_12/funcoes/#funcao-para-inserir-cabecalhos-python","title":"Fun\u00e7\u00e3o para inserir cabe\u00e7alhos Python","text":"<p><pre><code> \" fun\u00e7\u00e3o para inserir cabe\u00e7alhos Python\n fun! BufNewFile_PY()\n  normal(1G)\n  :set ft=python\n  :set ts=4\n  call append(0, \"#!/usr/bin/python\")\n  call append(1, \"# -*- coding: utf-8 -*-\")\n  call append(2, \"# Criado: \" . strftime(\"%a %d/%b/%Y hs %H:%M\"))\n  call append(3, \"# Modificado: \" . strftime(\"%a %d/%b/%Y hs %H:%M\"))\n  call append(4, \"# Instituicao: &lt;+nome+&gt;\")\n  call append(5, \"# Proposito do script: &lt;+descreva+&gt;\")\n  call append(6, \"# Autor: &lt;+seuNome+&gt;\")\n  call append(7, \"# site: &lt;+seuSite+&gt;\")\n  normal gg\n endfun\n autocmd BufNewFile *.py call BufNewFile_PY()\n map ,py :call BufNewFile_PY()&lt;cr&gt;\n\n\n \" Ao editar um arquivo ser\u00e1 aberto no \u00faltimo ponto em\n \" que foi editado\n  augroup vimrc-remember-cursor-position\n   autocmd!\n   autocmd BufReadPost * if line(\"'\\\"\") &gt; 1 &amp;&amp; line(\"'\\\"\") &lt;= line(\"$\") | exe \"normal! g`\\\"\" | endif\n augroup END\n \" Permite recarregar o Vim para que modifica\u00e7\u00f5es no\n \" Pr\u00f3prio vimrc seja ativadas com o mesmo sendo editado\n nmap &lt;F12&gt; :&lt;C-u&gt;source $HOME/.vimrc &lt;BAR&gt; echo \"Vimrc recarregado!\"&lt;CR&gt;\n</code></pre> Redimensionar janelas <pre><code>\" Redimensionar a janela com\n\" Alt-seta \u00e0 direita e esquerda\nmap &lt;M-right&gt; &lt;Esc&gt;:resize +2 &lt;CR&gt;\nmap &lt;M-left&gt; &lt;Esc&gt;:resize -2 &lt;CR&gt;\n</code></pre></p>"},{"location":"capitulo_12/funcoes/#funcao-para-pular-para-uma-linha","title":"Fun\u00e7\u00e3o para pular para uma linha","text":"<pre><code> \"ir para linha\n \" ir para uma linha espec\u00edfica\n function! GoToLine()\n let ln = inputdialog(\"ir para a linha...\")\n exe \":\" . ln\n endfunction\n \"no meu caso o mapeamento \u00e9 com Ctrl-l\n \"use o que melhor lhe convier\n nmap &lt;C-l&gt; :call GoToLine()&lt;CR&gt;\n</code></pre>"},{"location":"capitulo_12/funcoes/#funcao-para-gerar-backup","title":"Fun\u00e7\u00e3o para gerar backup","text":"<p>A fun\u00e7\u00e3o abaixo \u00e9 \u00fatil para ser usada quando voc\u00ea vai editar um arquivo gerando modifica\u00e7\u00f5es significativas, assim voc\u00ea poder\u00e1 restaurar o backup se necess\u00e1rio <pre><code> \" A mapping to make a backup of the current file.\n fun! WriteBackup()\n    let fname = expand(\"%:p\") . \"__\" . strftime(\"%d-%m-%Y--%H.%M.%S\")\n    silent exe \":w \" . fname\n    echo \"Wrote \" . fname\n endfun\n nnoremap &lt;Leader&gt;ba :call WriteBackup()&lt;CR&gt;\n</code></pre> O atalho \u201c<code>&lt;leader&gt;</code>\u201d em geral \u00e9 a barra invertida <code>\\</code>, na d\u00favida \u201c<code>:help &lt;leader&gt;</code>\u201d.</p>"},{"location":"capitulo_12/mantendo_apenas_um_gvim_aberto/","title":"Mantendo apenas um Gvim aberto","text":""},{"location":"capitulo_12/mantendo_apenas_um_gvim_aberto/#mantendo-apenas-um-gvim-aberto","title":"Mantendo apenas um Gvim aberto","text":"<p>Essa dica destina-se apenas \u00e0 vers\u00e3o do Vim que roda no ambiente gr\u00e1fico, ou seja, o Gvim, pois ela faz uso de alguns recursos que s\u00f3 funcionam nesse ambiente. A meta \u00e9 criar um comando que vai abrir os arquivos indicados em abas novas sempre na janela j\u00e1 existente.</p> <p>Para isso deve-se definir um script que esteja no seu path<sup>1</sup> do sistema (e que possa ser executado de alguma forma por programas do tipo launcher no modo gr\u00e1fico) que vai ser utilizado sempre que quisermos abrir nossos arquivos dessa maneira. Para efeito do exemplo, o nome do arquivo ser\u00e1 tvim (de tabbed vim), por\u00e9m pode ser nomeado com o nome que for conveniente.</p> <p>A \u00fanica necessidade para essa dica funcionar \u00e9 a vers\u00e3o do Vim ter suporte para o argumento \u2013serverlist, o que deve ser garantido nas vers\u00f5es presentes na \u00e9poca em que esse documento foi escrito. Para fazer uma simples verifica\u00e7\u00e3o se o comando est\u00e1 dispon\u00edvel, deve ser digitado em um terminal: <pre><code>vim --serverlist\ngvim --serverlist\n</code></pre> Se ambos os comandos acima resultaram em erro, o procedimento n\u00e3o poder\u00e1 ser implementado. Do contr\u00e1rio, deve-se utilizar o comando que teve um retorno v\u00e1lido (vim ou gvim) para criar o script. Supondo que foi o comando gvim que n\u00e3o retornou um erro, criamos o script da seguinte forma: <pre><code>#!/bin/bash\nif [ $# -ne 1 ]\nthen\n   echo \"Sem arquivos para editar.\"\n   exit\nfi\ngvim --servername $(gvim --serverlist | head -1) --remote-tab $1\n</code></pre> Desse modo, se for digitado tvim sem qualquer argumento, \u00e9 exibida a mensagem de erro, do contr\u00e1rio, o arquivo \u00e9 aberto na c\u00f3pia corrente do Gvim, em uma nova aba, por exemplo: <pre><code>tvim .vimrc\n</code></pre> Fonte: Site do Eust\u00e1quio Rangel </p> <ol> <li> <p>Diret\u00f3rios nos quais o sistema busca pelos comandos\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_12/mapeamentos/","title":"Mapeamentos","text":""},{"location":"capitulo_12/mapeamentos/#mapeamentos","title":"Mapeamentos","text":"<p>Mapeamentos permitem criar atalhos de teclas para quase tudo. Tudo depende da criatividade do usu\u00e1rio e do quanto conhece o Vim, com eles podemos controlar a\u00e7\u00f5es com quaisquer teclas, mas antes temos que saber que para criar mapeamentos, precisamos conhecer a maneira de representar as teclas e combina\u00e7\u00f5es. Alguns exemplos: <pre><code>tecla ....... tecla mapeada\n\n&lt;c-x&gt; ....... Ctrl-x\n&lt;left&gt; ...... seta para a esquerda\n&lt;right&gt; ..... seta para a direita\n&lt;c-m-a&gt; ..... Ctrl-Alt-a\n&lt;cr&gt; ........ Enter\n&lt;Esc&gt; ....... Escape\n&lt;leader&gt; .... normalmente \\\n&lt;bar&gt; ....... | pipe\n&lt;cword&gt; ..... palavra sob o cursor\n&lt;cfile&gt; ..... arquivo sob o cursor\n&lt;cfile&gt; ..... arquivo sob o cursor sem extens\u00e3o\n&lt;sfile&gt; ..... conte\u00fado do arquivo sob o cursor\n&lt;left&gt; ...... salta um caractere para esquerda\n&lt;up&gt; ........ equivale clicar em `seta acima'\n&lt;m-f4&gt; ...... a tecla alt (m) mais a tecla f4\n&lt;c-f&gt; ....... Ctrl-f\n&lt;bs&gt; ........ backspace\n&lt;space&gt; ..... espa\u00e7o\n&lt;tab&gt; ....... tab\n</code></pre> No Vim podemos mapear uma tecla para o modo normal, realizando determinada opera\u00e7\u00e3o e a mesma tecla pode desempenhar outra fun\u00e7\u00e3o qualquer em modo de inser\u00e7\u00e3o ou comando, veja: <pre><code>\" mostra o nome do arquivo com o caminho\nmap &lt;F2&gt; :echo expand(\"%:p\")\n\" insere um texto qualquer\nimap &lt;F2&gt; Nome de uma pessoa\n</code></pre> A \u00fanica diferen\u00e7a nos mapeamentos acima \u00e9 que o mapeamento para modo de inser\u00e7\u00e3o come\u00e7a com <code>i</code>, assim como para o modo \u201ccomando\u201d <code>:</code> come\u00e7a com <code>c</code> no caso <code>cmap</code>. O comando <code>:echo</code> pode ser abreviado assim: <code>:ec</code>.</p>"},{"location":"capitulo_12/mapeamentos/#recarregando-o-arquivo-de-configuracao","title":"Recarregando o arquivo de configura\u00e7\u00e3o","text":"<p>Cada altera\u00e7\u00e3o no arquivo de configura\u00e7\u00e3o do Vim s\u00f3 ter\u00e1 efeito na pr\u00f3xima vez que voc\u00ea abrir o Vim a menos que voc\u00ea coloque isto dentro do mesmo <pre><code>\" recarregar o vimrc\n\" Source the .vimrc or _vimrc file, depending on system\nif &amp;term == \"win32\" || \"pcterm\" || has(\"gui_win32\")\n   map ,v :e $HOME/_vimrc&lt;CR&gt;\n   nmap &lt;F12&gt; :&lt;C-u&gt;source ~/_vimrc &lt;BAR&gt; echo \"Vimrc recarregado!\"&lt;CR&gt;\nelse\n   map ,v :e $HOME/.vimrc&lt;CR&gt;\n   nmap &lt;F12&gt; :&lt;C-u&gt;source ~/.vimrc &lt;BAR&gt; echo \"Vimrc recarregado!\"&lt;CR&gt;\nendif\n</code></pre> Agora basta pressionar <code>&lt;F12&gt;</code> em modo normal e as altera\u00e7\u00f5es passam a valer instantaneamente, e para chamar o <code>vimrc</code> basta usar. <pre><code>,v\n</code></pre> Os mapeamentos abaixo s\u00e3o \u00fateis para quem escreve c\u00f3digos HTML, permitem inserir caracteres reservados do HTML usando uma barra invertida para proteger os mesmos, o Vim substituir\u00e1 os \u201cbarra alguma coisa\u201d pelo caractere correspondente. <pre><code>inoremap \\&amp;amp; &amp;amp;amp;\ninoremap \\&amp;lt; &amp;amp;lt;\ninoremap \\&amp;gt; &amp;amp;gt;\ninoremap \\. &amp;amp;middot;\n</code></pre> O termo inoremap significa: em modo de inser\u00e7\u00e3o n\u00e3o remapear, ou seja ele mapeia o atalho e n\u00e3o permite que o mesmo seja remapeado, e o mapeamento s\u00f3 funciona em modo de inser\u00e7\u00e3o, isso significa que um atalho pode ser mapeado para diferentes modos de opera\u00e7\u00e3o.\\</p> <p>Veja este outro mapeamento: <pre><code>map &lt;F11&gt; &lt;Esc&gt;:set nu!&lt;cr&gt;\n</code></pre> Permite habilitar ou desabilitar n\u00fameros de linha do arquivo corrente. A exclama\u00e7\u00e3o ao final torna o comando booleano, ou seja, se a numera\u00e7\u00e3o estiver ativa ser\u00e1 desabilitada, caso contr\u00e1rio ser\u00e1 ativada. O <code>&lt;cr&gt;</code> ao final representa um Enter.</p>"},{"location":"capitulo_12/mapeamentos/#limpando-o-registrador-de-buscas","title":"Limpando o \u201cregistrador\u201d de buscas","text":"<p>A cada busca, se a op\u00e7\u00e3o \u2018hls\u2019<sup>1</sup> estiver habilitada o Vim faz um destaque colorido, para desabilitar esta op\u00e7\u00e3o pode-se criar um mapeamento qualquer, no caso abaixo usando a combina\u00e7\u00e3o de teclas <code>&lt;S-F11&gt;</code>. <pre><code>nno &lt;S-F11&gt; &lt;Esc&gt;:let @/=\"\"&lt;CR&gt;\n</code></pre> \u00c9 um mapeamento para o modo normal que faz com que a combina\u00e7\u00e3o de teclas <code>Shift-F11</code> limpe o \u201cregistrador\u201d de buscas</p>"},{"location":"capitulo_12/mapeamentos/#destacar-palavra-sob-o-cursor","title":"Destacar palavra sob o cursor","text":"<p><pre><code>nmap &lt;s-f&gt; :let @/=\"&gt;\"&lt;CR&gt;\n</code></pre> O atalho acima <code>s-f</code> corresponde a <code>Shift-f</code>.</p>"},{"location":"capitulo_12/mapeamentos/#contar-ocorrencias-de-uma-palavra","title":"Contar ocorr\u00eancias de uma palavra","text":"<pre><code>\" contagem de ocorr\u00eancias de uma palavra (case insensitive)\n\" busca somente ocorr\u00eancias exatas\nnmap &lt;F4&gt; &lt;esc&gt;mz:%s/\\c\\&lt;\\(&lt;c-r&gt;=expand(\"&lt;cword&gt;\")&lt;cr&gt;\\)\\&gt;//gn&lt;cr&gt;`z\n\" busca parcial, ou seja acha palavra como parte de outra\nnmap &lt;s-F4&gt; &lt;esc&gt;mz:%s/\\c\\(&lt;c-r&gt;=expand(\"&lt;cword&gt;\")&lt;cr&gt;\\)//gn&lt;cr&gt;`z\n</code></pre>"},{"location":"capitulo_12/mapeamentos/#remover-linhas-em-branco-duplicadas","title":"Remover linhas em branco duplicadas","text":"<p><pre><code>map ,d &lt;Esc&gt;:%s/\\(^\\n\\{2,}\\)/\\r/g&lt;cr&gt;\n</code></pre> No mapeamento acima estamos associando o atalho: <pre><code>,d\n</code></pre> \u2026\u00a0\u00e0 a\u00e7\u00e3o desejada, fazer com que linhas em branco sucessivas sejam substitu\u00eddas por uma s\u00f3 linha em branco, vejamos como funciona: <pre><code>map ......... mapear\n,d .......... atalho que quermos\n&lt;Esc&gt; ....... se estive em modo de inser\u00e7\u00e3o sai\n: ........... em modo de comando\n% ........... em todo o arquivo\ns ........... substitua\n\\n .......... quebra de linha\n{2,} ........ duas ou mais vezes\n\\r .......... trocado por \\r Enter\ng ........... globalmente\n&lt;cr&gt; ........ confirma\u00e7\u00e3o do comando\n</code></pre> As barras invertidas podem n\u00e3o ser usadas se o seu Vim estiver com a op\u00e7\u00e3o magic habilitada <pre><code>:set magic\n</code></pre> Por acaso este \u00e9 um padr\u00e3o portanto tente usar assim pra ver se funciona <pre><code>map ,d :%s/\\n{2,}/\\r/g&lt;cr&gt;\n</code></pre></p>"},{"location":"capitulo_12/mapeamentos/#mapeamento-para-calcular-expressoes","title":"Mapeamento para Calcular Express\u00f5es","text":"<p>Os mapeamentos abaixo exibem o resultado das quatro opera\u00e7\u00f5es b\u00e1sicas (soma, subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o e divis\u00e3o). O primeiro para o modo normal no qual posiciona-se o cursor no primeiro caractere da express\u00e3o tipo <code>5\\9</code> e em seguida pressiona-se \u201cShift-F1\u201d, o segundo para o modo insert em que, ap\u00f3s digitada a express\u00e3o pressiona-se o mesmo atalho. <pre><code>\" calculadora\nmap &lt;s-f1&gt; &lt;esc&gt;0\"myEA=&lt;c-r&gt;=&lt;c-r&gt;m&lt;enter&gt;&lt;esc&gt;\nimap &lt;s-f1&gt; &lt;space&gt;&lt;esc&gt;\"myBEa=&lt;c-r&gt;=&lt;c-r&gt;m&lt;enter&gt;&lt;del&gt;\n</code></pre> Para efetuar c\u00e1lculos com maior precis\u00e3o e tamb\u00e9m resolver problemas como pot\u00eancias ra\u00edzes, logaritmos pode-se mapear comandos externos, como a biblioteca matem\u00e1tica da linguagem de programa\u00e7\u00e3o Python. Neste link h\u00e1 um manual que ensina a realizar este procedimento, ou acesse o cap\u00edtulo Uma calculadora diferente.</p>"},{"location":"capitulo_12/mapeamentos/#mapeamentos-globais","title":"Mapeamentos globais","text":"<p>Podemos fazer mapeamentos globais ou que funcionam em apenas um modo: <pre><code>map  - funciona em qualquer modo\nnmap - apenas no modo Normal\nimap - apenas no modo de Inser\u00e7\u00e3o\n</code></pre> Mover linhas com Ctrl-\u2b07 ou Ctrl-\u2b06 <pre><code>\" tem que estar em modo normal!\nnmap &lt;C-Down&gt; ddp\nnmap &lt;C-Up&gt; ddkP\n</code></pre> Salvando com uma tecla de fun\u00e7\u00e3o: <pre><code>\" salva com F9\nnmap &lt;F9&gt; :w&lt;cr&gt;\n\" F10 - sai do Vim\nnmap &lt;F10&gt; &lt;Esc&gt;:q&lt;cr&gt;\n</code></pre></p>"},{"location":"capitulo_12/mapeamentos/#convertendo-as-iniciais-de-um-documento-para-maiusculas","title":"Convertendo as iniciais de um documento para mai\u00fasculas","text":"<pre><code>\" MinusculasMaiusculas: converte a primeira letra de cada\n\" frase para MAI\u00daSCULAS\nnmap ,mm :%s/\\C\\([.!?][])\"']*\\($\\|[ ]\\)\\_s*\\)\\(\\l\\)/\\1\\U\\3/g&lt;CR&gt;\n\" Caso queira confirma\u00e7\u00e3o coloque uma letra ``c'' no final da\n\" linha acima:\n\" (...) \\3/gc&lt;CR&gt;\n</code></pre> <ol> <li> <p>hls \u00e9 uma abrevia\u00e7\u00e3o de hightlight search\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_12/onde_colocar_plugins_e_temas_de_cor/","title":"Onde colocar plugins e temas de cor","text":""},{"location":"capitulo_12/onde_colocar_plugins_e_temas_de_cor/#onde-colocar-plugins-e-temas-de-cor","title":"Onde colocar plugins e temas de cor","text":"<p>No Windows deve haver uma pasta chamada <code>vimfiles</code> (caso n\u00e3o exista deve-se cri\u00e1-la), que fica em: <pre><code>c:\\documents and settings\\usuario\\vimfiles\n</code></pre> No GNU/Linux a pasta de arquivos do Vim \u00e9 chamada .vim, comumente armazenada em <pre><code>/home/user/.vim\n</code></pre> Tanto em .vim como vimfiles encontram-se usualmente as seguintes pastas: <pre><code>vimfiles ou .vim\n   |\n   +--color\n   |\n   +--doc\n   |\n   +--syntax\n   |\n   +--plugin\n</code></pre> Os plugins, como se pode deduzir, devem ser colocados no diret\u00f3rio denominado plugin. Na se\u00e7\u00e3o Plugins est\u00e3o descritos alguns plugins para o Vim.</p>"},{"location":"capitulo_12/outros_mapeamentos/","title":"Outros mapeamentos","text":""},{"location":"capitulo_12/outros_mapeamentos/#outros-mapeamentos","title":"Outros mapeamentos","text":"<p>Destaca espa\u00e7os e tabula\u00e7\u00f5es redundantes: <pre><code>highlight RedundantWhitespace ctermbg=red guibg=red\nmatch RedundantWhitespace /\\s\\+$\\| \\+\\ze\\t/\n</code></pre> Explicando com detalhes <pre><code>\\s ..... espa\u00e7o\n\\+ ..... uma ou mais vezes\n$ ...... no final da linha\n\\| ..... ou\n`` '' .. espa\u00e7o (veja imagem acima)\n\\+ ..... uma ou mais vezes\n\\ze .... at\u00e9 o fim\n\\t ..... tabula\u00e7\u00e3o\n</code></pre> Portanto a express\u00e3o regular acima localizar\u00e1 espa\u00e7os ou tabula\u00e7\u00f5es no final de linha e destacar\u00e1 em vermelho. <pre><code>\"Remove espa\u00e7os redundantes no fim das linhas\nmap &lt;F7&gt; &lt;Esc&gt;mz:%s/\\s\\+$//g&lt;cr&gt;`z\n</code></pre> Um detalhe importante <pre><code>mz ... marca a posi\u00e7\u00e3o atual do cursor para retornar no final do comando\n`z ... retorna \u00e0 marca criada\n</code></pre> Se n\u00e3o fosse feito isto o cursor iria ficar na linha da \u00faltima substitui\u00e7\u00e3o! <pre><code>\"Abre o vim explorer\nmap &lt;F6&gt; &lt;Esc&gt;:vne .&lt;cr&gt;&lt;bar&gt;:vertical resize -30&lt;cr&gt;&lt;bar&gt;:set nonu&lt;cr&gt;\n</code></pre> Podemos usar \u201cExpress\u00f5es Regulares<sup>1</sup>\u201d em buscas do Vim veja um exemplo para retirar todas as tags HTML <pre><code>\"mapeamento para retirar tags HTML com Ctrl-Alt-t\nnmap &lt;C-M-t&gt; :%s/&lt;[^&gt;]*&gt;//g &lt;cr&gt;\n\" Quebra a linha atual no local do cursor com F2\nnmap &lt;F2&gt; a&lt;CR&gt;&lt;Esc&gt;\n\" join lines  -- Junta as linhas com Shift-F2\nnmap &lt;S-F2&gt; A&lt;Del&gt;&lt;Space&gt;\n</code></pre> Para mais detalhes sobre buscas acesse o cap\u00edtulo Buscas e substitui\u00e7\u00f5es.</p> <ol> <li> <p>http://guia-er.sourceforge.net \u21a9</p> </li> </ol>"},{"location":"capitulo_12/referencias/","title":"Refer\u00eancias","text":""},{"location":"capitulo_12/referencias/#referencias","title":"Refer\u00eancias","text":"<ul> <li>http://www.dicas-l.com.br/dicas-l/20050118.php</li> </ul>"},{"location":"capitulo_12/set/","title":"Set","text":""},{"location":"capitulo_12/set/#set","title":"Set","text":"<p>Os comandos set, respons\u00e1veis por atribuir valores \u00e0 vari\u00e1veis, podem ser colocados no <code>.vimrc</code>: <pre><code>set nu\n</code></pre> ou digitados como comandos: <pre><code>:set nu\n</code></pre> <pre><code>set number ............... \"mostra numera\u00e7\u00e3o de linhas\nset nu ................... \"simplifica\u00e7\u00e3o de `number'\nset showmode ............. \"mostra o modo em que estamos\nset showcmd .............. \"mostra no status os comandos inseridos\nset tabstop=4 ............ \"tamanho das tabula\u00e7\u00f5es\nset ts=4 ................. \"simplifica\u00e7\u00e3o de `tabstop'\nset shiftwidth=4 ......... \"quantidade de espa\u00e7os de uma\n                       tabula\u00e7\u00e3o\nset sw=4 ................. \"simplifica\u00e7\u00e3o de `shiftwidth'\nsyntax on ................ \"habilita cores\nsyn on ................... \"simplifica\u00e7\u00e3o de `syntax'\ncolorscheme tema ......... \"esquema de cores `syntax highlight'\nautochdir ................ \"configura o diret\u00f3rio de trabalho\nset hls .................. \"destaca com cores os termos procurados\nset incsearch ............ \"habilita a busca incremental\nset ai ................... \"auto identa\u00e7\u00e3o\nset aw ................... \"salva automaticamente ao trocar de\n                       `buffer'\nset ignorecase ........... \"ignora mai\u00fasculas e min\u00fasculas nas\n                       buscas\nset ic ................... \"simplifica\u00e7\u00e3o de ignorecase\nset smartcase ............ \"numa busca em mai\u00fasculo habilita\n                       `case'\nset scs .................. \"sin\u00f4nimo de `smartcase'\nset backup ............... \"habilita a cria\u00e7\u00e3o de arquivos de\n                       backup\nset bk ................... \"simplifica\u00e7\u00e3o de `backup'\nset backupext=.backup .... \"especifica a extens\u00e3o do arquivo de\n                       backup\nset bex=.backup .......... \"simplifica\u00e7\u00e3o de backupext\nset backupdir=~/.backup,./ \"diret\u00f3rio(s) para arquivos de backup\nset bdir ................. \"simplifica\u00e7\u00e3o de `backupdir'\nset nobackup ............. \"evita a cria\u00e7\u00e3o de arquivos de backup\nste nobk ................. \"simplifica\u00e7\u00e3o de `nobackup'\nset cursorline ........... \"abrevia\u00e7\u00e3o de cursor line (destaca\n                       linha  atual)\nset cul .................. \"simplifica\u00e7\u00e3o de `cursorline'\nset ttyfast .............. \"melhora o redraw de janelas.\nset columns=88 ........... \"deixa a janela com 88 colunas.\nset mousemodel=popup ..... \"exibe o conte\u00fado de folders e\n                       sugest\u00f5es spell\nset viminfo=%,'50,\\\"100,/100,:100,n \"armazena op\u00e7\u00f5es (buffers)\n</code></pre> Se ao iniciar o vim obtivermos mensagens de erros e houver d\u00favida se o erro \u00e9 no vim ou em sua configura\u00e7\u00e3o, pode-se inicia-lo sem que o mesmo carregue o arquivo <code>.vimrc</code>. <pre><code>:vim -u NONE\n</code></pre></p>"},{"location":"capitulo_13/como_usar/","title":"Como Usar","text":""},{"location":"capitulo_13/como_usar/#como-usar","title":"Como usar","text":"<p>O Potwiki trabalha com WikiWords, ou seja, palavras iniciadas com letras em mai\u00fasculo e que tenham outra letra em mai\u00fasculo no meio (sem espa\u00e7os). Para iniciar o Potwiki abra o Vim e pressione <code>\\ww</code>. <pre><code>&lt;Leader&gt; \u00e9 igual a \\   - veja :help leader\n\\ww  .... abra a sua HomePage\n\\wi  .... abre o Wiki index\n\\wf  .... segue uma WikiWords (pode ser usado em qualquer buffer)\n\\we  .... edite um arquivo Wiki\n\\\\   .... Fecha o arquivo\n&lt;CR&gt; .... segue WikiWords embaixo do cursor &lt;CR&gt; \u00e9 igual a Enter\n&lt;Tab&gt;.... move para a pr\u00f3xima WikiWords\n&lt;BS&gt; .... move para os WikiWords anteriores (mesma p\u00e1gina)\n\\wr  .... recarrega WikiWords\n</code></pre></p>"},{"location":"capitulo_13/problemas_com_codificacao_de_caracteres/","title":"Problemas com codifica\u00e7\u00e3o de caracteres","text":""},{"location":"capitulo_13/problemas_com_codificacao_de_caracteres/#problemas-com-codificacao-de-caracteres","title":"Problemas com codifica\u00e7\u00e3o de caracteres","text":"<p>Atualmente uso o Ubuntu em casa e ele j\u00e1 usa utf-8. Ao restaurar meu \u201cbackup\u201d do Wiki no Kurumin os caracteres ficaram meio estranhos, da\u00ed fiz: <pre><code># baixei o pacote [recode]\napt-get install recode\n</code></pre> para recodificar caracteres de <code>utf-8</code> para <code>iso</code> fa\u00e7a: <pre><code>recode -d u8..l1 arquivo\n</code></pre></p>"},{"location":"capitulo_13/salvamento_automatico_para_o_wiki/","title":"Salvamento autom\u00e1tico para o Wiki","text":""},{"location":"capitulo_13/salvamento_automatico_para_o_wiki/#salvamento-automatico-para-o-wiki","title":"Salvamento autom\u00e1tico para o Wiki","text":"<p>Procure por uma se\u00e7\u00e3o autowrite no manual do Potwiki <pre><code>:help potwiki\n</code></pre> O valor que est\u00e1 em zero dever\u00e1 ficar em 1 <pre><code>call s:default(`autowrite',0)\n</code></pre> Como eu mantenho o meu Wiki oculto \u201c.wiki\u201d criei um \u201clink\u201d para a pasta de textos <pre><code>ln -s ~/.wiki /home/sergio/docs/textos/wiki\n</code></pre> Vez por outra entro na pasta <code>~/docs/textos/wiki</code> e crio um pacote tar.gz e mando para \u201cweb\u201d como forma de manter um \u201cbackup\u201d.</p>"},{"location":"capitulo_13/uma_wiki_para_o_vim/","title":"Um Wiki para o Vim","text":"<p>\u00c9 ineg\u00e1vel a facilidade que um Wiki nos traz, os documentos s\u00e3o indexados e linkados de forma simples. J\u00e1 pesquisei uma por\u00e7\u00e3o de Wikis e, para uso pessoal recomendo o Potwiki. O \u201clink\u201d do Potwiki \u00e9 este.\u00a0 O Potwiki \u00e9 um Wiki completo para o Vim, funciona localmente embora possa ser aberto remotamente via ssh<sup>1</sup>. Para criar um \u201clink\u201d no Potwiki basta usar WikiNames, s\u00e3o nomes iniciados com letra mai\u00fascula e que contenham outra letra em mai\u00fasculo no meio.</p> <p>Ao baixar o arquivo salve em <code>~/.vim/plugin</code>.</p> <p>Mais ou menos na linha 53 do Potwiki <code>~/.vim/plugin/potwiki.vim</code> voc\u00ea define onde ele guardar\u00e1 os arquivos, no meu caso <code>/home/docs/textos/wiki</code>. a linha ficou assim: <pre><code>call s:default('home',\"~/.wiki/HomePage\")\n</code></pre> Outra forma de indicar a p\u00e1gina inicial seria colocar no seu .virmc <pre><code>let potwiki_home = \"$HOME/.wiki/HomePage\"\n</code></pre></p> <ol> <li> <p>Sistema de acesso remoto\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_14/edite_varios_arquivos_de_uma_so_vez/","title":"Edite v\u00e1rios arquivos de uma s\u00f3 vez","text":""},{"location":"capitulo_14/edite_varios_arquivos_de_uma_so_vez/#edite-varios-arquivos-de-uma-so-vez","title":"Edite v\u00e1rios arquivos de uma s\u00f3 vez","text":"<p>O Vim pode abrir v\u00e1rios arquivos que contenham um determinado padr\u00e3o. Um exemplo seria abrir dezenas de arquivos HTML e trocar a ocorr\u00eancia <code>bgcolor=\"ffffff\"</code> Para <code>bgcolor=\"eeeeee\"</code> Usar\u00edamos a seguinte sequ\u00eancia de comandos: <pre><code>vim *.html  .................................... abre os arquivos\n:bufdo :%s/bgcolor=`ffffff'/bgcolor=`eeeeee'/g   substitui\u00e7\u00e3o\n:wall       .................................... salva todos\n:qa[ll]     .................................... fecha todos\n</code></pre></p> <p>Ainda com rela\u00e7\u00e3o \u00e0 edi\u00e7\u00e3o de v\u00e1rios arquivos poder\u00edamos abrir alguns arquivos txt e mudar de um para o outro assim:</p> <pre><code>:wn\n</code></pre> <p>O \u2018w\u2019 significa gravar e o \u2018n\u2019 significa next, ou seja, gravar\u00edamos o que foi modificado no arquivo atual e mudar\u00edamos para o pr\u00f3ximo.</p> <p>Veja tamb\u00e9m Movendo-se no documento.</p>"},{"location":"capitulo_14/habitos_para_edicao_efetiva/","title":"H\u00e1bitos para Edi\u00e7\u00e3o Efetiva","text":"<p>Um dos grandes problemas relacionados com os softwares \u00e9 sua subutiliza\u00e7\u00e3o. Por in\u00e9rcia o usu\u00e1rio tende a aprender o m\u00ednimo para a utiliza\u00e7\u00e3o de um programa e deixa de lado recursos que poderiam lhe ser de grande valia. O mantenedor do Vim, Bram Moolenaar<sup>1</sup>, recentemente publicou v\u00eddeos e manuais sobre os \u201c7 h\u00e1bitos para edi\u00e7\u00e3o efetiva de textos\u201d<sup>2</sup>, este cap\u00edtulo pretende resumir alguns conceitos mostrados por Bram Moolenaar em seu artigo.</p> <ol> <li> <p>http://www.moolenaar.net\u00a0\u21a9</p> </li> <li> <p>http://br-linux.org/linux/7-habitos-da-edicao-de-texto-efetiva\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_14/mova-se_rapidamente_no_texto/","title":"Mova-se rapidamente no texto","text":""},{"location":"capitulo_14/mova-se_rapidamente_no_texto/#mova-se-rapidamente-no-texto","title":"Mova-se rapidamente no texto","text":"<p>O cap\u00edtulo Movendo-se no Documento, mostra uma s\u00e9rie de comandos para agilizar a navega\u00e7\u00e3o no texto. Memorizando estes comandos ganha-se tempo consider\u00e1vel, um exemplo simples em que o usu\u00e1rio est\u00e1 na linha 345 de um arquivo decide ver o conte\u00fado da linha 1 e em seguida voltar \u00e0 linha 345: <pre><code>gg ....... vai para a linha 1\n'' ....... retorna ao \u00faltimo ponto em que estava\n</code></pre> Fica claro portanto que a navega\u00e7\u00e3o r\u00e1pida \u00e9 um dos requisitos para edi\u00e7\u00e3o efetiva de documentos.</p>"},{"location":"capitulo_14/nao_digite_duas_vezes/","title":"N\u00e3o digite duas vezes","text":""},{"location":"capitulo_14/nao_digite_duas_vezes/#nao-digite-duas-vezes","title":"N\u00e3o digite duas vezes","text":"<ul> <li> <p>O Vim complementa com \u2018tab\u2019. Veja mais no cap\u00edtulo complementa\u00e7\u00e3o com \"tab\"</p> </li> <li> <p>Use macros. Detalhes no cap\u00edtulo gravando comandos.</p> </li> <li> <p>Use abrevia\u00e7\u00f5es. Coloque abrevia\u00e7\u00f5es como abaixo em seu <code>~/.vimrc</code>.     Veja mais no cap\u00edtulo abrevia\u00e7\u00f5es.</p> </li> <li> <p>As abrevia\u00e7\u00f5es fazem o mesmo que auto-corre\u00e7\u00e3o e auto-texto em     outros editores <pre><code>iab tambem tamb\u00e9m\niab linux GNU/Linux\n</code></pre> No modo de inser\u00e7\u00e3o voc\u00ea pode usar:</p> </li> </ul> <p><pre><code>Ctrl-y  ........ copia caractere a caractere a linha acima\nCtrl-e  ........ copia caractere a caractere a linha abaixo\nCtrl-x Ctrl-l .. completa linhas inteiras\n</code></pre> Para um trecho muito copiado coloque o seu conte\u00fado em um registrador:</p> <p><pre><code>\"ayy ... copia a linha atual para o registrador `a'\n\"ap  ... cola o registrador `a'\n</code></pre> Crie abrevia\u00e7\u00f5es para erros comuns no seu arquivo de configura\u00e7\u00e3o (\u00a0/.vimrc):</p> <p><pre><code>iabbrev teh the\nsyntax keyword WordError teh\n</code></pre> As linhas acima criam uma abrevia\u00e7\u00e3o para erro de digita\u00e7\u00e3o da palavra \u2018the\u2019 e destaca textos que voc\u00ea abrir que contenham este erro.</p>"},{"location":"capitulo_14/referencias/","title":"Refer\u00eancias","text":""},{"location":"capitulo_14/referencias/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>http://www.moolenaar.net/habits_2007.pdf por Bram Moolenaar</p> </li> <li> <p>http://vim.wikia.com/wiki/Did_you_know</p> </li> </ul>"},{"location":"capitulo_14/torne_as_boas_praticas_um_habito/","title":"Torne as boas pr\u00e1ticas um h\u00e1bito","text":""},{"location":"capitulo_14/torne_as_boas_praticas_um_habito/#torne-as-boas-praticas-um-habito","title":"Torne as boas pr\u00e1ticas um h\u00e1bito","text":"<p>Para cada pr\u00e1tica produtiva procure adquirir um h\u00e1bito e mantenha-se atento ao que pode ser melhorado. Imagine tarefas complexas, procure um meio melhor de fazer e torne um h\u00e1bito.</p>"},{"location":"capitulo_14/use_autocomandos/","title":"Use autocomandos","text":""},{"location":"capitulo_14/use_autocomandos/#use-autocomandos","title":"Use autocomandos","text":"<p>No arquivo de configura\u00e7\u00e3o do Vim <code>~/.vimrc</code> pode-se pode criar comandos autom\u00e1ticos que ser\u00e3o executados diante de uma determinada circunst\u00e2ncia. O comando abaixo ser\u00e1 executado em qualquer arquivo existente, ao abrir o mesmo, posicionando o cursor no \u00faltimo local editado: <pre><code>\"autocmd BufEnter * lcd %:p:h\nautocmd BufReadPost *\n  \\ if line(\"'\\\"\") &gt; 0 &amp;&amp; line(\"'\\\"\") &lt;= line(\"$\") |\n  \\   exe \"normal g`\\\"\" |\n  \\ endif\n</code></pre> Grupo de comandos para arquivos do tipo \u2018html\u2019. Observe que o autocomando carrega um arquivo de configura\u00e7\u00e3o do Vim exclusivo para o tipo html/htm e no caso de arquivos novos \u2018BufNewFile\u2019 ele j\u00e1 cria um esqueleto puxando do endere\u00e7o indicado: <pre><code>augroup html\n au! &lt;--&gt; Remove all html autocommands\n  au!\n  au BufNewFile,BufRead *.html,*.shtml,*.htm set ft=html\n  au BufNewFile,BufRead,BufEnter  *.html,*.shtml,*.htm so ~/docs/vim/.vimrc-html\n  au BufNewFile *.html 0r ~/docs/vim/skel.html\n  au BufNewFile *.html*.shtml,*.htm /body/+  \" coloca o cursor ap\u00f3s o corpo &lt;body&gt;\n  au BufNewFile,BufRead *.html,*.shtml,*.htm set noautoindent\naugroup end\n</code></pre></p>"},{"location":"capitulo_14/use_dobras/","title":"Use dobras","text":""},{"location":"capitulo_14/use_dobras/#use-dobras","title":"Use dobras","text":"<p>O Vim pode ocultar partes do texto que n\u00e3o est\u00e3o sendo utilizadas permitindo uma melhor visualiza\u00e7\u00e3o do conte\u00fado. Mais detalhes no cap\u00edtulo Folders .</p>"},{"location":"capitulo_14/use_marcas/","title":"Use Marcas","text":""},{"location":"capitulo_14/use_marcas/#use-marcas","title":"Use marcas","text":"<p>veja a se\u00e7\u00e3o Usando marcas. <pre><code>ma ..... em modo normal cria uma marca `a'\n'a ..... move o cursor at\u00e9 a marca `a'\nd'a .... deleta at\u00e9 a marca `a'\ny'a .... copia at\u00e9 a marca `a'\n\ngg ... vai para a linha 1 do arquivo\nG .... vai para a \u00faltima linha do arquivo\n0 .... vai para o in\u00edcio da linha\n$ .... vai para o fim da linha\nfx ... pula at\u00e9 a pr\u00f3xima ocorr\u00eancia de ``x''\ndfx .. deleta at\u00e9 a pr\u00f3xima ocorr\u00eancia de ``x''\ng, ... avan\u00e7a na lista de altera\u00e7\u00f5es\ng; ... retrocede na lista de altera\u00e7\u00f5es\np .... cola o que foi deletado/copiado abaixo\nP .... cola o que foi deletado/copiado acima\nH .... posiciona o cursor no primeiro caractere da tela\nM .... posiciona o cursor no meio da tela\nL .... posiciona o cursor na \u00faltima linha da tela\n\n* ........ localiza a palavra sob o cursor\n% ........ localiza fechamentos de chaves, par\u00eanteses etc.\ng* ....... localiza palavra parcialmente\n\n'.  apostrofo + ponto retorna ao \u00faltimo local editado\n'' retorna ao local do ultimo salto\n</code></pre></p> <p>Suponha que voc\u00ea est\u00e1 procurando a palavra \u2018argc\u2019:</p> <pre><code>/argc\n</code></pre> <p>Digita \u2018n\u2019 para buscar a pr\u00f3xima ocorr\u00eancia</p> <pre><code>n\n</code></pre> <p>Um jeito mais f\u00e1cil seria:</p> <pre><code>\"coloque a linha abaixo no seu vimrc\n:set hlsearch\n</code></pre> <p>Agora use asterisco para destacar todas as ocorr\u00eancias do padr\u00e3o desejado e use a letra \u2018n\u2019 para pular entre ocorr\u00eancias, caso deseje seguir o caminho inverso use \u2018N\u2019.</p>"},{"location":"capitulo_14/use_o_file_explorer/","title":"Use o File Explorer","text":""},{"location":"capitulo_14/use_o_file_explorer/#use-o-file-explorer","title":"Use o File Explorer","text":"<p>O Vim pode navegar em pastas assim: <pre><code>vim .\n</code></pre> Voc\u00ea pode usar \u2018j\u2019 e \u2018k\u2019 para navegar e Enter para editar o arquivo selecionado:</p>"},{"location":"capitulo_14/use_quantificadores/","title":"Use quantificadores","text":""},{"location":"capitulo_14/use_quantificadores/#use-quantificadores","title":"Use quantificadores","text":"<p>Em modo normal voc\u00ea pode fazer <pre><code>10j ..... desce 10 linhas\n5dd ..... apaga as pr\u00f3ximas 5 linhas\n:50 ..... vai para a linha 50\n50gg .... vai para a linha 50\n</code></pre></p>"},{"location":"capitulo_15/acessando_documentacao_do_python_no_vim/","title":"Acessando documenta\u00e7\u00e3o do Python no Vim","text":""},{"location":"capitulo_15/acessando_documentacao_do_python_no_vim/#acessando-documentacao-do-python-no-vim","title":"Acessando documenta\u00e7\u00e3o do Python no Vim","text":"<p>Obtenha um plugin para esta tarefa em seu site oficial.</p>"},{"location":"capitulo_15/atualizando_a_documentacao_dos_plugins/","title":"Atualizando a documenta\u00e7\u00e3o dos plugins","text":""},{"location":"capitulo_15/atualizando_a_documentacao_dos_plugins/#atualizando-a-documentacao-dos-plugins","title":"Atualizando a documenta\u00e7\u00e3o dos plugins","text":"<p>Caso seja adicionado algum arquivo de documenta\u00e7\u00e3o em <code>~/.vim/doc</code> pode-se gerar novamente as tags \"links\" para navega\u00e7\u00e3o de ajuda.</p> <pre><code>:helptags $VIMRUNTIME/doc\n:helptags ~/.vim/doc\n</code></pre>"},{"location":"capitulo_15/como_testar_um_plugin_sem_instala_lo/","title":"Como testar um plugin sem instal\u00e1-lo?","text":""},{"location":"capitulo_15/como_testar_um_plugin_sem_instala_lo/#como-testar-um-plugin-sem-instala-lo","title":"Como testar um plugin sem instal\u00e1-lo?","text":"<p><pre><code>:source &lt;path&gt;/&lt;plugin&gt;\n</code></pre> Caso o plugin atenda as necessidades, pode-se instal\u00e1-lo. Este procedimento tamb\u00e9m funciona para temas de cor!</p> <p>No GNU/Linux <pre><code>~/.vim/plugin/\n</code></pre> No Windows <pre><code>~/vimfiles/plugin/\n</code></pre> Obs: Caso ainda n\u00e3o exista o diret\u00f3rio, ele pode ser criado pelo pr\u00f3prio usu\u00e1rio</p> <p>Exemplo no GNU/Linux <pre><code>+ /home/usuario/\n            |\n            |\n            + .vim\n              |\n              |\n              + plugin\n</code></pre> Obs: Alguns plugins dependem da vers\u00e3o do Vim, para saber qual a que est\u00e1 atualmente instalada: <pre><code>:ve[rsion]\n</code></pre></p>"},{"location":"capitulo_15/complementacao_de_codigo/","title":"Complementa\u00e7\u00e3o de c\u00f3digo","text":""},{"location":"capitulo_15/complementacao_de_codigo/#complementacao-de-codigos","title":"Complementa\u00e7\u00e3o de c\u00f3digos","text":"<p>O \"plugin\" snippetsEmu \u00e9 um misto entre complementa\u00e7\u00e3o de c\u00f3digos e os chamados modelos ou templates. Insere um trecho de c\u00f3digo pronto, mas vai al\u00e9m disso, permitindo saltar para trechos do modelo inserido atrav\u00e9s de um atalho configur\u00e1vel de modo a agilizar o trabalho do programador. Link para baixar.</p>"},{"location":"capitulo_15/complementacao_de_codigo/#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Um artigo ensinando como instalar o \"plugin\" snippetsEmu pode ser lido neste link. Outro plugin muito interessante para complementa\u00e7\u00e3o \u00e9 o \"autocompletepopup\" que complementa mostrando um popup durante a digita\u00e7\u00e3o, o mesmo pode ser obtido neste link, em seguida coloca-se esta linha ao vimrc:</p> <pre><code>let g:AutoComplPop_CompleteoptPreview = 1\n</code></pre> <p>A linha acima faz com que o vim abra uma janela pequena com a documenta\u00e7\u00e3o de cada m\u00e9todo que est\u00e1 sendo digitado.</p>"},{"location":"capitulo_15/criando_folders_para_arquivos_latex/","title":"Criando folders para arquivos LaTeX","text":""},{"location":"capitulo_15/criando_folders_para_arquivos_latex/#criando-folders-para-arquivos-latex","title":"Criando folders para arquivos LaTeX","text":"<pre><code>set foldmarker=\\\\begin,\\\\end\nset foldmethod=marker\n</code></pre> <p>Adicionar marcadores (labels) \u00e0s se\u00e7\u00f5es de um documento LaTeX <pre><code>:.s/^\\(\\\\section\\)\\({.*}\\)/\\1\\2\\r\\\\label\\2\n\n: ........... comando\n/ ........... inicia padr\u00e3o de busca\n^ ........... come\u00e7o de linha\n\\(palavra\\) . agrupa um trecho\n\\(\\\\section\\) agrupa `\\section'\n\\\\ .......... torna \\ literal\n{ ........... chave literal\n.* .......... qualquer caractere em qualquer quantidade\n} ........... chave literal\n/ ........... finaliza par\u00e3o de busca\n\\1 .......... repeter o grupo 1 \\(\\\\section\\)\n\\2 .......... repete o grupo 2 \\({.*\\}\\)\n\\r .......... insere quebra de linha\n\\\\ .......... insere uma barra invertida\n\\2 .......... repete o nome da se\u00e7\u00e3o\n</code></pre></p>"},{"location":"capitulo_15/criando_secoes_latex/","title":"Criando Se\u00e7\u00f5es LaTeX","text":""},{"location":"capitulo_15/criando_secoes_latex/#criando-secoes-latex","title":"Criando se\u00e7\u00f5es LaTeX","text":"<p>o comando abaixo substitui</p> <pre><code>==se\u00e7\u00e3o==\n</code></pre> <p>por</p> <pre><code>\\section{se\u00e7\u00e3o}\n</code></pre> <pre><code>:.s/^==\\s\\?\\([^=]*\\)\\s\\?==/\\\\section{\\1}/g\n\n: ......... comando\n. ......... linha atual\ns ......... substitua\n^ ......... come\u00e7o de linha\n== ........ dois sinais de igual\n\\s\\? ...... seguido ou n\u00e3o de espa\u00e7o\n[^=] ...... n\u00e3o pode haver = (^ dentro de [] \u00e9 nega\u00e7\u00e3o)\n* ......... diz que o que vem antes pode vir zero ou mais vezes\n\\s\\? ...... seguido ou n\u00e3o de espa\u00e7o\n\\\\ ........ insere uma barra invertida\n\\1 ........ repete o primeiro trecho entre ()\n</code></pre>"},{"location":"capitulo_15/formatando_textos_planos_com_syntax/","title":"Formatando textos planos com syntax","text":""},{"location":"capitulo_15/formatando_textos_planos_com_syntax/#formatando-textos-planos-com-syntax","title":"Formatando textos planos com syntax","text":"<p>Um plugin que adiciona sintaxe colorida a textos planos pode ser obtido neste link. Veja como instalar o este plugin no cap\u00edtulo Um wiki para o Vim.</p>"},{"location":"capitulo_15/movimentando_em_camel_case/","title":"Movimentando em CamelCase","text":""},{"location":"capitulo_15/movimentando_em_camel_case/#movimentando-em-camel-case","title":"Movimentando em camel case","text":"<p>O plugin CamelCaseMotion auxilia a navega\u00e7\u00e3o em palavras em camel case ou separadas por sublinhados, atrav\u00e9s de mapeamentos similares aos que fazem a movimenta\u00e7\u00e3o normal entre strings, e \u00e9 um recurso de grande ajuda quando o editor \u00e9 utilizado para programa\u00e7\u00e3o.</p> <p>Ap\u00f3s instalado o plugin, os seguintes atalhos ficam dispon\u00edveis: * ,w Movimenta para a pr\u00f3xima posi\u00e7\u00e3o camel dentro da string * ,b Movimenta para a posi\u00e7\u00e3o camel anterior dentro da string * ,e Movimenta para o caractere anterior \u00e0 pr\u00f3xima posi\u00e7\u00e3o camel dentro da string</p> <p>Fonte: Blog do Eust\u00e1quioRangel</p>"},{"location":"capitulo_15/o_plugin_auto_complete/","title":"O Plugin AutoComplete","text":""},{"location":"capitulo_15/o_plugin_auto_complete/#o-plugin-autocomplete","title":"O plugin AutoComplete","text":"<p>Este plugin trabalha exibindo sugest\u00f5es no modo de inser\u00e7\u00e3o, \u00e0 medida que o usu\u00e1rio digita aparece um popup com sugest\u00f5es para poss\u00edveis complementos, bastando pressionar <code>&lt;Enter&gt;</code> para aceitar as sugest\u00f5es. Neste link, voc\u00ea pode fazer o download do plugin.</p>"},{"location":"capitulo_15/o_plugin_ctags/","title":"O Plugin Ctags","text":""},{"location":"capitulo_15/o_plugin_ctags/#o-plugin-ctags","title":"O plugin Ctags","text":"<p>Ctags em si \u00e9 um programa externo que indexa arquivos de c\u00f3digo fonte. Ele l\u00ea o c\u00f3digo fonte em busca de identificadores, declara\u00e7\u00f5es de fun\u00e7\u00e3o, vari\u00e1veis, e constr\u00f3i seu \u00edndex de refer\u00eancias cruzadas. Mas vamos ao plugin, mesmo por que n\u00e3o estamos no CtagsBook.</p> <p>Primeiro precisamos ter o arquivos de tags. Para tal, usamos o comando:</p> <pre><code>ctags -R &lt;arquivos&gt;\n</code></pre> <p>Normalmente o par\u00e2metro <code>&lt;arquivos&gt;</code> pode ser uma express\u00e3o regular do tipo <code>*.[ch]</code> e afins. Depois de obter o arquivo de tags, voc\u00ea j\u00e1 pode sair usando os atalhos do plugin para navegar pelo c\u00f3digo fonte. Com o cursor em cima de um identificador, usando o atalho <code>ctrl+]</code> o cursor pula diretamente para a sua declara\u00e7\u00e3o. O atalho <code>ctrl+o</code> volta o cursor para a posi\u00e7\u00e3o inicial.</p> <p>Quando navegando por um c\u00f3digo fonte muito extenso com v\u00e1rios diret\u00f3rios, \u00e9 poss\u00edvel mapear o caminho dos arquivos usando o caminho absoluto deles no seu diret\u00f3rio de trabalho deste jeito:</p> <pre><code>find $(pwd) -regex \".*py$\" | xargs ctags\n</code></pre> <p>Assim voc\u00ea pode copiar o arquivo de tags para todos os diret\u00f3rios e mesmo assim conseguir usar os atalhos do plugin para navegar no c\u00f3digo fonte.</p> <p>Pode-se obter o programa Ctags neste link. O plugin de Ctags para o Vim est\u00e1 neste link, e para instal\u00e1-lo basta copi\u00e1-lo para a pasta apropriada:</p> <pre><code> ~/vimfiles/plugin .......... no windows\n ~/.vim/plugin .............. no Gnu/Linux\n</code></pre>"},{"location":"capitulo_15/o_plugin_easy_grep/","title":"O Plugin EasyGrep","text":""},{"location":"capitulo_15/o_plugin_easy_grep/#o-plugin-easygrep","title":"O plugin EasyGrep","text":"<p>Usu\u00e1rios de sistemas Unix Like<sup>1</sup>, j\u00e1 conhecem o poder do comando <code>grep</code>, usando este comando procuramos palavras dentro de arquivos. Este plugin simplifica esta tarefa, al\u00e9m de permitir a utiliza\u00e7\u00e3o da vers\u00e3o do <code>grep</code> nativa do Vim <code>vimgrep</code>, assim usu\u00e1rios do Windows tamb\u00e9m podem usar este recurso. Um comando <code>grep</code> funciona mais ou menos assim:</p> <pre><code>grep [op\u00e7\u00f5es] \"padr\u00e3o\" /caminho\n</code></pre> <p>Mas no caso do plugin EasyGrep fica assim:</p> <pre><code>:Grep foo  ........ procura pela palavra 'foo'\n:GrepOptions ...... exibe as op\u00e7\u00f5es de uso do plugin\n</code></pre> <p>O plugin pode ser obtido no seguinte link. J\u00e1 sua instala\u00e7\u00e3o \u00e9 simples, basta copiar o arquivo obtido no link acima para a pasta:</p> <pre><code>~/.vim/plugin .......... no caso do linux\n~/vimfiles/plugin ...... no caso do windows\n</code></pre> <p>Um v\u00eddeo de exemplo (na verdade uma anima\u00e7\u00e3o gif) pode ser visto aqui.</p> <ol> <li> <p>Sistemas da fam\u00edlia Unix tipo o GNU/Linux\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_15/o_plugin_findmate/","title":"O Plugin FindMate","text":""},{"location":"capitulo_15/o_plugin_findmate/#o-plugin-findmate","title":"O plugin FindMate","text":"<p>Um plugin que agiliza a busca por arquivos na pasta pessoal, dispon\u00edvel neste link. Basta coloca-lo na pasta <code>/home/usuario/.vim/plugins/</code> e digitar duas vezes v\u00edrgula e ele substituir\u00e1 para:</p> <pre><code>:FindMate\n</code></pre> <p>Digita-se ent\u00e3o uma palavra e <code>&lt;Enter&gt;</code> para se obter a lista de arquivos que correspondem ao padr\u00e3o.</p>"},{"location":"capitulo_15/o_plugin_project/","title":"O Plugin Project","text":""},{"location":"capitulo_15/o_plugin_project/#o-plugin-project","title":"O Plugin Project","text":"<p>O plugin project acess\u00edvel atrav\u00e9s deste link cria toda uma estrutura de gerenciamento de projetos. Para programadores \u00e9 uma funcionalidade extremamente necess\u00e1ria. Costuma-se trabalhar com v\u00e1rios arquivos da mesma fam\u00edlia (\"extens\u00e3o\"), e ao clicar em um dos arquivos do projeto o mesmo \u00e9 aberto instantaneamente.</p> <pre><code>:Project ......... abre uma janela lateral para o projeto\n\\C ............... inicia a cria\u00e7\u00e3o de um projeto (recursivamente)\n\\c ............... inicia a cria\u00e7\u00e3o de um projeto na pasta local\n</code></pre> <p>Ap\u00f3s digitar o atalho de cria\u00e7\u00e3o do projeto aparecer\u00e1 uma janela para designar um nome para o mesmo, em seguida digita-se o caminho para o diret\u00f3rio do projeto, ap\u00f3s isto digita-se <code>.</code> (ponto) como par\u00e2metro, cria-se um filtro como <code>*.py</code>. Para criar uma entrada (acesso ao plugin) no menu do Gvim colocamos a seguinte linha no <code>vimrc</code>.</p> <pre><code>amenu &amp;Projetos.togle &lt;Plug&gt;ToggleProject&lt;cr&gt;\n</code></pre> <p>Pode-se definir um projeto manualmente assim:</p> <pre><code>nome=~/docs/ CD=. filter=\"*.txt\" {\n\n}\n</code></pre> <p>Ao recarregar o Vim pode-se abrir o Plugin <code>:Projetc</code> e pressionar o atalho <code>\\r</code> para que o mesmo gere um \u00edndice dos arquivos contidos no caminho indicado.</p>"},{"location":"capitulo_15/o_plugin_pydiction/","title":"O Plugin Pydiction","text":""},{"location":"capitulo_15/o_plugin_pydiction/#o-plugin-pydiction","title":"O plugin pydiction","text":"<p>Plugin que completa c\u00f3digos python assim:</p> <pre><code>import sys\nsys.&lt;tab&gt;\n</code></pre> <p>O plugin cont\u00e9m dois arquivos:</p> <ul> <li> <ol> <li><code>pydiction.py</code> deve ser colocado no <code>path</code></li> </ol> </li> <li> <ol> <li><code>pydiction</code> deve ser colocado em um lugar de sua prefer\u00eancia</li> </ol> </li> </ul> <p>Deve-se adicionar algumas linhas do <code>.vimrc</code>. No exemplo abaixo o dicion\u00e1rio \u00e9 adicionado ao diret\u00f3rio <code>~/.vim/dict</code></p> <pre><code>if has(\"autocmd\")\n    autocmd FileType python set complete+=k/.vim/dict/pydiction isk+=.,(\nendif \" has(\"autocmd\")\n</code></pre> <p>Pode-se obter o plugin  neste link.</p>"},{"location":"capitulo_15/o_plugin_search_complete/","title":"O Plugin SearchComplete","text":""},{"location":"capitulo_15/o_plugin_search_complete/#o-plugin-searchcomplete","title":"O plugin SearchComplete","text":"<p>Para que o vim complete op\u00e7\u00f5es de busca com a tecla <code>&lt;tab&gt;</code>, digita-se uma palavra parcialmente e o plugin atua, exibindo palavras que tem o mesmo in\u00edcio, por exemplo:</p> <pre><code>/merca&lt;tab&gt;\n/mercado\n/mercantil\n/mercadol\u00f3gico\n</code></pre> <p>Cada vez que se pressiona a tecla <code>&lt;tab&gt;</code> o cursor saltar\u00e1 para a pr\u00f3xima ocorr\u00eancia daquele fragmento de palavra. Pode-se obter o plugin SearchComplete no seguinte link, e para instal\u00e1-lo basta copi\u00e1-lo para a pasta apropriada:</p> <pre><code>~/vimfiles/plugin .......... no windows\n~/.vim/plugin .............. no Gnu/Linux\n</code></pre> <p>H\u00e1 outro plugin similar chamado <code>CmdlineComplete</code> dispon\u00edvel neste link.</p>"},{"location":"capitulo_15/plugin_fuzzyfinder/","title":"Plugin FuzzyFinder","text":""},{"location":"capitulo_15/plugin_fuzzyfinder/#plugin-fuzzyfinder","title":"Plugin FuzzyFinder","text":"<p>Este plugin \u00e9 a implementa\u00e7\u00e3o de um recurso do editor Texmate<sup>1</sup>. Sua proposta \u00e9 acessar de forma r\u00e1pida:</p> <ol> <li>Arquivos <code>:FuzzyFinderFile</code></li> <li>Arquivos rec\u00e9m editados <code>:FuzzyFinderMruFile</code></li> <li>Comandos rec\u00e9m utilizados <code>:FuzzyFinderMruCmd</code></li> <li>Favoritos <code>:FuzzyFinderAddBookmark, :FuzzyFinderBookmarks</code></li> <li>Navega\u00e7\u00e3o por diret\u00f3rios <code>:FuzzyFinderDir</code></li> <li>Tags <code>:FuzzyFinderTag</code></li> </ol> <p>Para ver o plugin em a\u00e7\u00e3o acesse este video e para obt\u00ea-lo acesse  este link, para instal\u00e1-lo basta copiar para o diret\u00f3rio <code>~/.vim/plugin</code>.</p> <ol> <li> <p>Editor de textos da Apple com muitos recursos\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_15/plugin_para_latex/","title":"Plugin para LaTeX","text":""},{"location":"capitulo_15/plugin_para_latex/#plugin-para-latex","title":"Plugin para LaTeX","text":"<p>Um plugin completo para LaTeX est\u00e1 acess\u00edvel aqui. Uma vez adicionado o plugin voc\u00ea pode inserir seus templates em:</p> <pre><code>~/.vim/ftplugin/latex-suite/templates\n</code></pre>"},{"location":"capitulo_15/plugin_para_manipular_arquivos/","title":"Plugin para manipular arquivos","text":""},{"location":"capitulo_15/plugin_para_manipular_arquivos/#plugin-para-manipular-arquivos","title":"Plugin para manipular arquivos","text":"<p>Acesse o plugin neste link. Para entender este plugin acesse um v\u00eddeo neste link</p>"},{"location":"capitulo_15/plugins/","title":"Plugins","text":"<p>\"Plugins\"<sup>1</sup> s\u00e3o um meio de estender as funcionalidades do Vim, h\u00e1 \"plugins\" para diversas tarefas, desde wikis para o Vim at\u00e9 ferramentas de aux\u00edlio a navega\u00e7\u00e3o em arquivos com \u00e9 o caso do \"plugin\" NerdTree, que divide uma janela que permite navegar pelos diret\u00f3rios do sistema a fim de abrir arquivos a serem editados.</p> <ol> <li> <p>Plugins s\u00e3o recursos que se adicionam aos programas\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_15/um_wiki_para_o_vim/","title":"Um wiki para o Vim","text":""},{"location":"capitulo_15/um_wiki_para_o_vim/#um-wiki-para-o-vim","title":"Um wiki para o Vim","text":"<p>O \"plugin\" wikipot implementa um wiki para o Vim no qual voc\u00ea define um \"link\" com a nota\u00e7\u00e3o WikiWord, onde um \"link\" \u00e9 uma palavra que come\u00e7a com uma letra mai\u00fascula e tem outra letra mai\u00fascula no meio. Obtenha o plugin neste link.</p>"},{"location":"capitulo_2/abrindo_o_arquivo_para_edicao/","title":"Abrindo o arquivo para a edi\u00e7\u00e3o","text":""},{"location":"capitulo_2/abrindo_o_arquivo_para_edicao/#abrindo-o-arquivo-para-a-edicao","title":"Abrindo o arquivo para a edi\u00e7\u00e3o","text":"<p>Portanto, a primeira coisa a fazer \u00e9 abrir um arquivo. Como visto, para abrir um arquivo com Vim, digite em um terminal: <pre><code>vim texto.txt\n</code></pre> onde <code>texto.txt</code> \u00e9 o nome do arquivo que deseja-se criar ou editar.</p> <p>Caso deseje abrir o arquivo na linha 10, usa-se: <pre><code>vim +10 /caminho/para/o/arquivo\n</code></pre> se quiser abrir o arquivo na linha que cont\u00e9m um determinado padr\u00e3o , digite: <pre><code>vim +/padr\u00e3o arquivo\n</code></pre> Caso o padr\u00e3o tenha espa\u00e7os no nome coloque entre aspas ou use escape \"\\\" a fim de n\u00e3o obter erro.</p> <p>Se o vim for aberto sem indica\u00e7\u00e3o de arquivo pode-se indicar o arquivo a ser editado em modo de comando desta forma: <pre><code>:e /home/usuario/arquivo\n</code></pre></p>"},{"location":"capitulo_2/abrindo_o_ultimo_arquivo_rapidamente/","title":"Abrindo o \u00faltimo arquivo rapidamente","text":""},{"location":"capitulo_2/abrindo_o_ultimo_arquivo_rapidamente/#abrindo-o-ultimo-arquivo-rapidamente","title":"Abrindo o \u00faltimo arquivo rapidamente","text":"<p>O Vim guarda um registrador para cada arquivo editado veja mais no cap\u00edtulo Registradores. <pre><code>'0 ........ abre o \u00faltimo arquivo editado\n'1 ........ abre o pen\u00faltimo arquivo editado\nCtrl-6 .... abre o arquivo alternativo (booleano)\n</code></pre> Bom, j\u00e1 que abrimos o nosso \u00faltimo arquivo editado com o comando <pre><code>'0\n</code></pre> podemos, e provavelmente o faremos, editar no mesmo ponto em que est\u00e1vamos editando da \u00faltima vez: <pre><code>gi\n</code></pre> Pode-se criar um <code>alias</code><sup>1</sup> para que ao abrir o vim o mesmo abra o \u00faltimo arquivo editado: <code>alias lvim=\"vim -c \\\"normal '0\\\"\"</code>. No cap\u00edtulo Buscas e Substitui\u00e7\u00f5es voc\u00ea encontra mais dicas de edi\u00e7\u00e3o.</p> <ol> <li> <p>Abrevia\u00e7\u00e3o para um comando do GNU/Linux\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_2/comentando_rapidamente_um_trecho/","title":"Comentando rapidamente um trecho","text":""},{"location":"capitulo_2/comentando_rapidamente_um_trecho/#comentando-rapidamente-um-trecho","title":"Comentando rapidamente um trecho","text":"<p>Tomando como exemplo um trecho de c\u00f3digo como abaixo: <pre><code>1   input{capitulo1}\n2   input{capitulo2}\n3   input{capitulo3}\n4   input{capitulo4}\n5   input{capitulo5}\n6   input{capitulo6}\n7   input{capitulo7}\n8   input{capitulo8}\n9   input{capitulo9}\n</code></pre> Se desejamos comentar da linha 4 at\u00e9 a linha 9 podemos fazer: <pre><code>posicionar o cursor no come\u00e7o da linha 4\nCtrl-v ........... inicia sele\u00e7\u00e3o por blocos\n5j ............... estende a sele\u00e7\u00e3o at\u00e9 o fim\nShift-i .......... inicia inser\u00e7\u00e3o no come\u00e7o da linha\n% ................ insere coment\u00e1rio (LaTeX)\nEsc .............. sai do modo de inser\u00e7\u00e3o\n</code></pre></p>"},{"location":"capitulo_2/comparando_arquivos_com_vimdiff/","title":"Comparando arquivos com o vimdiff","text":""},{"location":"capitulo_2/comparando_arquivos_com_vimdiff/#comparando-arquivos-com-o-vimdiff","title":"Comparando arquivos com o vimdiff","text":"<p>O vim possui um modo para checagem de diferen\u00e7as entre arquivos, \u00e9 bastante \u00fatil especialmente para programadores, para saber quais s\u00e3o as diferen\u00e7as entre dois arquivos faz-se: <pre><code>diff arquivo1.txt arquivo2.txt .. exibe as diferen\u00e7as\n]c ................................. mostra pr\u00f3xima diferen\u00e7a\nvim -d ............................. outro modo de abrir o vimdiff mode\n</code></pre> Para usu\u00e1rios do GNU/Linux \u00e9 poss\u00edvel ainda checar diferen\u00e7as remotamente assim: <pre><code>vimdiff projeto scp://usuario@estacao//caminho/projeto\n</code></pre> O comando acima ir\u00e1 exibir lado a lado o arquivo local chamado <code>projeto</code> e o arquivo remoto contido no computador de nome <code>estacao</code> de mesmo nome.</p>"},{"location":"capitulo_2/convertendo_para_maiusculas/","title":"Convertendo para mai\u00fasculas","text":""},{"location":"capitulo_2/convertendo_para_maiusculas/#convertendo-para-maiusculas","title":"Convertendo para mai\u00fasculas","text":"<pre><code>gUU ....... converte a linha para mai\u00fasculo\nguu ....... converte a linha para min\u00fasculo\ngUiw ...... converte a palavra atual para mai\u00fasculo\n~ ......... altera o case do caractere atual\n</code></pre>"},{"location":"capitulo_2/copiar_colar_deletar/","title":"Copiar, Colar e Deletar","text":""},{"location":"capitulo_2/copiar_colar_deletar/#copiar-colar-e-deletar","title":"Copiar, Colar e Deletar","text":"<p>No modo normal, o ato de deletar ou eliminar o texto est\u00e1 associado \u00e0 letra <code>d</code>. No modo de inser\u00e7\u00e3o as teclas usuais tamb\u00e9m funcionam. <pre><code>dd .... deleta linha atual\nD ..... deleta restante da linha\nd$ .... deleta do ponto atual at\u00e9 o final da linha\nd^ .... deleta do cursor ao primeiro caractere n\u00e3o-nulo da linha\nd0 .... deleta do cursor ao in\u00edcio da linha\n</code></pre> Pode-se combinar o comando de dele\u00e7\u00e3o <code>d</code> com o comando de movimento (considere o modo normal) para apagar at\u00e9 a pr\u00f3xima v\u00edrgula use: <code>df,</code>.</p> <p>Copiar est\u00e1 associado \u00e0 letra <code>y</code>. <pre><code>yy .... copia a linha atual\nY ..... copia a linha atual\nye .... copia do cursor ao fim da palavra\nyb .... copia do come\u00e7o da palavra ao cursor\n</code></pre> O que foi deletado ou copiado pode ser colado: <pre><code>p .... cola o que foi copiado ou deletado abaixo\nP .... cola o que foi copiado ou deletado acima\n[p ... cola o que foi copiado ou deletado antes do cursor\n]p ... cola o que foi copiado ou deletado ap\u00f3s o cursor\n</code></pre></p>"},{"location":"capitulo_2/copiar_colar_deletar/#deletando-uma-parte-do-texto","title":"Deletando uma parte do texto","text":"<p>O comando <code>d</code> remove o conte\u00fado para a mem\u00f3ria. <pre><code>x .... apaga o caractere sob o cursor\nxp ... troca letras de lugar\nddp .. troca linhas de lugar\nd5x .. apaga os pr\u00f3ximos 5 caracteres\ndd  .. apaga a linha atual\n5dd .. apaga 5 linhas (tamb\u00e9m pode ser: d5d)\nd5G .. apaga at\u00e9 a linha 5\ndw  .. apaga uma palavra\n5dw .. apaga 5 palavras (tamb\u00e9m pode ser: d5w)\ndl  .. apaga uma letra (sin\u00f4nimo: x)\n5dl .. apaga 5 letras (tamb\u00e9m pode ser: d5l ou 5x)\nd0  .. apaga at\u00e9 o in\u00edcio da linha\nd^  .. apaga at\u00e9 o primeiro caractere da linha\nd$  .. apaga at\u00e9 o final da linha (sin\u00f4nimo: D)\ndgg .. apaga at\u00e9 o in\u00edcio do arquivo\ndG  .. apaga at\u00e9 o final do arquivo\nD .... apaga o resto da linha\nd% ... deleta at\u00e9 o pr\u00f3ximo (,[,{\nda\" .. deleta aspas com conte\u00fado\n</code></pre> Depois do texto ter sido colocado na mem\u00f3ria, digite <code>p</code> para \u2018inserir\u2019 o texto em uma outra posi\u00e7\u00e3o. Outros comandos: <pre><code>diw .. apaga palavra mesmo que n\u00e3o esteja posicionado no in\u00edcio\ndip .. apaga o par\u00e1grafo atual\nd4b .. apaga as quatro palavras anteriores\ndfx .. apaga at\u00e9 o pr\u00f3ximo ``x''\nd/casa/+1 - deleta at\u00e9 a linha ap\u00f3s a palavra casa\n</code></pre> Trocando a letra <code>d</code> nos comandos acima por <code>c</code> de change (mudan\u00e7as) ao inv\u00e9s de deletar ser\u00e1 feita uma mudan\u00e7a de conte\u00fado. Por exemplo: <pre><code>ciw .............. modifica uma palavra\ncip .............. modifica um par\u00e1grafo\ncis .............. modifica uma senten\u00e7a\nC ................ modifica at\u00e9 o final da linha\n</code></pre></p>"},{"location":"capitulo_2/copiar_colar_deletar/#copiando-sem-deletar","title":"Copiando sem deletar","text":"<p>O comando <code>y</code> (yank) permite copiar uma parte do texto para a mem\u00f3ria sem deletar. Existe uma semelhan\u00e7a muito grande entre os comandos <code>y</code> e os comandos <code>d</code>, um ativa a \u2018c\u00f3pia\u2019 e outro a \u2018exclus\u00e3o\u2019 de conte\u00fado, suportando ambos quantificadores: <pre><code>yy  .... copia a linha atual (sin\u00f4nimo: Y)\n5yy .... copia 5 linhas (tamb\u00e9m pode ser: y5y ou 5Y)\ny/pat .. copia at\u00e9 `pat'\nyw  .... copia uma palavra\n5yw .... copia 5 palavras (tamb\u00e9m pode ser: y5w)\nyl  .... copia uma letra\n5yl .... copia 5 letras (tamb\u00e9m pode ser: y5l)\ny^  .... copia da posi\u00e7\u00e3o atual at\u00e9 o in\u00edcio da linha(sin\u00f4nimo: y0)\ny$  .... copia da posi\u00e7\u00e3o atual at\u00e9 o final da linha\nygg .... copia da posi\u00e7\u00e3o atual at\u00e9 o in\u00edcio do arquivo\nyG  .... copia da posi\u00e7\u00e3o atual at\u00e9 o final do arquivo\n</code></pre> Digite <code>P</code> (p mai\u00fasculo) para colar o texto rec\u00e9m copiado na posi\u00e7\u00e3o onde encontra-se o cursor, ou <code>p</code> para colar o texto na posi\u00e7\u00e3o imediatamente ap\u00f3s o cursor. <pre><code>yi\" .... copia trecho entre aspas (atual - inner)\nvip .... sele\u00e7\u00e3o visual para par\u00e1grafo atual `inner paragraph'\nyip .... copia o par\u00e1grafo atual\nyit .... copia a tag atual `inner tag' \u00fatil para arquivos HTML, XML, etc.\n</code></pre></p>"},{"location":"capitulo_2/copiar_colar_deletar/#usando-a-area-de-transferencia-clipboard","title":"Usando a \u00e1rea de transfer\u00eancia <code>Clipboard</code>","text":"<p>Exemplos para o modo visual: <pre><code>Ctrl-insert .... copia \u00e1rea selecionada\nShift-insert ... cola o que est\u00e1 no clipboard\nCtrl-del ....... recorta para o clipboard\n</code></pre> Caso obtenhamos erro ao colar textos da \u00e1rea de transfer\u00eancia usando os comandos acima citados podemos usar outra alternativa. Os comandos abaixo preservam a indenta\u00e7\u00e3o<sup>1</sup>. <pre><code>\"+p ............ cola preservando indenta\u00e7\u00e3o\n\"+y ............ copia \u00e1rea selecionada\n</code></pre> Para evitar erros ao colar usando <code>Shift-insert</code> use este comando <code>:set paste</code>.</p>"},{"location":"capitulo_2/copiar_colar_deletar/#removendo-linhas-duplicadas","title":"Removendo linhas duplicadas","text":"<pre><code>:sort u\n</code></pre> <ol> <li> <p>Espa\u00e7amento entre o come\u00e7o da linha e o in\u00edcio do texto\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_2/desfazendo/","title":"Desfazendo","text":""},{"location":"capitulo_2/desfazendo/#desfazendo","title":"Desfazendo","text":"<p>Se voc\u00ea cometer um erro, n\u00e3o se preocupe! Use o comando <code>u</code>: <pre><code>u ............ desfazer\nU ............ desfaz mudan\u00e7as na \u00faltima linha editada\nCtrl-r  ...... refazer\n</code></pre></p>"},{"location":"capitulo_2/desfazendo/#undo-tree","title":"Undo tree","text":"<p>Um novo recurso muito interessante que foi adicionado ao Vim a partir da vers\u00e3o 7 \u00e9 a chamada \u00e1rvore do desfazer. Se voc\u00ea desfaz alguma coisa e faz uma altera\u00e7\u00e3o, um novo <code>branch</code> (galho) ou deriva\u00e7\u00e3o de altera\u00e7\u00e3o \u00e9 criado. Basicamente, os <code>branches</code> nos permitem acessar quaisquer altera\u00e7\u00f5es ocorridas no arquivo.</p>"},{"location":"capitulo_2/desfazendo/#um-exemplo-didatico","title":"Um exemplo did\u00e1tico","text":"<p>Siga estes passos (para cada passo <code>&lt;Esc&gt;</code>, ou seja, saia do modo de inser\u00e7\u00e3o)</p> <p>Passo 1</p> <p>:   - digite na linha 1 o seguinte texto <pre><code># controle de fluxo &lt;Esc&gt;\n</code></pre> Passo 2</p> <p>:   - digite na linha 2 o seguinte texto <pre><code># um la\u00e7o for &lt;Esc&gt;\n</code></pre> Passo 3</p> <p>:   - Nas linhas 3 e 4 digite... <pre><code>for i in range(10):\n    print i  &lt;Esc&gt;\n</code></pre> Passo 4</p> <p>:   - pressione <code>u</code> duas vezes (voc\u00ea voltar\u00e1 ao passo 1)</p> <p>Passo 5</p> <p>:   - Na linha 2 digite <pre><code># operador tern\u00e1rio &lt;Esc&gt;\n</code></pre> Passo 6</p> <p>:   - na linha 3 digite <pre><code>var = (1 if teste == 0 else 2)  &lt;Esc&gt;\n</code></pre> Obs: A necessidade do <code>Esc</code> \u00e9 para demarcar as a\u00e7\u00f5es, pois o Vim considera cada inser\u00e7\u00e3o uma a\u00e7\u00e3o. Agora usando o atalho de desfazer tradicional \u201cu\u201d e de refazer <code>Ctrl-r</code> observe que n\u00e3o \u00e9 mais poss\u00edvel acessar todas as altera\u00e7\u00f5es efetuadas. Em resumo, se voc\u00ea fizer uma nova altera\u00e7\u00e3o ap\u00f3s um desfazer (altera\u00e7\u00e3o derivada) o comando refazer n\u00e3o mais vai ser poss\u00edvel para aquele momento.</p> <p>Agora volte at\u00e9 a altera\u00e7\u00e3o 1 e use seguidas vezes:</p> <pre><code>g+\n</code></pre> <p>e/ou</p> <p><pre><code>g-\n</code></pre> Dessa forma voc\u00ea acessar\u00e1 todas as altera\u00e7\u00f5es ocorridas no texto.</p>"},{"location":"capitulo_2/desfazendo/#maquina-do-tempo","title":"M\u00e1quina do tempo","text":"<p>O Vim possui muitas formas para desfazer e refazer, e uma das mais interessantes \u00e9 a m\u00e1quina do tempo! A m\u00e1quina do tempo \u00e9 extremamente \u00fatil quando no meio de um texto se percebe que boa parte do que foi adicionado \u00e9 in\u00fatil e que nos ultimos 10 minutos n\u00e3o h\u00e1 nada que se possa aproveitar. Utilizando a m\u00e1quina do tempo \u00e9 poss\u00edvel eliminar os \u00faltimos 10 minutos de texto in\u00fatil do seu documento facilmente, utilizando: <pre><code>:earlier 10m\n</code></pre> Com esse comando o documento ficar\u00e1 exatamente como ele estava 10 minutos atr\u00e1s! Caso ap\u00f3s a exclus\u00e3o perceba-se que foi exclu\u00eddo um minuto a mais, \u00e9 poss\u00edvel utilizar o mesmo padr\u00e3o novamente para avan\u00e7ar no tempo: <pre><code>:later 60s\n</code></pre> Note que dessa vez foi utilizado <code>later</code> ao inv\u00e9s de <code>earlier</code>, e passando segundos como argumento para viajar no tempo. Portanto o comando acima avan\u00e7a 60 segundos no tempo.</p> <p>Para uma melhor vis\u00e3o de quanto se deve voltar, pode ser usado o comando: <pre><code>:undolist\n</code></pre> O comando acima mostra a lista com as informa\u00e7\u00f5es sobre Desfazer e Refazer. E com essas informa\u00e7\u00f5es pode-se voltar no tempo seguindo cada modifica\u00e7\u00e3o: <pre><code>:undo 3\n</code></pre> Esse comando far\u00e1 o documento regredir 3 modifica\u00e7\u00f5es.</p>"},{"location":"capitulo_2/edicao_avancada_de_linhas/","title":"Edi\u00e7\u00e3o avan\u00e7ada de linhas","text":""},{"location":"capitulo_2/edicao_avancada_de_linhas/#edicao-avancada-de-linhas","title":"Edi\u00e7\u00e3o avan\u00e7ada de linhas","text":"<p>Seja o seguinte texto: <pre><code>1  este \u00e9 um texto novo\n2  este \u00e9 um texto novo\n3  este \u00e9 um texto novo\n4  este \u00e9 um texto novo\n5  este \u00e9 um texto novo\n6  este \u00e9 um texto novo\n7  este \u00e9 um texto novo\n8  este \u00e9 um texto novo\n9  este \u00e9 um texto novo\n10 este \u00e9 um texto novo\n</code></pre> Suponha que queira-se apagar <code>\u00e9 um texto</code> da linha 5 at\u00e9 o fim (linha 10). Isto pode ser feito assim: <pre><code>:5,$ normal 0wd3w\n</code></pre> Explicando o comando acima: <pre><code>:5,$ .... indica o intervalo que \u00e9 da linha 5 at\u00e9 o fim '$'\nnormal .. executa em modo normal\n0 ....... move o cursor para o come\u00e7o da linha\nw ....... pula uma palavra\nd3w ..... apaga 3 palavras 'w'\n</code></pre> Obs: \u00c9 claro que um comando de substitui\u00e7\u00e3o simples <pre><code>:5,$s/\u00e9 um texto//g\n</code></pre> Resolveria neste caso, mas a vantagem do m\u00e9todo anterior \u00e9 que \u00e9 v\u00e1lido para tr\u00eas palavras, sejam quais forem. Tamb\u00e9m \u00e9 poss\u00edvel empregar comandos de inser\u00e7\u00e3o como <code>i</code> ou <code>a</code> e retornar ao modo normal, bastando para isso usar o recurso <code>Ctrl-v Esc</code>, de forma a simular o acionamento da tecla <code>Esc</code> (sa\u00edda do modo de inser\u00e7\u00e3o). Por exemplo, suponha agora que deseja-se mudar a frase <code>este \u00e9 um texto novo</code> para <code>este n\u00e3o \u00e9 um texto velho</code>; pode ser feito assim: <pre><code>:5,$ normal 02win\u00e3o ^[$ciwvelho\n</code></pre> Decompondo o comando acima temos: <pre><code>:5,$ .... indica o intervalo que \u00e9 da linha 5 at\u00e9 o fim '$'\nnormal .. executa em modo normal\n0 ....... move o cursor para o come\u00e7o da linha\n2w ...... pula duas palavras (vai para a palavra \"\u00e9\")\ni ....... entra no modo de inser\u00e7\u00e3o\nn\u00e3o  .... insere a palavra \"n\u00e3o\" seguida de espa\u00e7o \" \"\n^[ ...... sai do modo de inser\u00e7\u00e3o (atrav\u00e9s de Ctrl-v seguido de Esc)\n$ ....... vai para o fim da linha\nciw ..... apaga a \u00faltima palavra (\"novo\") e entra em modo de inser\u00e7\u00e3o\nvelho ... insere a palavra \"velho\" no lugar de \"novo\"\n</code></pre> A combina\u00e7\u00e3o <code>Ctrl-v</code> \u00e9 utilizada para inserir caracteres de controle na sua forma literal, prevenindo-se assim a interpreta\u00e7\u00e3o destes neste exato momento.</p>"},{"location":"capitulo_2/editando/","title":"Editando","text":"<p>A principal fun\u00e7\u00e3o de um editor de textos \u00e9 editar textos. Parece \u00f3bvio, mas em meio a in\u00fameros recursos extras essa simples e crucial fun\u00e7\u00e3o perde-se entre todos os demais.</p>"},{"location":"capitulo_2/editando_em_modo_comando/","title":"Editando em modo de comando","text":""},{"location":"capitulo_2/editando_em_modo_comando/#editando-em-modo-de-comando","title":"Editando em modo de comando","text":"<p>Para mover um trecho usando o modo de comandos fa\u00e7a: <pre><code>:10,20m $\n</code></pre> O comando acima move <code>m</code> da linha 10 at\u00e9 a linha 20 para o final <code>$</code>. <pre><code>:g /palavra/ m 0\n</code></pre> Move as linhas contendo \u2018palavra\u2019 para o come\u00e7o (linha zero) <pre><code>:10,20y a\n</code></pre> Copia da linha \u201810\u2019 at\u00e9 a linha \u201820\u2019 para o registrador \u2018a\u2019 <pre><code>:56pu a\n</code></pre> Cola o registrador \u2018a\u2019 na linha 56 <pre><code>:g/padr\u00e3o/d\n</code></pre> O comando acima deleta todas as linhas contendo a palavra \u2018padr\u00e3o\u2019.</p> <p>Podemos inverter a l\u00f3gica do comando global <code>g</code>: <pre><code>:g!/padr\u00e3o/d\n</code></pre> N\u00e3o delete as linhas contendo padr\u00e3o, ou seja, delete tudo menos as linhas contendo a palavra \u2018padr\u00e3o\u2019. <pre><code>:v/padr\u00e3o/d ........ apaga linhas que n\u00e3o contenham \"padr\u00e3o\"\n:v/\\S/d ............ apaga linhas vazias\n\\S ................. significa \"string\"\n</code></pre> A op\u00e7\u00e3o acima equivale a <code>:g!/padr\u00e3o/d</code>. Para ler mais sobre o comando \u201cglobal\u201d utilizado nesta se\u00e7\u00e3o veja o cap\u00edtulo\u00a0O comando global \"g\". <pre><code>:7,10copy $\n</code></pre> Da linha 7 at\u00e9 a linha 10 copie para o final. Veja mais sobre edi\u00e7\u00e3o no modo de comando no cap\u00edtulo Buscas e Substitui\u00e7\u00f5es.</p>"},{"location":"capitulo_2/editando_em_modo_comando/#gerando-sequencias","title":"Gerando sequ\u00eancias","text":"<p>Para inserir uma sequ\u00eancia de 1 a 10 \u00e0 partir da linha inicial \u201czero\u201d fazemos: <pre><code>:0put =range(1,10)\n</code></pre> Caso queira inserir sequ\u00eancias como esta: <pre><code>192.168.0.1\n192.168.0.2\n192.168.0.3\n192.168.0.4\n192.168.0.5\n</code></pre> Usamos este comando: <pre><code>:for i in range(1,5) | .put ='192.168.0.'.i | endfor\n</code></pre></p>"},{"location":"capitulo_2/escrevendo_o_texto/","title":"Escrevendo o texto","text":""},{"location":"capitulo_2/escrevendo_o_texto/#escrevendo-o-texto","title":"Escrevendo o texto","text":"<p>O Vim \u00e9 um editor que possui diferentes modos de edi\u00e7\u00e3o. Entre eles est\u00e1 o modo de inser\u00e7\u00e3o, que \u00e9 o modo onde escreve-se o texto naturalmente.</p> <p>Para se entrar em modo de inser\u00e7\u00e3o, estando em modo normal, pode-se pressionar qualquer uma das teclas abaixo: <pre><code>i ..... entra no modo de inser\u00e7\u00e3o antes do caractere atual\nI ..... entra no modo de inser\u00e7\u00e3o no come\u00e7o da linha\na ..... entra no modo de inser\u00e7\u00e3o ap\u00f3s o caractere atual\nA ..... entra no modo de inser\u00e7\u00e3o no final da linha\no ..... entra no modo de inser\u00e7\u00e3o uma linha abaixo\nO ..... entra em modo de inser\u00e7\u00e3o uma linha cima\n&lt;Esc&gt; . sai do modo de inser\u00e7\u00e3o\n</code></pre> Uma vez no modo de inser\u00e7\u00e3o todas as teclas s\u00e3o exatamente como nos outros editores simples, caracteres que constituem o conte\u00fado do texto sendo digitado. O que inclui as teclas de edi\u00e7\u00e3o de caracteres.</p> <p>Para salvar o conte\u00fado escrito, digite a tecla <code>&lt;Esc&gt;</code> para sair do modo de inser\u00e7\u00e3o e digite o comando <code>:w</code> para gravar o conte\u00fado. Caso queira sair do editor, digite o comando: <code>:q</code> caso tenha ocorrido modifica\u00e7\u00f5es no arquivo desde que ele foi salvo pela \u00faltima vez haver\u00e1 uma mensagem informando que o documento foi modificado e n\u00e3o foi salvo, nesse caso, digite o comando <code>:q!</code> para fechar o Vim sem salvar as \u00faltimas modifica\u00e7\u00f5es feitas. Caso queira salvar e sair do arquivo, digite o comando <code>:wq</code></p> <p>Nesse ponto, conhece-se o vim de forma suficiente para editar qualquer coisa nele. Daqui por diante o que existe s\u00e3o as formas de realizar a edi\u00e7\u00e3o do arquivo com maior naturalidade e produtividade.</p> <p>O usu\u00e1rio iniciante do Vim pode cometer o erro de tentar decorar todos os comandos que ser\u00e3o apresentados. N\u00e3o fa\u00e7a isso. Tentar decorar comando \u00e9 exatamente o caminho contr\u00e1rio da naturalidade exigida por um editor texto para aumentar a produtividade.</p> <p>Ao contr\u00e1rio, sugere-se que leia-se todo o conte\u00fado. Identifique quais s\u00e3o as atividades de maior recorr\u00eancia no estilo individual de escrita e busque como realizar tais fun\u00e7\u00f5es com mais flu\u00eancia nesse editor. A pr\u00e1tica levar\u00e1 ao uso fluente desse comandos principais, abrindo espa\u00e7o para os demais comandos.</p> <p>Isso n\u00e3o impede que o usu\u00e1rio experimente cada comando conforme for lendo. De fato, essa pr\u00e1tica pode ajudar a selecionar as formas de edi\u00e7\u00e3o que lhe s\u00e3o mais simp\u00e1ticas ao uso.</p>"},{"location":"capitulo_2/forcando_a_edicao_de_um_novo_arquivo/","title":"For\u00e7ando a edi\u00e7\u00e3o de um novo arquivo","text":""},{"location":"capitulo_2/forcando_a_edicao_de_um_novo_arquivo/#forcando-a-edicao-de-um-novo-arquivo","title":"For\u00e7ando a edi\u00e7\u00e3o de um novo arquivo","text":"<p>O Vim, como qualquer outro editor, \u00e9 muito exigente no que se refere a altera\u00e7\u00f5es de arquivo. Ao tentar abandonar um arquivo editado e n\u00e3o salvo, o Vim ir\u00e1 se certificar da a\u00e7\u00e3o. Para abrir um novo arquivo sem salvar o antigo: <pre><code>:enew!\n</code></pre> O comando acima \u00e9 uma abrevia\u00e7\u00e3o de <code>edit new</code>. De modo similar pode-se ignorar todas as altera\u00e7\u00f5es feitas desde a abertura do arquivo: <pre><code>:e!\n</code></pre></p>"},{"location":"capitulo_2/incrementando_numeros_em_modo_normal/","title":"Incrementando n\u00fameros em modo normal","text":""},{"location":"capitulo_2/incrementando_numeros_em_modo_normal/#incrementando-numeros-em-modo-normal","title":"Incrementando n\u00fameros em modo normal","text":"<p>Posicione o cursor sobre um n\u00famero e pressione <code>` Ctrl-a ..... incrementa o n\u00famero Ctrl-x ..... decrementa o n\u00famero</code></p>"},{"location":"capitulo_2/lendo_um_arquivo_para_a_linha_atual/","title":"Lendo um arquivo para a linha atual","text":""},{"location":"capitulo_2/lendo_um_arquivo_para_a_linha_atual/#lendo-um-arquivo-para-a-linha-atual","title":"Lendo um arquivo para a linha atual","text":"<p>Se desejamos inserir na linha atual um arquivo qualquer fazemos: <pre><code>:r /caminho/para/arquivo.txt .. insere o arquivo na linha atual\n:0r arquivo ................... insere o arquivo na primeira linha\n</code></pre></p>"},{"location":"capitulo_2/lista_de_alteracoes/","title":"Lista de altera\u00e7\u00f5es","text":""},{"location":"capitulo_2/lista_de_alteracoes/#lista-de-alteracoes","title":"Lista de altera\u00e7\u00f5es","text":"<p>O Vim mant\u00e9m uma lista de altera\u00e7\u00f5es, veremos agora como usar este recurso. <pre><code>g, ................. avan\u00e7a na lista de altera\u00e7\u00f5es\ng; ................. recua na lista de altera\u00e7\u00f5es\n:changes ........... visualiza a lista de altera\u00e7\u00f5es\n</code></pre></p>"},{"location":"capitulo_2/modelines/","title":"Modelines","text":""},{"location":"capitulo_2/modelines/#modelines","title":"Modelines","text":"<p>S\u00e3o um modo de guardar prefer\u00eancias no pr\u00f3prio arquivo, suas prefer\u00eancias viajam literalmente junto com o arquivo, basta usar em uma das 5 primeiras linhas ou na \u00faltima linha do arquivo algo como: <pre><code># vim:ft=sh:\n</code></pre> OBS: Voc\u00ea deve colocar um espa\u00e7o entre a palavra <code>vim</code> e a primeira coluna, ou seja, a palavra <code>vim</code> deve vir precedida de um espa\u00e7o, da\u00ed em diante cada op\u00e7\u00e3o fica assim: <pre><code>:op\u00e7\u00e3o:\n</code></pre> Por exemplo: posso salvar um arquivo com extens\u00e3o <code>.sh</code> e dentro do mesmo indicar no <code>modeline</code> algo como: <pre><code># vim:ft=txt:nu:\n</code></pre> Apesar de usar a extens\u00e3o <code>sh</code> o Vim reconhecer\u00e1 este arquivo como <code>txt</code>, e caso eu n\u00e3o tenha habilitado a numera\u00e7\u00e3o, ainda assim o Vim usar\u00e1 por causa da op\u00e7\u00e3o <code>nu</code>. Portanto o uso de <code>modelines</code> pode ser um grande recurso para o seu dia-a-dia pois voc\u00ea pode coloca-las dentro dos coment\u00e1rios!</p>"},{"location":"capitulo_2/movendo_um_trecho_de_forma_inusitada/","title":"Movendo um trecho de forma inusitada","text":""},{"location":"capitulo_2/movendo_um_trecho_de_forma_inusitada/#movendo-um-trecho-de-forma-inusitada","title":"Movendo um trecho de forma inusitada","text":"<pre><code>:20,30m 0 ..... move da linha `20` at\u00e9 `30` para o come\u00e7o\n:20,/pat/m 5 .. move da linha `20` at\u00e9 `pat` para a linha 5\n:m-5 .......... move a linha atual 5 posi\u00e7\u00f5es acima\n:m0 ........... move a linha atual para o come\u00e7o\n:m$ ........... move para o final do documento\n</code></pre>"},{"location":"capitulo_2/o_arquivo_alternativo/","title":"O arquivo alternativo","text":""},{"location":"capitulo_2/o_arquivo_alternativo/#o-arquivo-alternativo","title":"O arquivo alternativo","text":"<p>\u00c9 muito comum um usu\u00e1rio concluir a edi\u00e7\u00e3o em um arquivo no Vim e inocentemente imaginar que n\u00e3o vai mais modificar qualquer coisa nele, ent\u00e3o este usu\u00e1rio abre um novo arquivo: <pre><code>:e novo-arquivo.txt\n</code></pre> Mas de repente o usu\u00e1rio lembra que seria necess\u00e1rio adicionar uma linha no arquivo rec\u00e9m editado, neste caso usa-se o atalho <pre><code>Ctrl-6\n</code></pre> cuja fun\u00e7\u00e3o \u00e9 alternar entre o arquivo atual e o \u00faltimo editado. Para retornar ao outro arquivo basta portanto pressionar <code>Ctrl-6</code> novamente. Pode-se abrir o arquivo alternativo em nova janela usando-se o atalho: <pre><code>Ctrl-w Ctrl-6\n</code></pre> Mais informa\u00e7\u00f5es sobre \u201cjanelas\u201d leia o cap\u00edtulo Trabalhando com janelas.</p>"},{"location":"capitulo_2/ordenando/","title":"Ordenando","text":""},{"location":"capitulo_2/ordenando/#ordenando","title":"Ordenando","text":"<p>O Vim, vers\u00e3o 7 ou superior, passa a ter um comando de ordena\u00e7\u00e3o que tamb\u00e9m permite a retirada de linhas duplicadas, tal como foi apresentado. <pre><code>:sort u ... ordena e retira linhas duplicadas\n:sort n ... ordena numericamente\n</code></pre> Obs: a ordena\u00e7\u00e3o num\u00e9rica \u00e9 diferente da ordena\u00e7\u00e3o alfab\u00e9tica se em um trecho contendo algo como: <pre><code>8\n9\n10\n11\n12\n</code></pre> E voc\u00ea tentar fazer: <pre><code>:sort\n</code></pre> O Vim colocar\u00e1 nas tr\u00eas primeiras linhas <pre><code>10\n11\n12\n</code></pre></p> <p>Portanto lembre-se que se a ordena\u00e7\u00e3o envolver n\u00fameros use: <pre><code>:sort n\n</code></pre> Voc\u00ea pode fazer a ordena\u00e7\u00e3o em um intervalo assim: <pre><code>:1,15 sort n\n</code></pre> O comando acima diz \u201c<code>*Ordene numericamente da linha 1 at\u00e9 a linha 15*</code>\u201d. Podemos ainda ordenar \u00e0 partir de uma coluna: <pre><code>:sort /.*\\%8v/   ..... ordena \u00e0 partir do 8\u00ba caractere\n</code></pre></p>"},{"location":"capitulo_2/repetindo_a_digitacao_de_linhas/","title":"Repetindo a digita\u00e7\u00e3o de linhas","text":""},{"location":"capitulo_2/repetindo_a_digitacao_de_linhas/#repetindo-a-digitacao-de-linhas","title":"Repetindo a digita\u00e7\u00e3o de linhas","text":"<p><pre><code>\" atalhos para o modo insert\nCtrl-y ......... repete linha acima\nCtrl-e ......... repete linha abaixo\nCtrl-x Ctrl-l .. repete linhas inteiras\nCtrl-a ......... repete a \u00faltima inser\u00e7\u00e3o\n</code></pre> Para saber mais sobre repeti\u00e7\u00e3o de comandos veja o cap\u00edtulo Repeti\u00e7\u00e3o de comandos.</p>"},{"location":"capitulo_2/salvando/","title":"Salvando","text":""},{"location":"capitulo_2/salvando/#salvando","title":"Salvando","text":"<p>A maneira mais simples de salvar um arquivo, \u00e9 usar o comando: <pre><code>:w\n</code></pre> Para especificar um novo nome para o arquivo, simplesmente digite: <pre><code>:w! &gt;&gt; \u201cfile\u201d\n</code></pre> O conte\u00fado ser\u00e1 gravado no arquivo <code>file</code> e voc\u00ea continuar\u00e1 no arquivo original.</p> <p>Tamb\u00e9m existe o comando <pre><code>:sav[eas] nome\n</code></pre> salva o arquivo com um novo nome e muda para esse novo arquivo (o arquivo original n\u00e3o \u00e9 apagado). Para sair do editor, salvando o arquivo atual, digite <code>:x</code> (ou <code>:wq</code>). <pre><code>:w ............................ salva\n:wq  .......................... salva e sai\n:w nome ....................... salvar como\n:saveas nome .................. salvar como\n:sav nome ..................... mesmo que \"saveas nome\"\n:x ............................ salva se existirem modifica\u00e7\u00f5es\n:10,20 w! ~/Desktop/teste.txt . salva um trecho para outro arquivo\n:w! ........................... salvamento for\u00e7ado\n:e! ........................... reinicia a edi\u00e7\u00e3o ignorando altera\u00e7\u00f5es\n</code></pre></p>"},{"location":"capitulo_2/substituindo_tabulacoes_por_espacos/","title":"Substituindo tabula\u00e7\u00f5es por espa\u00e7os","text":""},{"location":"capitulo_2/substituindo_tabulacoes_por_espacos/#substituindo-tabulacoes-por-espacos","title":"Substituindo tabula\u00e7\u00f5es por espa\u00e7os","text":"<p>Se houver necessidade<sup>1</sup> de trocar tabula\u00e7\u00f5es por espa\u00e7os fazemos assim: <pre><code>:set tabstop=4 \"tamanho da parada de tabula\u00e7\u00e3o\n:set expandtab\n:retab\n</code></pre> Para fazer o contr\u00e1rio usamos algo como: <pre><code>:%s/\\s\\{4,}/&lt;pressiona-se ctrl-i&gt;/g\n</code></pre> onde <pre><code>&lt;Ctrl-i&gt;...... insere uma tabula\u00e7\u00e3o\n</code></pre> Explicando: <pre><code>: ............ comando\n% ............ em todo arquivo\ns ............ substitua\n/ ............ padr\u00e3o de busca\n\\s ........... localiza espa\u00e7o\n\\{4,} ........ quatro vezes\n/ ............ inicio da substitui\u00e7\u00e3o\n&lt;Ctrl-i&gt; ..... pressione Ctrl-i para inserir &lt;Tab&gt;\n/ ............ fim da substitui\u00e7\u00e3o\ng ............ global\n</code></pre></p> <ol> <li> <p>Em c\u00f3digos Python por exemplo n\u00e3o se pode misturar espa\u00e7os e tabula\u00e7\u00f5es\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_2/uma_calculadora_diferente/","title":"Uma calculadora diferente","text":""},{"location":"capitulo_2/uma_calculadora_diferente/#uma-calculadora-diferente","title":"Uma calculadora diferente","text":"<p>Sempre que for necess\u00e1rio digitar o resultado de uma express\u00e3o matem\u00e1tica (portanto no modo de inser\u00e7\u00e3o) pode-se usar o atalho <code>Ctrl-r =</code>, ele ativa o registrador de express\u00f5es, na linha de comando do Vim aparece um sinal de igual, digita-se ent\u00e3o uma express\u00e3o matem\u00e1tica qualquer tipo <code>35\\*6</code> e em seguida pressiona-se <code>Enter</code>, o Vim coloca ent\u00e3o o resultado da express\u00e3o no lugar desejado. Portanto n\u00e3o precisa-se recorrer a nenhuma calculadora para fazer c\u00e1lculos. Pode-se fazer uso do \u201cregistrador de Express\u00f5es\u201d dentro de macros, ou seja, ao gravar a\u00e7\u00f5es pode-se fazer uso deste recurso, aumentando assim sua complexidade e poder! Para ler sobre \u201cmacros\u201d veja o cap\u00edtulo Gravando Comandos. E veja tamb\u00e9m o cap\u00edtulo registrador de express\u00f5es.</p> <p>Na cap\u00edtulo Calculadora Cient\u00edfica com Vim h\u00e1 uma descri\u00e7\u00e3o sobre como fazer c\u00e1lculos com maior precis\u00e3o e complexidade.</p> <p>Se a inten\u00e7\u00e3o for apenas exibir um calculo na barra de comandos \u00e9 poss\u00edvel fazer algo assim: <pre><code>:echo 5.2 * 3\n</code></pre></p>"},{"location":"capitulo_2/usando_grep_interno_do_vim/","title":"Usando o grep interno do Vim","text":""},{"location":"capitulo_2/usando_grep_interno_do_vim/#usando-o-grep-interno-do-vim","title":"Usando o <code>grep</code> interno do Vim","text":"<p>Para editar todos os arquivos que contenham a palavra \u201cinusitada\u201d: <pre><code>:vimgrep /\\cinusitada/ *\n</code></pre> a op\u00e7\u00e3o <code>\\c</code> torna a busca indiferente a letras mai\u00fasculas e min\u00fasculas.</p> <p>Obs: o Vim busca \u00e0 partir do diret\u00f3rio atual, para se descobrir o diret\u00f3rio atual ou mud\u00e1-lo: <pre><code>:pwd ........... exibe o diret\u00f3rio atual\n:cd /diret\u00f3rio   muda de diret\u00f3rio\n</code></pre></p>"},{"location":"capitulo_3/movendo-se_no_documento/","title":"Movendo-se no Documento","text":"<p>A fim de facilitar o entendimento acerca das teclas e atalhos de movimenta\u00e7\u00e3o, faz-se \u00fatil uma breve recapitula\u00e7\u00e3o de conceitos relacionados. Para se entrar em modo de inser\u00e7\u00e3o, estando em modo normal, pode-se pressionar qualquer uma das teclas abaixo:</p> <pre><code>i ..... entra no modo de inser\u00e7\u00e3o antes do caractere atual\nI ..... entra no modo de inser\u00e7\u00e3o no come\u00e7o da linha\na ..... entra no modo de inser\u00e7\u00e3o ap\u00f3s o caractere atual\nA ..... entra no modo de inser\u00e7\u00e3o no final da linha\no ..... entra no modo de inser\u00e7\u00e3o uma linha abaixo\nO ..... entra em modo de inser\u00e7\u00e3o uma linha cima\n&lt;Esc&gt; . sai do modo de inser\u00e7\u00e3o\n</code></pre> <p>Uma vez no modo de inser\u00e7\u00e3o todas as teclas s\u00e3o exatamente como nos outros editores simples, caracteres que constituem o conte\u00fado do texto sendo digitado. Para sair do modo de inser\u00e7\u00e3o e retornar ao modo normal digita-se <code>&lt;Esc&gt;</code> ou <code>Ctrl-[</code>. As letras <code>h</code>, <code>k</code>, <code>l</code>, <code>j</code> funcionam como setas:</p> <pre><code>   k\nh     l\n   j\n</code></pre> <p>ou seja, a letra <code>k</code> \u00e9 usada para subir no texto, a letra <code>j</code> para descer, a letra <code>h</code> para mover-se para a esquerda e a letra <code>l</code> para mover-se para a direita. A ideia \u00e9 que se consiga ir para qualquer lugar do texto sem tirar as m\u00e3os do teclado, sendo portanto alternativas para as setas de movimenta\u00e7\u00e3o usuais do teclado. Ao inv\u00e9s de manter os quatro dedos sobre H, J, K e L, \u00e9 aconselh\u00e1vel manter o padr\u00e3o de digita\u00e7\u00e3o com o indicador da m\u00e3o esquerda sobre a tecla F e o da m\u00e3o direita sobre a letra J, sendo que seu indicador da m\u00e3o direita vai alternar entre a tecla J e H para a movimenta\u00e7\u00e3o.</p> <p>Para ir para linhas espec\u00edficas \u2018em modo normal\u2019 digite:</p> <pre><code>:n&lt;Enter&gt;  ..... vai para linha `n'\nngg ............ vai para linha `n'\nnG ............. vai para linha `n'\n</code></pre> <p>onde <code>n</code> corresponde ao n\u00famero da linha. Para retornar ao modo normal pressione <code>&lt;Esc&gt;</code> ou use <code>Ctrl-[</code> (<code>^[</code>).</p> <p>No vim \u00e9 poss\u00edvel realizar diversos tipos de movimentos, tamb\u00e9m conhecidos como saltos no documento. A lista abaixo aponta o comandos de salto t\u00edpicos.</p> <pre><code>gg .... vai para o in\u00edcio do arquivo\nG ..... vai para o final do arquivo\n0 ..... vai para o in\u00edcio da linha\n^ ..... vai para o primeiro caractere da linha (ignora\n        espa\u00e7os)\n$ ..... vai para o final da linha\n25gg .. salta para a linha 25\n'' .... salta para a linha da \u00faltima posi\u00e7\u00e3o em que o cursor\n        estava\nfx .... para primeira ocorr\u00eancia de x\ntx .... Para ir para uma letra antes de x\nFx .... Para ir para ocorr\u00eancia anterior de x\nTx .... Para ir para uma letra ap\u00f3s o \u00faltimo x\n* ..... Pr\u00f3xima ocorr\u00eancia de palavra sob o cursor\n`' .... salta exatamente para a posi\u00e7\u00e3o em que o cursor\n        estava\ngd .... salta para declara\u00e7\u00e3o de vari\u00e1vel sob o cursor\ngD .... salta para declara\u00e7\u00e3o (global) de vari\u00e1vel sob o\n        cursor\nw ..... move para o in\u00edcio da pr\u00f3xima palavra\nW ..... pula para pr\u00f3xima palavra (desconsidera h\u00edfens)\nE ..... pula para o final da pr\u00f3xima palavra (desconsidera\n        hifens)\ne ..... move o cursor para o final da pr\u00f3xima palavra\nzt .... movo o cursor para o topo da p\u00e1gina\nzm .... move o cursor para o meio da p\u00e1gina\nzz .... move a p\u00e1gina de modo com que o cursor fique no\n        centro\nn ..... move o cursor para a pr\u00f3xima ocorr\u00eancia da busca\nN ..... move o cursor para a ocorr\u00eancia anterior da busca\n</code></pre> <p>Tamb\u00e9m \u00e9 poss\u00edvel efetuar saltos e fazer algo mais ao mesmo tempo, a lista abaixo aponta algumas dessas possibilidades.</p> <pre><code>gv .... repete a \u00faltima sele\u00e7\u00e3o visual e posiciona o cursor\n        neste local\n% ..... localiza par\u00eanteses correspondente\no ..... letra `o', alterna extremos de sele\u00e7\u00e3o visual\nyG .... copia da linha atual at\u00e9 o final do arquivo\nd$ .... deleta do ponto atual at\u00e9 o final da linha\ngi .... entra em modo de inser\u00e7\u00e3o no ponto da \u00faltima edi\u00e7\u00e3o\ngf .... abre o arquivo sob o cursor\n</code></pre> <p>Para o Vim \u201cpalavras-separadas-por-h\u00edfen\u201d s\u00e3o consideradas em separado, portanto se voc\u00ea usar, em modo normal <code>w</code> para avan\u00e7ar entre as palavras ele pular\u00e1 uma de cada vez, no entanto se usar <code>W</code> em mai\u00fasculo (como visto) ele pular\u00e1 a \u201cpalavra-inteira\u201d :)</p> <pre><code>E .... pula para o final de palavras com hifen\nB .... pula palavras com hifen (retrocede)\nW .... pula palavras hifenizadas (come\u00e7o)\n</code></pre> <p>Podemos pular senten\u00e7as:</p> <pre><code>) .... pula uma senten\u00e7a para frente\n( .... pula uma senten\u00e7a para tr\u00e1s\n} .... pula um par\u00e1grafo para frente\n{ .... pula um par\u00e1grafo para tr\u00e1s\ny) ... copia uma senten\u00e7a para frente\nd} ... deleta um par\u00e1grafo para frente\n</code></pre> <p>Caso tenha uma estrutura como abaixo:</p> <pre><code>def pot(x):\n   return x**2\n</code></pre> <p>E tiver uma refer\u00eancia qualquer para a fun\u00e7\u00e3o <code>pot</code> e desejar mover o cursor at\u00e9 sua defini\u00e7\u00e3o basta posicionar o cursor sobre a palavra <code>pot</code> e pressionar (em modo normal):</p> <pre><code>gd\n</code></pre> <p>Se a vari\u00e1vel for global, ou seja, estiver fora do documento (provavelmente em outro) use:</p> <pre><code>gD\n</code></pre> <p>Quando definimos uma vari\u00e1vel tipo</p> <pre><code>var = 'teste'\n</code></pre> <p>e em algum ponto do documento houver refer\u00eancia a esta vari\u00e1vel e se desejar ver seu conte\u00fado fazemos</p> <pre><code>[i\n</code></pre> <p>Na verdade o atalho acima lhe mostrar\u00e1 o \u00faltimo ponto onde foi feita a atribui\u00e7\u00e3o \u00e0quela vari\u00e1vel que est\u00e1 sob o cursor, uma m\u00e3o na roda para os programadores de plant\u00e3o! Observe na barra de status do Vim se o tipo de arquivo est\u00e1 certo. Para detalhes sobre como personalizar a barra de status no cap\u00edtulo Fun\u00e7\u00e3o para barra de status.</p> <pre><code>ft=python\n</code></pre> <p>a busca por defini\u00e7\u00f5es de fun\u00e7\u00e3o s\u00f3 funciona se o tipo de arquivo estiver correto</p> <pre><code>:set ft=python\n</code></pre> <p>Um mapeamento interessante que facilita a movimenta\u00e7\u00e3o at\u00e9 linhas que contenham determinada palavra de um modo bem simples, bastando pressionar <code>,f</code> pode ser feito assim:</p> <pre><code>map ,f [I:let nr = input(\"Which one: \")&lt;Bar&gt;exe \"normal \" . nr .\"[\\t\"&lt;CR&gt;\n</code></pre> <p>Uma vez definido o mapeamento acima e pressionando-se o atalho associado, que neste caso \u00e9 <code>,f</code> o vim exibir\u00e1 as uma op\u00e7\u00e3o para pular para as ocorr\u00eancias da palavra assim:</p> <pre><code>1:  trecho contendo a palavra\n2:  outro trecho contendo a palavra\nWhich one:\n</code></pre> <p>outro detalhe para voltar ao \u00faltimo ponto em que voc\u00ea estava</p> <pre><code>''\n</code></pre> <p>A maioria dos comandos do Vim pode ser precedida por um quantificador:</p> <pre><code>5j ..... desce 5 linhas\nd5j .... deleta as pr\u00f3ximas 5 linhas\nk ...... em modo normal sobe uma linha\n5k ..... sobe 5 linhas\ny5k .... copia 5 linhas (para cima)\nw ...... pula uma palavra para frente\n5w ..... pula 5 palavras\nd5w .... deleta 5 palavras\nb ...... retrocede uma palavra\n5b ..... retrocede 5 palavras\nfx ..... posiciona o cursor em \"x\"\ndfx .... deleta at\u00e9 o pr\u00f3ximo \"x\"\ndgg .... deleta da linha atual at\u00e9 o come\u00e7o do arquivo\ndG ..... deleta at\u00e9 o final do arquivo\nyG ..... copia at\u00e9 o final do arquivo\nyfx .... copia at\u00e9 o pr\u00f3ximo \"x\"\ny5j .... copia 5 linhas\n</code></pre>"},{"location":"capitulo_3/paginando/","title":"Paginando","text":""},{"location":"capitulo_3/paginando/#paginando","title":"Paginando","text":"<p>Para rolar uma p\u00e1gina de cada vez (em modo normal)</p> <pre><code>Ctrl-f\nCtrl-b\n\n:h jumps . ajuda sobre a lista de saltos\n:jumps ... exibe a lista de saltos\nCtrl-i ... salta para a posi\u00e7\u00e3o mais recente\nCtrl-o ... salta para a posi\u00e7\u00e3o mais antiga\n'0 ....... abre o \u00faltimo arquivo editado\n'1 ....... abre o pen\u00faltimo arquivo editado\ngd ....... pula para a defini\u00e7\u00e3o de uma vari\u00e1vel\n} ........ pula para o fim do par\u00e1grafo\n10| ...... pula para a coluna 10\n[i ....... pula para defini\u00e7\u00e3o de vari\u00e1vel sob o cursor\n</code></pre> <p>Observa\u00e7\u00e3o: lembre-se</p> <pre><code>^ .... equivale a Ctrl\n^I ... equivale a Ctrl-I\n</code></pre> <p>\u00c9 poss\u00edvel abrir v\u00e1rios arquivos tipo <code>vim *.txt</code>. Editar algum arquivo, salvar e ir para o pr\u00f3ximo arquivo com o comando \u00e0 seguir:</p> <pre><code>:wn\n</code></pre> <p>Ou voltar ao arquivo anterior</p> <pre><code>:wp\n</code></pre> <p>\u00c9 poss\u00edvel ainda \u201crebobinar\u201d sua lista de arquivos.</p> <pre><code>:rew[wind]\n</code></pre> <p>Ir para o primeiro</p> <pre><code>:fir[st]\n</code></pre> <p>Ou para o \u00faltimo</p> <pre><code>:la[st]\n</code></pre>"},{"location":"capitulo_3/usando_marcas/","title":"Usando marcas","text":""},{"location":"capitulo_3/usando_marcas/#usando-marcas","title":"Usando marcas","text":"<p>As marcas s\u00e3o um meio eficiente de se pular para um local no arquivo. Para criar uma, estando em modo normal faz-se:</p> <pre><code>ma\n</code></pre> <p>Onde \u2018m\u2019 indica a cria\u00e7\u00e3o de uma marca e \u2018a\u2019 \u00e9 o nome da marca. Para pular para a marca \u2018a\u2019:</p> <pre><code>`a\n</code></pre> <p>Para voltar ao ponto do \u00faltimo salto:</p> <pre><code>''\n</code></pre> <p>Para deletar de at\u00e9 a marca \u2018a\u2019 (em modo normal):</p> <pre><code>d'a\n</code></pre>"},{"location":"capitulo_3/usando_marcas/#marcas-globais","title":"Marcas Globais","text":"<p>Durante a edi\u00e7\u00e3o de v\u00e1rios arquivos pode-se definir uma marca global com o comando:</p> <pre><code>mA\n</code></pre> <p>Onde \u2018m\u2019 cria a marca e \u2018A\u2019 (mai\u00fasculo) define uma marca \u2018A\u2019 acess\u00edvel a qualquer momento com o comando:</p> <pre><code>'A\n</code></pre> <p>Isto far\u00e1 o Vim dar um salto at\u00e9 a marca \u2018A\u2019 mesmo que esteja em outro arquivo, mesmo que voc\u00ea tenha acabado de fecha-lo. Para abrir e editar v\u00e1rios arquivos do Vim fazemos:</p> <pre><code>vim *.txt ......... abre todos os arquivos 'txt'\n:bn ............... vai para o pr\u00f3ximo da lista\n:bp ............... volta para o arquivo anterior\n:ls ............... lista todos os arquivos abertos\n:wn ............... salva e vai para o pr\u00f3ximo\n:wp ............... salva e vai para o anterior\n</code></pre>"},{"location":"capitulo_4/criando_dobras_usando_o_modo_visual/","title":"Criando dobras usando o modo visual","text":""},{"location":"capitulo_4/criando_dobras_usando_o_modo_visual/#criando-dobras-usando-o-modo-visual","title":"Criando dobras usando o modo visual","text":"<p>Para iniciar a sele\u00e7\u00e3o visual <pre><code>Esc ........ vai para o modo normal\nshift-v .... inicia sele\u00e7\u00e3o visual\nj .......... aumenta a sele\u00e7\u00e3o visual (desce)\nzf ......... cria a dobra na sele\u00e7\u00e3o ativa\n</code></pre> Um modo inusitado de se criar dobras \u00e9: <pre><code>Shift-v ..... inicia sele\u00e7\u00e3o visual\n/chapter/-2 . extende a sele\u00e7\u00e3o at\u00e9 /chapter -2 linhas\nzf .......... cria a dobra\n</code></pre></p>"},{"location":"capitulo_4/folders/","title":"Folders","text":"<p>Folders s\u00e3o como dobras nas quais o Vim esconde partes do texto, algo assim: <pre><code>+-- 10 linhas ---------------------------\n</code></pre> Deste ponto em diante chamaremos os folders descritos no manual do Vim como dobras! Quando tiver que manipular grandes quantidades de texto tente usar dobras, isto permite uma visualiza\u00e7\u00e3o completa do texto. Um modo de entender rapidamente como funcionam as dobras no Vim seria criando uma \u201cdobra\u201d para as pr\u00f3ximas 10 (dez) linhas com o comando abaixo: <pre><code>zf10j\n</code></pre> Voc\u00ea pode ainda criar uma sele\u00e7\u00e3o visual <pre><code>Shift-v ............ sele\u00e7\u00e3o por linha\nj .................. desce linha\nzf ................. cria o folder\nzo ................. abre o folder\n</code></pre></p>"},{"location":"capitulo_4/manipulando_dobras/","title":"Manipulando dobras","text":""},{"location":"capitulo_4/manipulando_dobras/#manipulando-dobras","title":"Manipulando dobras","text":"<p>Os principais comandos relativos ao uso de dobras s\u00e3o: <pre><code>zo ................ abre a dobra\nzO ................ abre a dobra, recursivamente\nza ................ abre/fecha (alterna) a dobra\nzA ................ abre/fecha (alterna) a dobra, recursivamente\nzR ................ abre todas as dobras do arquivo atual\nzM ................ fecha todas as dobras do arquivo atual\nzc ................ fecha uma dobra\nzC ................ fecha a dobra abaixo do cursor, recursivamente\nzfap .............. cria uma dobra para o par\u00e1grafo 'ap' atual\nzf/casa ........... cria uma dobra at\u00e9 a palavra casa\nzf'a .............. cria uma dobra at\u00e9 a marca 'a'\nzd ................ apaga a dobra (n\u00e3o o seu conte\u00fado)\nzj ................ move para o in\u00edcio da pr\u00f3xima dobra\nzk ................ move para o final da dobra anterior\n[z ................ move o cursor para in\u00edcio da dobra aberta\n]z ................ move o cursor para o fim da dobra aberta\nzi ................ desabilita ou habilita as dobras\nzm, zr ............ diminui/aumenta n\u00edvel da dobra 'fdl'\n:set fdl=0 ........ n\u00edvel da dobra 0 (foldlevel)\n:set foldcolumn=4 . mostra uma coluna ao lado da numera\u00e7\u00e3o\n</code></pre> Para abrir e fechar as dobras usando a barra de espa\u00e7os coloque o trecho abaixo no seu arquivo de configura\u00e7\u00e3o do Vim (<code>.vimrc</code>) - veja o Como editar prefer\u00eancias no Vim. <pre><code>nnoremap &lt;space&gt; @=((foldclosed(line(\".\")) &lt; 0) ?\n                  \\ 'zc' : 'zo')&lt;CR&gt;\n</code></pre> A barra, <code>\\</code>, nesse comando representa o particionamento do comando em mais de uma linha.</p> <p>Para abrir e fechar as dobras utilizando o clique do mouse no gvim, basta acrescentar na configura\u00e7\u00e3o do seu <code>.vimrc</code>: <pre><code>set foldcolumn=2\n</code></pre> o que adiciona uma coluna ao lado da coluna de enumera\u00e7\u00e3o das linhas.</p>"},{"location":"capitulo_4/metodos_de_dobras/","title":"M\u00e9todos de dobras","text":""},{"location":"capitulo_4/metodos_de_dobras/#metodos-de-dobras","title":"M\u00e9todos de dobras","text":"<p>O Vim tem seis modos fold, s\u00e3o eles:</p> <ul> <li>Sintaxe (syntax)</li> <li>Indenta\u00e7\u00e3o (indent)</li> <li>Marcas (marker)</li> <li>Manual (manual)</li> <li>Diferen\u00e7as (diff)</li> <li>Express\u00f5es Regulares (expr)</li> </ul> <p>Para determinar o tipo de dobra fa\u00e7a <pre><code>:set foldmethod=tipo\n</code></pre> onde o tipo pode ser um dos tipos listados acima, exemplo: <pre><code>:set foldmethod=marker\n</code></pre> Outro modo para determinar o m\u00e9todo de dobra seria colocando na \u00faltima linha do seu arquivo algo assim: <pre><code>vim:fdm=marker:fdl=0:\n</code></pre></p> <p>Obs: <code>fdm</code> significa foldmethod, e <code>fdl</code> significa foldlevel. Deve haver um espa\u00e7o entre a palavra inicial \u201cvim\u201d e o come\u00e7o da linha este recurso chama-se modeline, leia mais na se\u00e7\u00e3o modelines.</p>"},{"location":"capitulo_5/como_colocar_um_pedaco_de_texto_em_um_registrador/","title":"Como colocar um peda\u00e7o de texto em um registrador?","text":""},{"location":"capitulo_5/como_colocar_um_pedaco_de_texto_em_um_registrador/#como-colocar-um-pedaco-de-texto-em-um-registrador","title":"Como colocar um peda\u00e7o de texto em um registrador?","text":"<p><pre><code> &lt;Esc&gt; ...... vai para o modo normal\n \"a10j ...... coloca no registrador `a' as pr\u00f3ximas 10 linhas `10j'\n</code></pre> Pode-se fazer: <pre><code>&lt;Esc&gt; ...... para ter certeza que est\u00e1 em modo normal\n\"ap ........ registrador a `paste', ou seja, cole\n``\nEm modo de inser\u00e7\u00e3o faz-se:\n</code></pre> Ctrl-r a <pre><code>H\u00e1 situa\u00e7\u00f5es em que se tem caracteres n\u00e3o \"*ascii* \" que s\u00e3o complicados\nde se colocar em uma busca ou substitui\u00e7\u00e3o, nestes casos pode-se usar os\nseguintes comandos:\n</code></pre> \"ayl ............. copia para o registrador <code>a' o caractere sob o cursor :%s/&lt;c-r&gt;a/char .. subsitui o conte\u00fado do registrador</code>a' por char <pre><code>Pode-se ainda usar esta t\u00e9cnica para copiar rapidamente coment\u00e1rios do\n`bash`[^1], representados pelo caracteres `#`, em *modo\nnormal* usando o atalho `0yljP`.\n</code></pre> 0 ............... posiciona o cursor no in\u00edcio a linha yl .............. copia o caractere sob o cursor j ............... desce uma linha P ............... cola o caractere copiado ```</p> <ol> <li> <p>Interpretador de comandos do GNU/Linux\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_5/como_criar_um_registrador_em_modo_visual/","title":"Como criar um registrador em modo visual?","text":""},{"location":"capitulo_5/como_criar_um_registrador_em_modo_visual/#como-criar-um-registrador-em-modo-visual","title":"Como criar um registrador em modo visual?","text":"<p>Inicie a sele\u00e7\u00e3o visual com o atalho <pre><code>Shift-v ..... seleciona linhas inteiras\n</code></pre> pressione a letra <code>j</code> at\u00e9 chegar ao ponto desejado, agora fa\u00e7a <pre><code>\"ay\n</code></pre> pressione <code>Esc</code> para sair do modo visual.</p>"},{"location":"capitulo_5/como_definir_um_registrador_no_vimrc/","title":"Como definir um registrador no **vimrc**?","text":""},{"location":"capitulo_5/como_definir_um_registrador_no_vimrc/#como-definir-um-registrador-no-vimrc","title":"Como definir um registrador no <code>vimrc</code>?","text":"<p>Se voc\u00ea n\u00e3o sabe ainda como editar prefer\u00eancias no Vim leia antes o cap\u00edtulo Como editar prefer\u00eancias no Vim.</p> <p>Voc\u00ea pode criar uma vari\u00e1vel no vimrc assim: <pre><code>let var=\"foo\" ...... define foo para var\necho var ........... mostra o valor de var\n</code></pre> Pode tamb\u00e9m dizer ao Vim algo como... <pre><code>:let @d=strftime(\"c\")&lt;Enter&gt;\n</code></pre> Neste caso estou dizendo a ele que guarde na vari\u00e1vel 'd', o valor da data do sistema <code>strftime(\"c\")</code> ou ent\u00e3o cole isto no vimrc: <pre><code>let @d=strftime(\"c\")&lt;cr&gt;\n</code></pre> A diferen\u00e7a entre digitar diretamente um comando e adicion\u00e1-lo ao vimrc \u00e9 que uma vez no vimrc o registrador em quest\u00e3o estar\u00e1 sempre dispon\u00edvel, observe tamb\u00e9m as sutis diferen\u00e7as, um Enter inserido manualmente \u00e9 apenas uma indica\u00e7\u00e3o de uma a\u00e7\u00e3o que voc\u00ea far\u00e1 pressionando a tecla especificada, j\u00e1 o comando mapeado vira <code>&lt;cr&gt;</code>, veja ainda que no vimrc os dois pontos <code>:</code> somem.</p> <p>Pode mapear tudo isto <pre><code>let @d=strftime(\"c\")&lt;cr&gt;\nimap ,d &lt;cr-r&gt;d\nnmap ,d \"dp\n</code></pre> As atribui\u00e7\u00f5es acima correspondem a:</p> <ol> <li> <p>Guarda a data na vari\u00e1vel 'd'</p> </li> <li> <p>Mapeamento para o modo de inser\u00e7\u00e3o \"imap\" digite ,d</p> </li> <li> <p>Mapeamento para o modo normal \"nmap\" digite ,d</p> </li> </ol> <p>E digitar ,d normalmente</p> <p>Desmistificando o strftime <pre><code>\" d=dia m=mes Y=ano H=hora M=minuto c=data-completa\n:h strftime ........ ajuda completa sobre o comando\n</code></pre> e inserir em modo normal assim: <pre><code>\"dp\n</code></pre> ou usar em modo de inser\u00e7\u00e3o assim: <pre><code>Ctrl-r d\n</code></pre></p>"},{"location":"capitulo_5/como_selecionar_blocos_verticais_de_texto/","title":"Como selecionar blocos verticais de texto","text":""},{"location":"capitulo_5/como_selecionar_blocos_verticais_de_texto/#como-selecionar-blocos-verticais-de-texto","title":"Como selecionar blocos verticais de texto?","text":"<p><pre><code>Ctrl-v\n</code></pre> agora use as letras h,l,k,j como setas de dire\u00e7\u00e3o at\u00e9 finalizar podendo guardar a sele\u00e7\u00e3o em um registrador que vai de 'a' a 'z' exemplo: <pre><code>\"ay\n</code></pre> Em modo normal voc\u00ea pode fazer assim para guardar um par\u00e1grafo inteiro em um registrador <pre><code>\"ayip\n</code></pre> O comando acima quer dizer <pre><code>para o registrador `a' ........  \"a\ncopie ......................  `y`\no par\u00e1grafo atual ..........  `inner paragraph`\n</code></pre></p>"},{"location":"capitulo_5/dividindo_a_janela_com_o_proximo_arquivo_da_lista_de_buffers/","title":"Dividindo a janela com o pr\u00f3ximo arquivo da lista de *buffers*","text":""},{"location":"capitulo_5/dividindo_a_janela_com_o_proximo_arquivo_da_lista_de_buffers/#dividindo-a-janela-com-o-proximo-arquivo-da-lista-de-buffers","title":"Dividindo a janela com o pr\u00f3ximo arquivo da lista de buffers","text":"<p><pre><code>:sn\n</code></pre> O comando acima \u00e9 uma abrevia\u00e7\u00e3o de split next, ou seja, dividir e pr\u00f3ximo.</p>"},{"location":"capitulo_5/listando_arquivos_abertos/","title":"Listando arquivos abertos","text":""},{"location":"capitulo_5/listando_arquivos_abertos/#listando-arquivos-abertos","title":"Listando arquivos abertos","text":"<p>Suponha que voc\u00ea abriu v\u00e1rios arquivos txt assim: <pre><code>vim *.txt\n</code></pre> Para listar os arquivos aberto fa\u00e7a: <pre><code>:buffers\n</code></pre> Usando o comando acima o Vim exibir\u00e1 a lista de todos os arquivos abertos, ap\u00f3s exibir a lista voc\u00ea pode escolher um dos arquivos da lista, algo como: <pre><code>:buf 3\n</code></pre> Para editar arquivos em sequ\u00eancia fa\u00e7a as altera\u00e7\u00f5es no arquivo atual e acesso o pr\u00f3ximo assim: <pre><code>:wn\n</code></pre> O comando acima diz -&gt; 'w gravar' -&gt; 'n pr\u00f3ximo'</p>"},{"location":"capitulo_5/listando_os_registradores_atuais/","title":"Listando os registradores atuais","text":""},{"location":"capitulo_5/listando_os_registradores_atuais/#listando-os-registradores-atuais","title":"Listando os registradores atuais","text":"<p>Digitando o comando <pre><code>:reg\n</code></pre> O Vim mostrar\u00e1 os registradores numerados e nomeados atualmente em uso.</p>"},{"location":"capitulo_5/manipulando_registradores/","title":"Manipulando registradores","text":""},{"location":"capitulo_5/manipulando_registradores/#manipulando-registradores","title":"Manipulando registradores","text":"<p><pre><code>:let @a=@_   ... limpa o registrador a\n:let @a=``'' ... limpa o registrador a\n:let @a=@\"   ... salva registrador sem nome *N*\n:let @*=@a   ... copia o registrador para o buffer de colagem\n:let @*=@:   ... copia o ultimo comando para o buffer de\n                 colagem\n:let @*=@/   ... copia a \u00faltima busca para o buffer de\n                 colagem\n:let @*=@%   ... copia o nome do arquivo para o buffer de\n                 colagem\n:reg         ... mostra o conte\u00fado de todos os registradores\n</code></pre> Em modo de inser\u00e7\u00e3o <pre><code>&lt;C-R&gt;-   ....... Insere o registrador de pequenas dele\u00e7\u00f5es\n&lt;C-R&gt;[0-9a-z] .. Insere registradores 0-9 e a-z\n&lt;C-R&gt;%        .. Insere o nome do arquivo\n&lt;C-R&gt;=somevar .. Insere o conte\u00fado de uma vari\u00e1vel\n&lt;C-R&gt;&lt;C-A&gt; ..... Insere `Big-Words' veja se\u00e7\u00e3o 2.1\n</code></pre> Um exemplo: pr\u00e9-carregando o nome do arquivo no registrador <code>n</code>.</p> <p>coloque em seu <code>~/.vimrc</code> <pre><code>let @n=@%\n</code></pre> Como foi atribu\u00eddo ao registrador <code>n</code> o conte\u00fado de @%, ou seja, o nome do arquivo, voc\u00ea pode fazer algo assim em modo de inser\u00e7\u00e3o: <pre><code>Ctrl-r n\n</code></pre> E o nome do arquivo ser\u00e1 inserido.</p>"},{"location":"capitulo_5/o_registrador_sem_nome/","title":"O registrador sem nome \"\"","text":""},{"location":"capitulo_5/o_registrador_sem_nome/#o-registrador-sem-nome","title":"O registrador sem nome \"\"","text":"<p>Armazena o conte\u00fado de a\u00e7\u00f5es como: <pre><code>d ....... dele\u00e7\u00e3o\ns ....... substitui\u00e7\u00e3o\nc ....... modifica\u00e7\u00e3o (change)\nx ....... apaga um caractere\nyy ...... copia uma linha inteira\n</code></pre> Para acessar o conte\u00fado deste registrador basta usar as letras \"p\" ou \"P\" que na verdade s\u00e3o comandos para colar abaixo da linha atual e acima da linha atual (em modo normal).</p>"},{"location":"capitulo_5/referencias/","title":"Refer\u00eancias","text":""},{"location":"capitulo_5/referencias/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>http://rayninfo.co.uk/vimtips.html</p> </li> <li> <p>http://aprendolatex.wordpress.com</p> </li> <li> <p>http://pt.wikibooks.org/wiki/Latex</p> </li> </ul>"},{"location":"capitulo_5/registrador_buraco_negro/","title":"Registrador buraco negro \"\\_","text":""},{"location":"capitulo_5/registrador_buraco_negro/#registrador-buraco-negro-_","title":"registrador buraco negro \"_","text":"<p>Use este registrador quando n\u00e3o quiser alterar os demais registradores, por exemplo: se voc\u00ea deletar a linha atual, <pre><code>dd\n</code></pre> Esta a\u00e7\u00e3o ir\u00e1 colocar a linha atual no registrador numerado 1, caso n\u00e3o queira alterar o conte\u00fado do registrador 1 apague para o buraco negro assim: <pre><code>\"_dd\n</code></pre></p>"},{"location":"capitulo_5/registrador_de_expressoes/","title":"Registrador de express\u00f5es \"=","text":""},{"location":"capitulo_5/registrador_de_expressoes/#registrador-de-expressoes","title":"Registrador de express\u00f5es \"=","text":"<p><pre><code>\"=\n</code></pre> O registrador de express\u00f5es permite efetuar c\u00e1lculos diretamente no editor, usando o atalho \"Ctrl-r =\" no modo de inser\u00e7\u00e3o, o editor mostrar\u00e1 um sinal de igualdade na barra de status e o usu\u00e1rio digita ent\u00e3o uma express\u00e3o matem\u00e1tica como uma multiplica\u00e7\u00e3o \"6*9\" e em seguida pressiona Enter para que o editor finalize a opera\u00e7\u00e3o. Veja um v\u00eddeo demonstrando sua utiliza\u00e7\u00e3o neste link.</p> <p>Para entender melhor como funciona o registrador de express\u00f5es tomemos um exemplo. Para fazer uma sequ\u00eancia como abaixo: <pre><code>linha 1 tem o valor 150,\nlinha 2 tem o valor 300,\nlinha 3 tem o valor 450,\n...\n</code></pre> Acompanhe os passos para a cria\u00e7\u00e3o de uma macro permite fazer uma sequ\u00eancia de quantas linhas forem necess\u00e1rias com o incremento proposto acima. <pre><code>&lt;Esc&gt;  ......... sai do modo de inser\u00e7\u00e3o\nqa ............. inicia a macro\nyy ............. copia a primeira linha\np .............. cola a linha copiada\nw .............. pula para o n\u00famero `1'\n&lt;Ctrl-a&gt; ....... incrementa o n\u00famero (agora 2)\n4w ............. avan\u00e7a 4 palavras at\u00e9 150\n\"ndw ........... apaga o `150' para o registrador \"n\na .............. entra em modo de inser\u00e7\u00e3o\nCtrl-r = ....... abre o registrador de express\u00f5es\nCtrl-r n + 150   insere dentro do registrador de express\u00f5es\n                 o registrador \"n\n&lt;Enter&gt;  ........ executa o registrador de express\u00f5es\n&lt;Esc&gt; ........... sai do modo de inser\u00e7\u00e3o\n0 ............... vai para o come\u00e7o da linha\nq ............... para a grava\u00e7\u00e3o da macro\n</code></pre> Agora posicione o cursor no come\u00e7o da linha e pressione <code>10@a</code>.</p> <p>Na se\u00e7\u00e3o Mapeamento para Calcular Express\u00f5es h\u00e1 mais dicas sobre o uso do registrador de express\u00f5es e c\u00e1lculos matem\u00e1ticos.</p>"},{"location":"capitulo_5/registrador_de_pequenas_delecoes/","title":"Registrador de pequenas dele\u00e7\u00f5es","text":""},{"location":"capitulo_5/registrador_de_pequenas_delecoes/#registrador-de-pequenas-delecoes-","title":"Registrador de pequenas dele\u00e7\u00f5es \"-","text":"<p>Quando se deleta algo menor que uma linha o Vim armazena os dados deletados neste registrador.</p>"},{"location":"capitulo_5/registradores/","title":"Registradores","text":"<p>O Vim possui nove tipos de registradores, cada tipo tem uma utilidade espec\u00edfica, por exemplo voc\u00ea pode usar um registrador que guarda o \u00faltimo comando digitado, pode ainda imprimir dentro do texto o nome do pr\u00f3prio arquivo, armazenar por\u00e7\u00f5es distintas de texto (\u00e1rea de transfer\u00eancia m\u00faltipla) etc. Vamos aos detalhes.</p> <ul> <li> <p>O registrador sem nome \"\"</p> </li> <li> <p>10 registradores nomeados de \"0\" a \"9\"</p> </li> <li> <p>O registrador de pequenas dele\u00e7\u00f5es \"-</p> </li> <li> <p>26 registradores nomeados de \"a\" a \"z\" ou de \"A\" a \"Z\"</p> </li> <li> <p>4 registradores somente leitura</p> </li> <li> <p>O registrador de express\u00f5es \"=</p> </li> <li> <p>Os registrador de sele\u00e7\u00e3o e \"*, \"+ and \"\u00a0</p> </li> <li> <p>O registrador \"o\"</p> </li> <li> <p>registrador do \u00faltimo padr\u00e3o de busca \"/</p> </li> </ul>"},{"location":"capitulo_5/registradores_de_arrastar_e_mover/","title":"Registradores de arrastar e mover","text":""},{"location":"capitulo_5/registradores_de_arrastar_e_mover/#registradores-de-arrastar-e-mover","title":"Registradores de arrastar e mover","text":"<p>O registrador <pre><code>\"*\n</code></pre> \u00e9 respons\u00e1vel por armazenar o \u00faltimo texto selecionado (p.e., atrav\u00e9s do mouse). J\u00e1 o registrador <pre><code>\"+\n</code></pre> \u00e9 o denominado \"\u00e1rea de transfer\u00eancia\", normalmente utilizado para se transferir conte\u00fados entre aplica\u00e7\u00f5es\u2014este registrador \u00e9 preenchido, por exemplo, usando-se a t\u00edpica combina\u00e7\u00e3o Ctrl-v encontrada em muitas aplica\u00e7\u00f5es. Finalmente, o registrador <pre><code>\"~\n</code></pre> armazena o texto colado pela opera\u00e7\u00e3o mais recente de \"arrastar-e-soltar\" (drag-and-drop).</p>"},{"location":"capitulo_5/registradores_de_buscas/","title":"Registradores de buscas \"/\"","text":""},{"location":"capitulo_5/registradores_de_buscas/#registradores-de-buscas","title":"Registradores de buscas \"/\"","text":"<p>Se desejar inserir em uma substitui\u00e7\u00e3o uma busca pr\u00e9via, voc\u00ea poderia fazer assim em modo de comandos: <pre><code>:%s,&lt;Ctrl-r&gt;/,novo-texto,g\n</code></pre> Observa\u00e7\u00e3o: veja que estou trocando o delimitador da busca para deixar claro o uso do registrador de buscas \"/\". Pode-se usar um registrador nomeado de 'a-z' assim: <pre><code>let @a=\"new\"\n:%s/old/\\=@a/g ...... substitui 'old' por new\n\\=@a ................ faz refer\u00eancia ao registrador `a'\n</code></pre></p>"},{"location":"capitulo_5/registradores_nomeados_de_0_a_9/","title":"Registradores nomeados de 0 a 9","text":""},{"location":"capitulo_5/registradores_nomeados_de_0_a_9/#registradores-nomeados-de-0-a-9","title":"Registradores nomeados de 0 a 9","text":"<p>O registrador zero armazena o conte\u00fado da \u00faltima c\u00f3pia <code>yy</code>, \u00e0 partir do registrador 1 v\u00e3o sendo armazenadas as dele\u00e7\u00f5es sucessivas de modo que a mais recente dele\u00e7\u00e3o ser\u00e1 armazenada no registrador 1 e os registradores v\u00e3o sendo incrementados em dire\u00e7\u00e3o ao nono. Dele\u00e7\u00e3o menores que uma linha n\u00e3o s\u00e3o armazenadas nestes registradores, caso em que o Vim usa o registrador de pequenas dele\u00e7\u00f5es ou que se tenha especificado algum outro registrador.</p>"},{"location":"capitulo_5/registradores_nomeados_de_a_ate_z_ou_a_ate_z/","title":"Registradores nomeados de \"a at\u00e9 z\" ou \"A at\u00e9 Z\"","text":""},{"location":"capitulo_5/registradores_nomeados_de_a_ate_z_ou_a_ate_z/#registradores-nomeados-de-a-ate-z-ou-a-ate-z","title":"Registradores nomeados de \"a at\u00e9 z\" ou \"A at\u00e9 Z\"","text":"<p>Pode-se armazenar uma linha em modo normal assim: <pre><code>\"ayy\n</code></pre> Desse modo o Vim guarda o conte\u00fado da linha no registrador 'a' caso queira armazenar mais uma linha no registrador 'a' use este comando: <pre><code>\"Add\n</code></pre> Neste caso a linha corrente \u00e9 apagada 'dd' e adicionada ao final do registrador \"a\". <pre><code>\"ayip .. copia o par\u00e1grafo atual para o registrador \"a\"\n\"a ..... registrador a\ny ...... yank (copia)\nip ..... inner paragraph (este par\u00e1grafo)\n</code></pre></p>"},{"location":"capitulo_5/registradores_somente_leitura/","title":"Registradores somente leitura \":.%#\"","text":""},{"location":"capitulo_5/registradores_somente_leitura/#registradores-somente-leitura","title":"Registradores somente leitura \": . % #\"","text":"<p><pre><code>\": ..... armazena o \u00faltimo comando\n\". ..... armazena uma c\u00f3pia do \u00faltimo texto inserido\n\"% ..... cont\u00e9m o nome do arquivo corrente\n\"# ..... cont\u00e9m o nome do arquivo alternativo\n</code></pre> Uma forma pr\u00e1tica de usar registradores em modo de inser\u00e7\u00e3o \u00e9 usando: <code>Ctrl-r</code> <pre><code>Ctrl-r % .... insere o nome do arquivo atual\nCtrl-r : .... insere o \u00faltimo comando digitado\nCtrl-r / .... insere a \u00faltima busca efetuada\nCtrl-r a .... insere o registrador `a'\n</code></pre> Em modo de inser\u00e7\u00e3o pode-se repetir a \u00faltima inser\u00e7\u00e3o de texto simplesmente pressionando: <pre><code>Ctrl-a\n</code></pre></p>"},{"location":"capitulo_6/buscando_em_um_intervalo_de_linhas/","title":"Buscando em um intervalo de linhas","text":""},{"location":"capitulo_6/buscando_em_um_intervalo_de_linhas/#buscando-em-um-intervalo-de-linhas","title":"Buscando em um intervalo de linhas","text":"<p>Para buscar entre as linhas 10 e 50 por um padr\u00e3o qualquer fazemos: <pre><code>/padrao\\%&gt;10l\\$&lt;50l\n</code></pre> Esta e outras boas dicas podem ser lidas no site vim-faq.</p>"},{"location":"capitulo_6/buscas_e_substituicoes/","title":"Buscas e Substitui\u00e7\u00f5es","text":"<p>Para fazer uma busca, certifique-se de que est\u00e1 em modo normal, pressione \u201c/\u201d e digite a express\u00e3o a ser procurada.\\</p> <p>Para encontrar a primeira ocorr\u00eancia de \u201cfoo\u201d no texto: <pre><code>/foo\n</code></pre> Para repetir a busca basta pressionar a tecla <code>n</code> e para repetir a busca em sentido oposto <code>N</code>. <pre><code>/teste/+3\n</code></pre> Posiciona o cursor tr\u00eas linhas ap\u00f3s a ocorr\u00eancia da palavra \u201cteste\u201d\\ <pre><code>/\\&lt;casa\\&gt;\n</code></pre> A busca acima localiza \u2018casa\u2019 mas n\u00e3o \u2018casamento\u2019. Em express\u00f5es regulares, <code>\\&lt;</code> e <code>\\&gt;</code> s\u00e3o representadas por <code>\\b</code>, que representa, por sua vez, borda de palavras. Ou seja, <code>casa</code> e <code>casa!</code> seriam localizado, visto que sinais de pontua\u00e7\u00e3o n\u00e3o fazem parte da palavra.</p>"},{"location":"capitulo_6/copiar_a_partir_de_um_ponto/","title":"Copiar a partir de um ponto","text":""},{"location":"capitulo_6/copiar_a_partir_de_um_ponto/#copiar-a-partir-de-um-ponto","title":"Copiar a partir de um ponto","text":"<p><pre><code>:19;+3 co $\n</code></pre> O Vim sempre necessita de um intervalo (inicial e final) mas se usar-mos \u2018;\u2019 ele considera a primeira linha como segundo ponto do intervalo, e no caso acima estamos dizendo (nas entrelinhas) linhas 19 e 19+3\\</p> <p>De forma an\u00e1loga pode-se usar como refer\u00eancia um padr\u00e3o qualquer: <pre><code>:/palavra/;+10 m 0\n</code></pre> O comando acima diz: \u00e0 partir da linha que cont\u00e9m \u201cpalavra\u201d incluindo as 10 pr\u00f3ximas linhas mova \u2018m\u2019 para a primeira linha \u20180\u2019, ou seja, antes da linha 1.</p>"},{"location":"capitulo_6/corrigindo_a_indentacao_de_codigos/","title":"Corrigindo a indenta\u00e7\u00e3o de c\u00f3digos","text":""},{"location":"capitulo_6/corrigindo_a_indentacao_de_codigos/#corrigindo-a-indentacao-de-codigos","title":"Corrigindo a indenta\u00e7\u00e3o de c\u00f3digos","text":"<p>Selecione o bloco de c\u00f3digo, por exemplo <pre><code>vip  ..... visual ``inner paragraph'' (selecione este par\u00e1grafo)\n=  ....... corrige a indenta\u00e7\u00e3o do bloco de texto selecionado\nggVG= .... corrige a identa\u00e7\u00e3o do arquivo inteiro\n</code></pre></p>"},{"location":"capitulo_6/destacando_padroes/","title":"Destacando Padr\u00f5es","text":""},{"location":"capitulo_6/destacando_padroes/#destacando-padroes","title":"Destacando padr\u00f5es","text":"<p>Voc\u00ea pode destacar linhas com mais de 30 caracteres assim: <pre><code>:match ErrorMsg /\\%&gt;30v/ . destaca linhas maiores que 30 caracteres\n:match none .............. remove o destaque\n</code></pre></p>"},{"location":"capitulo_6/dicas/","title":"Dicas","text":""},{"location":"capitulo_6/dicas/#dicas","title":"Dicas","text":"<p>Para colocar a \u00faltima busca em uma substitui\u00e7\u00e3o fa\u00e7a: <pre><code>:%s/Ctrl-r//novo/g\n</code></pre> A dupla barra corresponde ao ultimo padr\u00e3o procurado, e portanto o comando abaixo far\u00e1 a substitui\u00e7\u00e3o da ultima busca por casinha: <pre><code>:%s//casinha/g\n</code></pre></p>"},{"location":"capitulo_6/dicas_da_lista_vi-br/","title":"Dicas da lista vi-br","text":""},{"location":"capitulo_6/dicas_da_lista_vi-br/#dicas-da-lista-vi-br","title":"Dicas da lista vi-br","text":"<p>Fonte: Grupo vi-br do yahoo</p> <p>Problema: Essa deve ser uma pergunta comum. Suponha o seguinte conte\u00fado de arquivo: <pre><code>... // v\u00e1rias linhas\ntexto1000texto    // linha i\ntexto1000texto    // linha i+1\ntexto1000texto    // linha i+2\ntexto1000texto    // linha i+3\ntexto1000texto    // linha i+4\n... // v\u00e1rias linhas\n</code></pre> Gostaria de um comando que mudasse para <pre><code>... // v\u00e1rias linhas\ntexto1001texto    // linha i\ntexto1002texto    // linha i+1\ntexto1003texto    // linha i+2\ntexto1004texto    // linha i+3\ntexto1005texto    // linha i+4\n... // v\u00e1rias linhas\n</code></pre> Ou seja, somasse 1 a cada um dos n\u00fameros entre os textos especificando como range as linhas i,i+4 <pre><code>:10,20! awk 'BEGIN{i=1}{if (match($0, ``+'')) print ``o''\n(substr($0, RSTART, RLENGTH) + i++) ``o'``}''\n</code></pre> Mas muitos sistemas n\u00e3o tem awk, e logo a melhor solu\u00e7\u00e3o mesmo \u00e9 usar o Vim: <pre><code>:let i=1 | 10,20 g/texto\\d\\+texto/s/\\d\\+/\\=submatch(0)+i/ | let i=i+1\n</code></pre> Observa\u00e7\u00e3o: 10,20 \u00e9 o intervalo, ou seja, da linha 10 at\u00e9 a linha 20 <pre><code>:help /\n:help :s\n:help pattern\n</code></pre> O plugin Visincr\u00a0 Possibilita incrementos em modo visual de diversas formas, um v\u00eddeo demonstrativos pode ser visto neste link.</p>"},{"location":"capitulo_6/edicoes_complexas/","title":"Edi\u00e7\u00f5es complexas","text":""},{"location":"capitulo_6/edicoes_complexas/#edicoes-complexas","title":"Edi\u00e7\u00f5es complexas","text":"<p>Trocando palavras de lugar: Posiciona-se o cursor no espa\u00e7o antes da 1\u00aa palavra e digita-se: <pre><code>deep\n</code></pre> Trocando letras de lugar: <pre><code>xp .... com a letra seguinte\nxh[p .. com a letra anterior\n</code></pre> Trocando linhas de lugar: <pre><code>ddp ... com a linha de baixo\nddkP .. com a linha de cima\n</code></pre> Tornando todo o texto mai\u00fasculo <pre><code>gggUG\nggVGU\n</code></pre></p>"},{"location":"capitulo_6/exemplos/","title":"Exemplos","text":""},{"location":"capitulo_6/exemplos/#exemplos","title":"Exemplos","text":"<p>Busca usando alternativas: <pre><code>/end\\(if\\|while\\|for\\)\n</code></pre> Buscar\u00e1 \u2018if\u2019, \u2018while\u2019 e \u2018for\u2019. Observe que \u00e9 necess\u00e1rio \u2018escapar\u2019 os caracteres <code>\\(</code>, <code>\\</code>| e <code>\\)</code>, caso contr\u00e1rio eles ser\u00e3o interpretados como caracteres comuns.</p> <p>Quebra de linha <pre><code>/quebra\\nde linha\n</code></pre> Ignorando mai\u00fasculas e min\u00fasculas <pre><code>/\\cpalavra\n</code></pre> Usando <code>\\c</code> o Vim encontrar\u00e1 \u201cpalavra\u201d, \u201cPalavra\u201d ou at\u00e9 mesmo \u201cPALAVRA\u201d. Uma dica \u00e9 colocar no seu arquivo de configura\u00e7\u00e3o \u201cvimrc\u201d veja o cap\u00edtulo Como editar prefer\u00eancias no Vim. <pre><code>set ignorecase .. ignora mai\u00fasculas e min\u00fasculas na bucsca\nset smartcase ... se busca contiver mai\u00fasculas ele passa a\n                  consider\u00e1-las\nset hlsearch .... mostra o que est\u00e1 sendo buscado em cores\nset incsearch ... ativa a busca incremental\n</code></pre> se voc\u00ea n\u00e3o sabe ainda como colocar estas prefer\u00eancias no arquivo de configura\u00e7\u00e3o pode ativa-las em modo de comando precedendo-as com dois pontos, assim: <pre><code>:set ignorecase&lt;Enter&gt;\n</code></pre> Substitui\u00e7\u00f5es com confirma\u00e7\u00e3o: <pre><code>:%s/word/palavra/c ..... o `c' no final habilita a confirma\u00e7\u00e3o\n</code></pre> Procurando palavras repetidas <pre><code>/\\&lt;\\(\\w*\\) \\1\\&gt;\n</code></pre> Multilinha <pre><code>/Hello\\_s\\+World\n</code></pre> Buscar\u00e1 \u2018World\u2019, separado por qualquer n\u00famero de espa\u00e7os, incluindo quebras de linha. Buscar\u00e1 as tr\u00eas sequ\u00eancias: <pre><code>Hello World\n\nHello    World\n\nHello\nWorld\n</code></pre> Buscar linhas de at\u00e9 30 caracteres de comprimento <pre><code>/^.\\{,30\\}$\n\n^  ..... representa come\u00e7o de linha\n.  ..... representa qualquer caractere\n\n:%s/&lt;[^&gt;]*&gt;//g ... apaga tags HTML/XML\n:%g/^$/d ......... apaga linhas vazias\n:%s/^[\\ \\t]*\\n//g  apaga linhas vazias\n</code></pre> Remover duas ou mais linhas vazias entre par\u00e1grafos diminuindo para uma s\u00f3 linha vazia. <pre><code>:%s/\\(^\\n\\{2,}\\)/\\r/g\n</code></pre> Voc\u00ea pode criar um mapeamento e colocar no seu \u00a0/.vimrc <pre><code>map ,s &lt;Esc&gt;:%s/\\(^\\n\\{2,}\\)/\\r/g&lt;cr&gt;\n</code></pre> No exemplo acima, \u2018,s\u2019 \u00e9 um mapeamento para reduzir linhas em branco sucessivas para uma s\u00f3\\</p> <p>Remove n\u00e3o d\u00edgitos (n\u00e3o pega n\u00fameros) <pre><code>:%s/^\\D.*//g\n</code></pre> Remove final de linha DOS/Windows <code>^M</code> que tem c\u00f3digo hexadecimal igual a \u20180d\u2019 <pre><code>:%s/\\%x0d//g\n</code></pre> Troca palavras de lugar usando express\u00f5es regulares: <pre><code>:%s/\\(.\\+\\)\\s\\(.\\+\\)/\\2 \\1/\n</code></pre> Modificando todas as tags HTML para min\u00fasculo: <pre><code>:%s/&lt;\\([^&gt;]*\\)&gt;/&lt;\\L\\1&gt;/g\n</code></pre> Move linhas 10 a 12 para al\u00e9m da linha 30: <pre><code>:10,12m30\n</code></pre></p>"},{"location":"capitulo_6/filtrando_arquivos_com_o_vimgrep/","title":"Filtrando arquivos com o vimgrep","text":""},{"location":"capitulo_6/filtrando_arquivos_com_o_vimgrep/#filtrando-arquivos-com-o-vimgrep","title":"Filtrando arquivos com o vimgrep","text":"<p>Por vezes sabemos que aquela anota\u00e7\u00e3o foi feita, mas no momento esquecemos em qual arquivo est\u00e1, no exemplo abaixo procuramos a palavra dicas \u00e0 partir da nossa pasta pessoal pela palavra \u2018dicas\u2019 em todos os arquivos com extens\u00e3o \u2018txt\u2019. <pre><code>~/ ............ equivale a /home/user\n:lvimgrep /dicas/gj ~/**/*.txt | ls\n:vimgrep /dicas/gj **/*.txt | copen\n:vimgrep dicas **/*.txt | copen\n:h lvim ....... ajuda sobre o comando\n</code></pre></p>"},{"location":"capitulo_6/indentando/","title":"Indentando","text":""},{"location":"capitulo_6/indentando/#indentando","title":"Indentando","text":"<pre><code>&gt;&gt; ..... Indenta a linha atual\n^t ..... Indenta a linha atual em modo de inser\u00e7\u00e3o\n^d ..... Remove indenta\u00e7\u00e3o em modo de inser\u00e7\u00e3o\n&gt;ip .... indenta o par\u00e1grafo atual\n</code></pre>"},{"location":"capitulo_6/inserindo_linha_antes_e_depois/","title":"Inserindo linha antes e depois","text":""},{"location":"capitulo_6/inserindo_linha_antes_e_depois/#inserindo-linha-antes-e-depois","title":"Inserindo linha antes e depois","text":"<p>Suponha que se queira um comando, considere <code>,t</code>, que fa\u00e7a com que a linha indentada corrente passe a ter uma linha em branco antes e depois; isto pode ser obtido pelo seguinte mapeamento: <pre><code>:map ,t &lt;Esc&gt;:.s/^\\(\\s\\+\\)\\(.*\\)/\\r\\1\\2\\r/g&lt;cr&gt;\n</code></pre> Explicando: <pre><code>: ................ entra no modo de comando\nmap ,t ........... mapeia ,t para a fun\u00e7\u00e3o desejada\n&lt;Esc&gt; ............ ao executar sai do modo de inser\u00e7\u00e3o\ns/isto/aquilo/g .. substitui isto por aquilo\n: ................ inicia o modo de comando\n. ................ na linha corrente\ns ................ substitua\n^ ................ come\u00e7o de linha\n\\s\\+ ............. um espa\u00e7o ou mais (barras s\u00e3o escapes)\n.* ............... qualquer coisa depois\n\\(grupo\\) ........ agrupo para referenciar com \\1\n\\1 ............... repete na substitui\u00e7\u00e3o o grupo 1\n\\r ............... insere uma quebra de linha\ng ................ em todas as ocorr\u00eancias da linha\n&lt;cr&gt; ............. Enter\n</code></pre></p>"},{"location":"capitulo_6/juncao_de_linhas_com_vim/","title":"Jun\u00e7\u00e3o de linhas com Vim","text":""},{"location":"capitulo_6/juncao_de_linhas_com_vim/#juncao-de-linhas-com-vim","title":"Jun\u00e7\u00e3o de linhas com Vim","text":"<p>Fonte: dicas-l da unicamp Colabora\u00e7\u00e3o: Rubens Queiroz de Almeida</p> <p>Recentemente precisei combinar, em um arquivo, duas linhas consecutivas. O arquivo original continha linhas como: <pre><code>Matr\u00edcula: 123456\nSenha: yatVind7kned\nMatr\u00edcula: 123456\nSenha: invanBabnit3\n</code></pre> E assim por diante. Eu precisava converter este arquivo para algo como: <pre><code>Matr\u00edcula: 123456 - Senha: yatVind7kned\nMatr\u00edcula: 123456 - Senha: invanBabnit3\n</code></pre> Para isto, basta executar o comando: <pre><code>:g/^Matr\u00edcula/s/\\n/ - /\n</code></pre> Explicando: <pre><code>s/isto/aquilo/g .. substitui isto por aquilo\ng ................ comando global\n/................. inicia padr\u00e3o de busca\n^ ................ indica come\u00e7o de linha\nMatr\u00edcula ........ palavra a ser buscada\ns ................ inicia substitui\u00e7\u00e3o\n/\\n/ - / ......... troca quebra de linha `\\n`, por `-`\n</code></pre></p>"},{"location":"capitulo_6/o_comando_global_g/","title":"O comando global \"g\"","text":""},{"location":"capitulo_6/o_comando_global_g/#o-comando-global-g","title":"O comando global \u201cg\u201d","text":"<p>Buscando um padr\u00e3o e gravando em outro arquivo: <pre><code>:'a,'b g/^Error/ . w &gt;&gt; errors.txt\n</code></pre> Apenas imprimir linhas que cont\u00e9m determinada palavra, isto \u00e9 \u00fatil quando voc\u00ea quer ter uma vis\u00e3o sobre um determina aspecto do seu arquivo vejamos: <pre><code>:set nu ..... habilita numera\u00e7\u00e3o\n:g/Error/p .. apenas mostra as linhas correspondentes\n</code></pre> Para mostrar o as linhas correspondentes a um padr\u00e3o, mesmo que a numera\u00e7\u00e3o de linha n\u00e3o esteja habilitada use <code>:g/padr\u00e3o/\\#</code>.</p> <p>numerar linhas: <pre><code>:let i=1 | g/^/s//\\=i.\"\\t\"/ | let i=i+1\n</code></pre> Outro modo de inserir n\u00fameros de linha <pre><code>:%s/^/\\=line('.').'  '\n\n: ............ comando\n% ............ em todo o arquivo\ns ............ substitui\u00e7\u00e3o\n/ ............ inicio da busca\n^ ............ come\u00e7o de linha\n/ ............ inicio da substitui\u00e7\u00e3o\n\\=line('.') .. corresponde ao n\u00ba da linha atual\n.'  ' ........ concatena um espa\u00e7o ap\u00f3s o n\u00ba\n</code></pre> Para copiar linhas come\u00e7adas com Error para o final do arquivo fa\u00e7a: <pre><code>:g/^Error/ copy $\n</code></pre> Obs: O comando \u2018copy\u2019 pode ser abreviado \u2018co\u2019 ou ainda pode-se usar \u2018t\u2019 para mais detalhes: <pre><code>:h co\n</code></pre> Como adicionar um padr\u00e3o copiado com \u2018yy\u2019 ap\u00f3s um determinado padr\u00e3o? <pre><code>:g/padrao/+put!\n:g/padrao/.put='teste'\n</code></pre> Entre as linhas que contiverem \u2018fred\u2019 e \u2018joe\u2019 substitua: <pre><code>:g/fred/,/joe/s/isto/aquilo/gic\n</code></pre> As op\u00e7\u00f5es \u2018gic\u2019 correspondem a global, ignore case e confirm, podendo ser omitidas deixando s\u00f3 o global.\\</p> <p>Pegar caracteres num\u00e9ricos e jogar no final do arquivo: <pre><code>:g/^\\d\\+.*/m $\n</code></pre> Inverter a ordem das linhas do arquivo: <pre><code>:g/^/m0\n</code></pre> Apagar as linhas que cont\u00e9m Line commented: <pre><code>:g/Line commented/d\n</code></pre> Apagar todas as linhas comentadas <pre><code> :g/^\\s*#/d\n</code></pre> Copiar determinado padr\u00e3o para um registrador: <pre><code>:g/pattern/ normal \"Ayy\n</code></pre> Copiar linhas que cont\u00e9m um padr\u00e3o e a linha subsequente para o final: <pre><code>:g/padr\u00e3o/;+1 copy $\n</code></pre> Deletar linhas que n\u00e3o contenham um padr\u00e3o: <pre><code>:v/dicas/d  ..... deleta linhas que n\u00e3o contenham `dicas'\n</code></pre> Incrementar n\u00fameros no come\u00e7o da linha: <pre><code>:.,20g/^\\d/exe \"normal! \\&lt;c-a&gt;\"\n</code></pre> Sublinhar linhas come\u00e7adas com Chapter: <pre><code>:g/^Chapter/t.|s/./-/g\n\n: ........ comando\ng ........ global\n/ ........ inicio de um padr\u00e3o\n^ ........ come\u00e7o de linha\nChapter .. palavra literal\n/ ........ fim do par\u00e3o\nt ........ copia\n. ........ linha atual\ns ........ substitua\n/ ........ inicio de um padr\u00e3o\n. ........ qualquer caractere\n/ ........ in\u00edcio da substitui\u00e7\u00e3o\n- ........ por tra\u00e7o\n/ ........ fim da substitui\u00e7\u00e3o\ng ........ em todas as ocorr\u00eancias\n</code></pre></p>"},{"location":"capitulo_6/obtendo_informacoes_do_arquivo/","title":"Obtendo informa\u00e7\u00f5es do arquivo","text":""},{"location":"capitulo_6/obtendo_informacoes_do_arquivo/#obtendo-informacoes-do-arquivo","title":"Obtendo informa\u00e7\u00f5es do arquivo","text":"<p><pre><code>ga ............. mostra o c\u00f3digo do caractere em decimal hexa e octal\n^g ............. mostra o caminho e o nome do arquivo\ng^g ............ mostra estat\u00edsticas detalhadas do arquivo\n</code></pre> Obs: O c\u00f3digo do caractere pode ser usado para substitui\u00e7\u00f5es, especialmente em se tratando de caracteres de controle como tabula\u00e7\u00f5es <code>^I</code> ou final de linha DOS/Windows <code>\\%x0d</code>. Voc\u00ea pode apagar os caracteres de final de linha Dos/Windows usando uma simples substitui\u00e7\u00e3o, veja mais adiante: <pre><code>:%s/\\%x0d//g\n</code></pre> Uma forma mais pr\u00e1tica de substituir o terminador de linha DOS para o terminador de linha Unix: <pre><code>:set ff=unix\n:w\n</code></pre> Na se\u00e7\u00e3o Como editar prefer\u00eancias no Vim h\u00e1 um c\u00f3digo para a barra de status que faz com que a mesma exiba o c\u00f3digo do caractere sob o cursor na se\u00e7\u00e3o Fun\u00e7\u00e3o para barra de status. O caractere de final de linha do Windows/DOS pode ser inserido com a seguinte combina\u00e7\u00e3o de teclas: <pre><code>i ............ entra em modo de inser\u00e7\u00e3o\n&lt;INSERT&gt; ..... entra em modo de inser\u00e7\u00e3o\nCtrl-v Ctrl-m  insere o simbolo ^M (terminador de linha DOS)\n</code></pre></p>"},{"location":"capitulo_6/selecionando_ou_deletando_o_conteudo_de_tags_HTML/","title":"Selecionando ou deletando o conte\u00fado de tags HTML","text":""},{"location":"capitulo_6/selecionando_ou_deletando_o_conteudo_de_tags_HTML/#selecionando-ou-deletando-conteudo-de-tags-html","title":"Selecionando ou deletando conte\u00fado de tags HTML","text":"<p><pre><code>&lt;tag&gt; conte\u00fado da tag &lt;/tag&gt;\nbasta usar (em modo normal) as teclas\nvit ............... visual `inner tag | esta tag'\n</code></pre> Este recurso tamb\u00e9m funciona com par\u00eanteses <pre><code>vi( ..... visual select\nvi\" ..... visual select\ndi( ..... delete inner (, ou seja, seu conte\u00fado\n</code></pre></p>"},{"location":"capitulo_6/substituicoes/","title":"Substitui\u00e7\u00f5es","text":""},{"location":"capitulo_6/substituicoes/#substituicoes","title":"Substitui\u00e7\u00f5es","text":"<p>Para fazer uma busca, certifique-se de que est\u00e1 em modo normal, em seguida digite use o comando \u2018s\u2019, conforme ser\u00e1 explicado.</p> <p>Para substituir \u201cfoo\u201d por \u201cbar\u201d na linha atual: <pre><code>:s/foo/bar\n</code></pre> Para substituir \u201cfoo\u201d por \u201cbar\u201d da primeira \u00e0 d\u00e9cima linha do arquivo: <pre><code>:1,10 s/foo/bar\n</code></pre> Para substituir \u201cfoo\u201d por \u201cbar\u201d da primeira \u00e0 \u00faltima linha do arquivo: <pre><code>:1,$ s/foo/bar\n</code></pre> Ou simplesmente: <pre><code>:% s/foo/bar\n\n$ ... significa para o Vim final do arquivo\n% ... representa o arquivo atual\n</code></pre> O comando \u2018s\u2019 possui muitas op\u00e7\u00f5es que modificam seu comportamento.</p>"},{"location":"capitulo_6/trabalhando_com_registradores/","title":"Trabalhando com registradores","text":""},{"location":"capitulo_6/trabalhando_com_registradores/#trabalhando-com-registradores","title":"Trabalhando com registradores","text":"<p>Pode-se guardar trechos do que foi copiado ou apagado para registradores distintos (\u00e1rea de transfer\u00eancia m\u00faltipla). Os registradores s\u00e3o indicados por aspas seguido por uma letra. Exemplos: <code>\"a</code>, <code>\"b</code>, <code>\"c</code>, etc.</p> <p>Como copiar o texto para um registrador? \u00c9 simples: basta especificar o nome do registrador antes: <pre><code>\"add ... apaga linha para o registrador \"a\"\n\"bdd ... apaga linha para o registrador \"b\"\n\"ap .... cola\" o conte\u00fado do registrador \"a\"\n\"bp .... cola\" o conte\u00fado do registrador \"b\"\n\"x3dd .. apaga 3 linhas para o registrador \"x\"\n\"ayy  .. copia linha para o registrador \"a\"\n\"a3yy .. copia 3 linhas para o registrador \"a\"\n\"ayw  .. copia uma palavra para o registrador \"a\"\n\"a3yw .. copia 3 palavras para o registrador \"a\"\n</code></pre> No \u201cmodo de inser\u00e7\u00e3o\u201d, como visto anteriormente, pode-se usar um atalho para colar rapidamente o conte\u00fado de um registrador. <pre><code>Ctrl-r (registrador)\n</code></pre> Para colar o conte\u00fado do registrador \u2018a\u2019 <pre><code>Ctrl-r a\n</code></pre> Para copiar a linha atual para a \u00e1rea de transfer\u00eancia <pre><code>\"+yy\n</code></pre> Para colar da \u00e1rea de transfer\u00eancia <pre><code>\"+p\n</code></pre> Para copiar o arquivo atual para a \u00e1rea de transfer\u00eancia \u201cclipboard\u201d: <pre><code>:%y+\n</code></pre></p>"},{"location":"capitulo_6/usando_expressoes_regulares_em_buscas/","title":"Usando \"Express\u00f5es Regulares\" em buscas","text":""},{"location":"capitulo_6/usando_expressoes_regulares_em_buscas/#usando-expressoes-regulares-em-buscas","title":"Usando \u201cExpress\u00f5es Regulares\u201d em buscas","text":"<pre><code>/ ........... inicia uma busca (modo normal)\n\\%x69 ....... c\u00f3digo da letra `i'\n/\\%x69 ...... localiza a letra `i' - hexadecimal 069\n\\d .......... localiza n\u00fameros\n[3-8] ....... localiza n\u00fameros de 3 at\u00e9 8\n^ ........... come\u00e7o de linha\n$ ........... final de linha\n\\+ .......... um ou mais\n/^\\d\\+$ ..... localiza somente d\u00edgitos\n/\\r$ ........ localiza linhas terminadas com ^M\n/^\\s*$ ...... localiza linhas vazias ou contendo apenas espa\u00e7os\n/^\\t\\+ ...... localiza linhas que iniciam com tabs\n\\s .......... localiza espa\u00e7os\n/\\s\\+$ ...... localiza espa\u00e7os no final da linha\n</code></pre>"},{"location":"capitulo_6/usando_expressoes_regulares_em_buscas/#evitando-escapes-ao-usar-expressoes-regulares","title":"Evitando escapes ao usar Express\u00f5es regulares","text":"<p>O Vim possui um modo chamado \u201cvery magic\u201d para uso em express\u00f5es regulares que evita o uso excessivo de escapes, alternativas etc. Usando apenas uma op\u00e7\u00e3o: veja <code>:h /\\v</code>.</p> <p>Em um trecho com d\u00edgitos + texto + d\u00edgitos no qual se deseja manter s\u00f3 as letras. <pre><code>12345aaa678\n12345bbb678\n12345aac678\n</code></pre> Sem a op\u00e7\u00e3o \u201cvery magic\u201d far\u00edamos: <pre><code>:%s/\\d\\{5\\}\\(\\D\\+\\)\\d\\{3\\}/\\1/\n</code></pre> J\u00e1 com a op\u00e7\u00e3o \u201cvery magic\u201d <code>\\v</code> usa-se bem menos escapes: <pre><code>:%s/\\v\\d{5}(\\D+)\\d{3}/\\1/\n\n\" explica\u00e7\u00e3o do comando acima\n: ......... comando\n% ......... em todo arquivo\ns ......... substitua\n/ ......... inicia padr\u00e3o de busca\n\\v ........ use very magic mode\n\\d ........ d\u00edgitos\n{5} ....... 5 vezes\n( ........ inicia um grupo\n\\D ........ seguido de n\u00e3o d\u00edgitos\n)  ........ fecha um grupo\n+ ......... uma ou mais vezes\n\\d ........ novamente d\u00edgitos\n{3} ....... tr\u00eas vezes\n/ ......... inicio da substitui\u00e7\u00e3o\n\\1 ........ referencia o grupo 1\n</code></pre> Analisando o exemplo anterior, a linha de racioc\u00ednio foi a de \u201cmanter o texto entre os d\u00edgitos\u201d, o que pode ser traduzido, em uma outra forma de racioc\u00ednio, como \u201cremover os d\u00edgitos\u201d. <pre><code>:%s/\\d//g\n\n\" explica\u00e7\u00e3o do comando acima\n% ......... em todo arquivo\ns ......... substitua\n/ ......... inicia padr\u00e3o de busca\n\\d ........ ao encontrar um d\u00edgito\n/ ......... subtituir por\nvazio ..... exato, substituir por vazio\n/g ........ a express\u00e3o se torna gulosa\n</code></pre> Por guloso - <code>/g</code> - se entende que ele pode e deve tentar achar mais de uma ocorr\u00eancia do padr\u00e3o de busca na mesma linha. Caso n\u00e3o seja gulosa, a express\u00e3o ir\u00e1 apenas casar com a primeira ocorr\u00eancia em cada linha.</p>"},{"location":"capitulo_6/usando_expressoes_regulares_em_buscas/#classes-posix-para-uso-em-expressoes-regulares","title":"Classes POSIX para uso em Express\u00f5es Regulares","text":"<p>Ao fazermos substitui\u00e7\u00f5es em textos poderemos nos deparar com erros, pois [a-z] n\u00e3o inclui caracteres acentuados, as classes POSIX s\u00e3o a solu\u00e7\u00e3o para este problema, pois adequam o sistema ao idioma local, esta \u00e9 a m\u00e1gica implementada por estas classes. <pre><code>[:lower:] ...... letras min\u00fasculas incluindo acentos\n[:upper:] ...... letras mai\u00fasculas incluindo acentos\n[:punct:] ...... ponto, virgula, colchete, etc\n</code></pre> Para usar estas classes fazemos: <pre><code>:%s/[[:lower:]]/\\U&amp;/g\n\nExplicando o comando acima:\n: ....... modo de comando\n% ....... em todo o arquivo atual\ns ....... substitua\n/ ....... inicia o padr\u00e3o a ser buscado\n[ ....... inicia um grupo\n[: ...... inicia uma classe POSIX\nlower ... letras min\u00fasculas\n:] ...... termina a classe POSIX\n] ....... termina o grupo\n/ ....... inicia substitui\u00e7\u00e3o\n\\U ...... para mai\u00fasculo\n&amp; ....... correponde ao que foi buscado\n</code></pre> Nem todas as classes POSIX conseguem pegar caracteres acentuados, portanto deve-se habilitar o destaque colorido para buscas usando: <pre><code>:set hlsearch .... destaque colorido para buscas\n:set incsearch ... busca incremental\n</code></pre> Dessa forma podemos testar nossas buscas antes de fazer uma substitui\u00e7\u00e3o.</p> <p>Para aprender mais sobre Express\u00f5es Regulares leia:</p> <ul> <li> <p>Guia sobre Express\u00f5es Regulares</p> </li> <li> <p>:help regex</p> </li> <li> <p>:help pattern</p> </li> </ul> <p>Uma forma r\u00e1pida para encontrar a pr\u00f3xima ocorr\u00eancia de uma palavra sob o cursor \u00e9 teclar <code>*</code>. Para encontrar uma ocorr\u00eancia anterior da palavra sob o cursor, existe o <code>#</code> (em ambos os casos o cursor deve estar posicionado sobre a palavra que deseja procurar). As duas op\u00e7\u00f5es citadas localizam apenas se a palavra corresponder totalmente ao padr\u00e3o sob o cursor, pode-se buscar por trechos de palavras que fa\u00e7am parte de palavras maiores usando-se <code>g*</code>. Pode-se ainda exibir \u201cdentro do contexto\u201d todas as ocorr\u00eancias de uma palavra sob o cursor usando-se o seguinte atalho em modo normal: <pre><code>[ Shift-i\n</code></pre></p>"},{"location":"capitulo_6/usando_o_file_explorer/","title":"Usando o file explorer","text":""},{"location":"capitulo_6/usando_o_file_explorer/#usando-o-file-explorer","title":"Usando o File Explorer","text":"<p>O Vim navega na \u00e1rvore de diret\u00f3rios com o comando <pre><code>vim .\n</code></pre> Use o \u2018j\u2019 para descer e o \u2018k\u2019 para subir ou Enter para editar o arquivo selecionado. Pressionando F1 ao abrir o FileExplorer do Vim, voc\u00ea encontra dicas adicionais sobre este modo de opera\u00e7\u00e3o do Vim.</p>"},{"location":"capitulo_7/abrindo_e_fechando_janelas/","title":"Abrindo e fechando janelas","text":""},{"location":"capitulo_7/abrindo_e_fechando_janelas/#abrindo-e-fechando-janelas","title":"Abrindo e fechando janelas","text":"<p><pre><code>Ctrl-w-s ...... Divide a janela horizontalmente (:split)\nCtrl-w-v ...... Divide a janela verticalmente (:vsplit)\nCtrl-w-o ...... Faz a janela atual ser a \u00fanica (:only)\nCtrl-w-n ...... Abre nova janela (:new)\nCtrl-w-q ...... Fecha a janela atual (:quit)\nCtrl-w-c ...... Fecha a janela atual (:close)\n</code></pre> Lembrando que o Vim considera todos os arquivos como \u201cbuffers\u201d portanto quando um arquivo \u00e9 fechado, o que est\u00e1 sendo fechado \u00e9 a visualiza\u00e7\u00e3o do mesmo, pois ele continua aberto no \u201cbuffer\u201d.</p>"},{"location":"capitulo_7/alternando_entre_buffers_de_arquivo/","title":"Alternando entre Buffers de arquivo","text":"<p>Ao abrir um documento qualquer no Vim o mesmo fica em um buffer. Caso seja decidido que outro arquivo seja aberto na mesma janela, o documento inicial ir\u00e1 desaparecer da janela atual cedendo lugar ao mais novo, mas permanecer\u00e1 ativo no buffer para futuras modifica\u00e7\u00f5es.</p> <p>Para saber quantos documentos est\u00e3o abertos no momento utiliza-se o comando :ls ou :buffers. Esses comandos listam todos os arquivos que est\u00e3o referenciados no buffer com suas respectivas \u201cchaves\u201d de referencia.</p> <p>Para trocar a visualiza\u00e7\u00e3o do Buffer atual pode-se usar: <pre><code>:buffer# ...... Altera para o buffer anterior\n:b2 ........... Altera para o buffer cujo a chave \u00e9 2\n</code></pre> Para os que preferem atalhos para alternar entre os buffers, \u00e9 poss\u00edvel utilizar \u2018Ctrl-6\u2019 que tem o mesmo funcionamento do comando <code>:b#</code></p>"},{"location":"capitulo_7/file_explorer/","title":"File Explorer","text":""},{"location":"capitulo_7/file_explorer/#file-explorer","title":"File Explorer","text":"<p>Para abrir o gerenciador de arquivos do Vim use: <pre><code>:Vex ............ abre o file explorer verticalmente\n:Sex ............ abre o file explorer em nova janela\n:Tex ............ abre o file explorer em nova aba\n:E .............. abre o file explorer na janela atual\nap\u00f3s abrir chame a ajuda &lt;F1&gt;\n</code></pre> Para abrir o arquivo sob o cursor em nova janela coloque a linha abaixo no seu <code>~/.vimrc</code> <pre><code>let g:netrw_altv = 1\n</code></pre> \u00c9 poss\u00edvel mapear um atalho \u201cno caso abaixo F2\u201d para abrir o File Explorer. <pre><code>map &lt;F2&gt; &lt;Esc&gt;:Vex&lt;cr&gt;\n</code></pre> Ao editar um arquivo no qual h\u00e1 refer\u00eancia a um outro arquivo, por exemplo: \u2018/etc/hosts\u2019, pode-se usar o atalho \u2018Ctrl-wf\u2019 para abri-lo em nova janela, ou \u2018gf\u2019 para abri-lo na janela atual. Mas \u00e9 importante posicionar o cursor sobre o nome do arquivo. Veja tamb\u00e9m mapeamentos na se\u00e7\u00e3o Mapeamentos.</p>"},{"location":"capitulo_7/manipulando_janelas/","title":"Manipulando janelas","text":""},{"location":"capitulo_7/manipulando_janelas/#manipulando-janelas","title":"Manipulando janelas","text":"<p><pre><code>Ctrl-w-w ......... Alterna entre janelas\nCtrl-w-j ......... desce uma janela `j`\nCtrl-w-k ......... sobe  uma janela `k`\nCtrl-w-l ......... move para a janela da direita `l`\nCtrl-w-h ......... move para a janela da esquerda `h`\nCtrl-w-r ......... Rotaciona janelas na tela\nCtrl-w-+ ......... Aumenta o espa\u00e7o da janela atual\nCtrl-w-- ......... Diminui o espa\u00e7o da janela atual\n</code></pre> Pode-se mapear um atalho para redimensionar janelas com as teclas <code>+</code> e <code>-</code>. <pre><code>:map + &lt;c-w&gt;+\n:map - &lt;c-w&gt;-\n</code></pre></p>"},{"location":"capitulo_7/modos_de_divisao_da_janela/","title":"Modos de divis\u00e3o da janela","text":""},{"location":"capitulo_7/modos_de_divisao_da_janela/#modos-de-divisao-da-janela","title":"Modos de divis\u00e3o da janela","text":"<p>Como foi dito anteriormente, \u00e9 poss\u00edvel visualizar mais de um buffer ao mesmo tempo, e isso pode ser feito utilizando tab ou split.</p>"},{"location":"capitulo_7/modos_de_divisao_da_janela/#utilizando-abas-tab","title":"Utilizando abas (tab)","text":"<p>A partir do Vim 7 foi disponibilizada a fun\u00e7\u00e3o de abrir arquivos em abas, portanto \u00e9 poss\u00edvel ter v\u00e1rios buffers abertos em abas distintas e alternar entre elas facilmente. Os comandos para utiliza\u00e7\u00e3o das abas s\u00e3o: <pre><code>:tabnew ........... Abre uma nova tab\n:tabprevious ...... Vai para a tab anterior\n:tabnext .......... Vai para a pr\u00f3xima tab\n</code></pre></p>"},{"location":"capitulo_7/modos_de_divisao_da_janela/#utilizando-split-horizontal","title":"Utilizando split horizontal","text":"<p>Enquanto os comandos referentes a tab deixam a janela inteira dispon\u00edvel para o texto e apenas cria uma pequena aba na parte superior, o comando split literalmente divide a tela atual em duas para visualiza\u00e7\u00e3o simult\u00e2nea dos \u201cbuffers\u201d (seja ele o mesmo ou outro diferente). Esse \u00e9 o split padr\u00e3o do Vim mas pode ser alterado facilmente colocando a linha abaixo no seu <code>~/.vimrc</code>: <pre><code>:set splitright .... split padr\u00e3o para vertical\n</code></pre></p>"},{"location":"capitulo_7/modos_de_divisao_da_janela/#utilizando-split-vertical","title":"Utilizando split vertical","text":"<p>O split vertical funciona da mesma maneira que o split horizontal, sendo a \u00fanica diferen\u00e7a o modo como a tela \u00e9 dividida, pois nesse caso a tela \u00e9 dividida verticalmente.</p>"},{"location":"capitulo_7/salvando_e_saindo/","title":"Salvando e saindo","text":""},{"location":"capitulo_7/salvando_e_saindo/#salvando-e-saindo","title":"Salvando e saindo","text":"<p>\u00c9 poss\u00edvel salvar todas as janelas facilmente, assim como sair tamb\u00e9m: <pre><code>:wall ............. salva todos `write all'\n:qall ............. fecha todos `quit all'\n</code></pre></p>"},{"location":"capitulo_7/trabalhando_com_janelas/","title":"Trabalhando com Janelas","text":"<p>O Vim trabalha com o conceito de m\u00faltiplos buffers de arquivo. Cada buffer \u00e9 um arquivo carregado para edi\u00e7\u00e3o. Um buffer pode estar vis\u00edvel ou n\u00e3o, e \u00e9 poss\u00edvel dividir a tela em janelas, de forma a visualizar mais de um buffer simultaneamente.</p>"},{"location":"capitulo_8/colocando_a_ultima_busca_em_um_comando/","title":"Colocando a \u00faltima busca em um comando","text":""},{"location":"capitulo_8/colocando_a_ultima_busca_em_um_comando/#colocando-a-ultima-busca-em-um-comando","title":"Colocando a \u00faltima busca em um comando","text":"<p>Observa\u00e7\u00e3o: lembre-se <code>Ctrl = ^</code> <pre><code>:^r/\n</code></pre></p>"},{"location":"capitulo_8/gravando_comandos/","title":"Gravando comandos","text":""},{"location":"capitulo_8/gravando_comandos/#gravando-comandos","title":"Gravando comandos","text":"<p>Imagine que voc\u00ea tem o seguinte trecho de c\u00f3digo: <pre><code>stdio.h\nfcntl.h\nunistd.h\nstdlib.h\n</code></pre> e quer que ele fique assim: <pre><code>#include \"stdio.h\"\n#include \"fcntl.h\"\n#include \"unistd.h\"\n#include \"stdlib.h\"\n</code></pre> N\u00e3o \u00e9 poss\u00edvel simplesmente executar repetidas vezes um comando do Vim, pois \u00e9 preciso incluir texto tanto no come\u00e7o quanto no fim da linha? \u00c9 necess\u00e1rio mais de um comando para isso. \u00c9 a\u00ed que entram as macros. Pode-se gravar at\u00e9 26 macros, j\u00e1 que elas s\u00e3o guardadas nos registradores do Vim, que s\u00e3o identificados pelas letras do alfabeto. Para come\u00e7ar a gravar uma macro no registrador \u2018a\u2019, digitamos <pre><code>qa\n</code></pre> No modo Normal. Tudo o que for digitado a partir de ent\u00e3o, ser\u00e1 gravado no registrador \u2018a\u2019 at\u00e9 que seja conclu\u00eddo com o comando <code>&lt;Esc&gt;q</code> novamente (no modo Normal). Assim, soluciona-se o problema: <pre><code>&lt;Esc&gt; ....... para garantir que estamos no modo normal\nqa .......... inicia a grava\u00e7\u00e3o da macro `a'\nI ........... entra no modo de inser\u00e7\u00e3o no come\u00e7o da linha\n#include \" .. insere #include \"\n&lt;Esc&gt; ....... sai do modo de inser\u00e7\u00e3o\nA\" .......... insere o \u00faltimo caractere\n&lt;Esc&gt; ....... sai do modo de inser\u00e7\u00e3o\nj ........... desce uma linha\n&lt;Esc&gt; ....... sai do modo de inser\u00e7\u00e3o\nq ........... para a grava\u00e7\u00e3o da macro\n</code></pre> Agora s\u00f3 \u00e9 preciso posicionar o cursor na primeira letra de uma linha como esta <pre><code>stdio.h\n</code></pre> E executar a macro do registrador \u2018a\u2019 quantas vezes for necess\u00e1rio, usando o comando <code>@a</code>. Para executar quatro vezes, digite: <pre><code>4@a\n</code></pre> Este comando executa quatro vezes o conte\u00fado do registrador \u2018a\u2019.</p> <p>Caso tenha sido executada, a macro pode ser repetida com o comando <pre><code>@@\n</code></pre></p>"},{"location":"capitulo_8/guardando_trechos_em_registros/","title":"Guardando trechos em \"registros\"","text":""},{"location":"capitulo_8/guardando_trechos_em_registros/#guardando-trechos-em-registradores","title":"Guardando trechos em \u201cregistradores\u201d","text":"<p>Os registradores \u2018a-z\u2019 s\u00e3o uma esp\u00e9cie de \u00e1rea de transfer\u00eancia m\u00faltipla.</p> <p>Deve-se estar em modo normal e ent\u00e3o digitar aspas duplas e uma das 26 letras do alfabeto, em seguida uma a\u00e7\u00e3o por exemplo, \u2018y\u2019 (copiar) \u2018d\u2019 (apagar). Depois, mover o cursor para a linha desejada e colar com <code>\"rp</code>, onde \u2018r\u2019 corresponde ao registrador para onde o trecho foi copiado. <pre><code>\"ayy ... copia a linha atual para o registrador `a'\n\"ap  ... cola o conte\u00fado do registrador `a' abaixo\n\"bdd ... apaga a linha atual para o registrador `b'\n</code></pre></p>"},{"location":"capitulo_8/inserindo_a_palavra_sob_o_cursor_em_um_comando/","title":"Inserindo a palavra sob o cursos em um comando","text":""},{"location":"capitulo_8/inserindo_a_palavra_sob_o_cursor_em_um_comando/#inserindo-a-palavra-sob-o-cursor-em-um-comando","title":"Inserindo a palavra sob o cursor em um comando","text":"<p>O comando abaixo pode ser usado para pegar por exemplo, a palavra que est\u00e1 atualmente sob o cursor, e coloca-la em um comando de busca. <pre><code>^r^w\n</code></pre></p>"},{"location":"capitulo_8/inserindo_o_nome_do_arquivo_no_comando/","title":"Inserindo o nome do arquivo no comando","text":""},{"location":"capitulo_8/inserindo_o_nome_do_arquivo_no_comando/#inserindo-o-nome-do-arquivo-no-comando","title":"Inserindo o nome do arquivo no comando","text":"<pre><code>:^r%\n</code></pre>"},{"location":"capitulo_8/inserindo_o_ultimo_comando/","title":"Inserindo o \u00faltimo comando","text":""},{"location":"capitulo_8/inserindo_o_ultimo_comando/#inserindo-o-ultimo-comando","title":"Inserindo o \u00faltimo comando","text":"<p><pre><code>^r:\n</code></pre> Se preceder com \u201c:\u201d voc\u00ea repete o comando, equivale a acessar o hist\u00f3rico de comandos com as setas <pre><code>:^r:\n</code></pre></p>"},{"location":"capitulo_8/para_repetir_exatamente_a_ultima_insercao/","title":"Para repetir exatamente a \u00faltima inser\u00e7\u00e3o","text":""},{"location":"capitulo_8/para_repetir_exatamente_a_ultima_insercao/#para-repetir-exatamente-a-ultima-insercao","title":"Para repetir exatamente a \u00faltima inser\u00e7\u00e3o","text":"<pre><code>i&lt;c-a&gt;\n</code></pre>"},{"location":"capitulo_8/repeticao_de_comandos/","title":"Repeti\u00e7\u00e3o de Comandos","text":"<p>Para repetir a \u00faltima edi\u00e7\u00e3o saia do modo de Inser\u00e7\u00e3o e pressione ponto (.):</p> <p>Para inserir um texto que deve ser repetido v\u00e1rias vezes:</p> <ol> <li> <p>Posicione o cursor no local desejado;</p> </li> <li> <p>Digite o n\u00famero de repeti\u00e7\u00f5es;</p> </li> <li> <p>Entre em modo de inser\u00e7\u00e3o;</p> </li> <li> <p>Digite o texto;</p> </li> <li> <p>Saia do modo de inser\u00e7\u00e3o (tecle Esc).</p> </li> </ol> <p>Por exemplo, se voc\u00ea quiser inserir oitenta tra\u00e7os numa linha, em vez de digitar um por um, voc\u00ea pode digitar o comando: <pre><code>80i-&lt;Esc&gt;\n</code></pre> Veja, passo a passo, o que aconteceu:</p> <p>Antes de entrar em modo de inser\u00e7\u00e3o usamos um quantificador <pre><code>`80`\n</code></pre> depois iniciamos o modo de inser\u00e7\u00e3o <pre><code>i\n</code></pre> depois digitamos o caractere a ser repetido <pre><code>-\n</code></pre> e por fim sa\u00edmos do modo de inser\u00e7\u00e3o <pre><code>&lt;Esc&gt;\n</code></pre> Se desej\u00e1ssemos digitar 10 linhas com o texto <pre><code>isto \u00e9 um teste\n</code></pre> dever\u00edamos ent\u00e3o fazer assim: <pre><code>&lt;Esc&gt; .. para ter certeza que ainda estamos no modo normal\n10 ..... quantificador antes\ni ...... entrar no modo de inser\u00e7\u00e3o\nisto \u00e9 um teste &lt;Enter&gt;\n&lt;Esc&gt; .. voltar ao modo normal\n</code></pre></p>"},{"location":"capitulo_8/repetindo_a_digitacao_de_uma_linha/","title":"Repetindo a digita\u00e7\u00e3o de uma linha","text":""},{"location":"capitulo_8/repetindo_a_digitacao_de_uma_linha/#repetindo-a-digitacao-de-uma-linha","title":"Repetindo a digita\u00e7\u00e3o de uma linha","text":"<p><pre><code>modo de inser\u00e7\u00e3o\nCtrl-y .......... repete a linha acima\nCtrl-e .......... repete a linha abaixo\nCtrl-x Ctrl-l ... repete linhas completas\n</code></pre> O atalho Ctrl-x Ctrl-l s\u00f3 funcionar\u00e1 para uma linha semelhante, experimente digitar: <pre><code>uma linha qualquer com algum conte\u00fado\numa linha &lt;Ctrl-x Ctrl-l&gt;\n</code></pre> e veja o resultado.</p>"},{"location":"capitulo_8/repetindo_comandos/","title":"Repetindo comandos","text":""},{"location":"capitulo_8/repetindo_comandos/#repetindo-comandos","title":"Repetindo comandos","text":"<p><pre><code>:@\n</code></pre> O atalho acima repete o \u00faltimo comando no pr\u00f3prio modo de comandos.</p>"},{"location":"capitulo_8/repetindo_substituicoes/","title":"Repetindo substitui\u00e7\u00f5es","text":""},{"location":"capitulo_8/repetindo_substituicoes/#repetindo-substituicoes","title":"Repetindo substitui\u00e7\u00f5es","text":"<p>Caso seja feito uma substitui\u00e7\u00e3o em um intervalo como abaixo <pre><code>:5,32s/isto/aquilo/g\n</code></pre> Pode-se repetir esta substitui\u00e7\u00e3o em qualquer linha que estiver apenas usando este s\u00edmbolo <pre><code>&amp;\n</code></pre> O Vim substituir\u00e1 na linha corrente \u2018isto\u2019 por \u2018aquilo\u2019. Podendo repetir a \u00faltima substitui\u00e7\u00e3o globalmente assim: <pre><code>g&amp;\n</code></pre></p>"},{"location":"capitulo_8/scripts_vim/","title":"Scripts Vim","text":""},{"location":"capitulo_8/scripts_vim/#scripts-vim","title":"Scripts Vim","text":"<p>Usando um script para modificar um nome em v\u00e1rios arquivos: Crie um arquivo chamado subst.vim contendo os comandos de substitui\u00e7\u00e3o e o comando de salvamento :wq. <pre><code>%s/bgcolor=\"eeeeee\"/bgcolor=\"ffffff\"/g\nwq\n</code></pre> Para executar um script, digite o comando <pre><code>:source nome_do_script.vim\n</code></pre> O comando :source tamb\u00e9m pode ser abreviado com :so bem como ser usado para testar um esquema de cor: <pre><code>:so tema.vim\n</code></pre></p>"},{"location":"capitulo_8/usando_o_comando_bufdo/","title":"Usando o comando bufdo","text":""},{"location":"capitulo_8/usando_o_comando_bufdo/#usando-o-comando-bufdo","title":"Usando o comando <code>bufdo</code>","text":"<p>Com o comando :bufdo, pode-se executar um comando em um conjunto de arquivos de forma r\u00e1pida. No exemplo a seguir, ser\u00e3o abertos todos os arquivos HTML do diret\u00f3rio atual, ser\u00e1 efetuado uma substitui\u00e7\u00e3o e em seguida ser\u00e3o todos salvos. <pre><code>vim *.html\n:bufdo %s/bgcolor=\"eeeeee\"/bgcolor=\"ffffff\"/ge | :wall\n:qall\n</code></pre> O comando :wall salva \u201cwrite\u201d todos \u201call\u201d os arquivos abertos pelo comando vim *.html. Opcionalmente voc\u00ea pode combinar \u201c:wall\u201d e \u201c:qall\u201d com o comando :wqall, que salva todos os arquivos abertos e em seguida sai do Vim. A op\u00e7\u00e3o \u2018e\u2019 faz com que o vim n\u00e3o exiba mensagens de erro caso o buffer em quest\u00e3o n\u00e3o contenha o padr\u00e3o a ser substitu\u00eddo.</p>"},{"location":"capitulo_9/beautifiers/","title":"Beautifiers","text":""},{"location":"capitulo_9/beautifiers/#beautifiers","title":"Beautifiers","text":"<p>A maior parte das linguagens de programa\u00e7\u00e3o possui ferramentas externas chamadas beautifiers, que servem para embelezar o c\u00f3digo, atrav\u00e9s da indenta\u00e7\u00e3o e espa\u00e7amento. Por exemplo, para embelezar um arquivo HTML \u00e9 poss\u00edvel usar a ferramenta \"tidy\"<sup>1</sup>, do W3C: <pre><code>:%!tidy\n</code></pre></p> <ol> <li> <p>http://tidy.sourceforge.net/ \u21a9</p> </li> </ol>"},{"location":"capitulo_9/calculadora_cientifica_com_o_vim/","title":"Calculadora Cient\u00edfica com o Vim","text":""},{"location":"capitulo_9/calculadora_cientifica_com_o_vim/#calculadora-cientifica-com-o-vim","title":"Calculadora Cient\u00edfica com o Vim","text":"<p>Para usar a fun\u00e7\u00e3o de Calculadora Cient\u00edfica no Vim usamos uma ferramenta externa, que pode ser o comando <code>bc</code> do GNU/Linux, ou uma linguagem de programa\u00e7\u00e3o como Python ou Ruby, veremos como habilitar a calculadora usando o Python. Obviamente esta linguagem de programa\u00e7\u00e3o deve estar instalada no sistema em que se deseja usar seus recursos. Deve-se testar se a vers\u00e3o do Vim tem suporte ao Python <code>:version</code>, em seguida colocam-se os mapeamentos no <code>.vimrc</code>. <pre><code>:command! -nargs=+ Calc :py print &lt;args&gt;\n:py from math import *\n</code></pre> Feito isto pode-se usar o comando <code>:Calc</code> como visto abaixo: <pre><code>:Calc pi\n:Calc cos(30)\n:Calc pow(5,3)\n:Calc 10.0/3\n:Calc sum(xrange(1,101))\n:Calc [x**2 for x in range(10)] \n</code></pre></p>"},{"location":"capitulo_9/comandos_externos/","title":"Comandos Externos","text":"<p>O Vim permite executar comandos externos para processar ou filtrar o conte\u00fado de um arquivo. De forma geral, fazemos isso digitando (no modo normal): <pre><code>:!ls .... visualiza o conte\u00fado do diret\u00f3rio\n</code></pre> Lembrando que anexando um simples ponto, a sa\u00edda do comando torna-se o documento que est\u00e1 sendo editado: <pre><code>:.!ls .... imprime na tela o conte\u00fado do diret\u00f3rio\n</code></pre> A seguir, veja alguns exemplos de utiliza\u00e7\u00e3o:</p>"},{"location":"capitulo_9/compilando_e_verificando_erros/","title":"Compilando e verificando erros","text":""},{"location":"capitulo_9/compilando_e_verificando_erros/#compilando-e-verificando-erros","title":"Compilando e verificando erros","text":"<p>Se o seu projeto j\u00e1 possui um Makefile, ent\u00e3o voc\u00ea pode fazer uso do comando :make para poder compilar seus programas no conforto de seu Vim: <pre><code>:make\n</code></pre> A vantagem de fazer isso \u00e9 poder usar outra ferramenta bastante interessante, a janela de quickfix: <pre><code>:cw[indow]\n</code></pre> O comando cwindow abrir\u00e1 uma janela em um split horizontal com a listagem de erros e warnings. Voc\u00ea poder\u00e1 navegar pela lista usando os cursores e ir diretamente para o arquivo e linha da ocorr\u00eancia.</p> <p>Modificando o compilador, o comando make pode mudar sua a\u00e7\u00e3o. <pre><code>:compiler javac\n:compiler gcc\n:compiler php\n</code></pre> Note que php n\u00e3o tem um compilador. Logo, quando executado, o make ir\u00e1 verificar por erros de sintaxes. <pre><code>:compiler\n</code></pre> O comando acima lista todos os compiladores suportados.</p>"},{"location":"capitulo_9/editando_comandos_longos_no_linux/","title":"Editando comandos longos no Linux","text":""},{"location":"capitulo_9/editando_comandos_longos_no_linux/#editando-comandos-longos-no-linux","title":"Editando comandos longos no Linux","text":"<p>\u00c9 comum no ambiente GNU/Linux a necessidade de digitar comandos longos no terminal, para facilitar esta tarefa pode-se seguir estes passos:</p> <ol> <li> <p>Definir o Vim como editor padr\u00e3o do sistema editando o arquivo     <code>.bashrc</code><sup>1</sup>:     <pre><code>#configura o vim como editor padr\u00e3o\nexport EDITOR=vim\nexport VISUAL=vim\n</code></pre></p> </li> <li> <p>No terminal usar a combina\u00e7\u00e3o de teclas <code>Ctrl-x-e</code>.     Esta combina\u00e7\u00e3o de teclas abre o editor padr\u00e3o do sistema onde se     deve digitar o comando longo, ao sair do editor o terminal executa o     comando editado.</p> </li> </ol> <ol> <li> <p>Arquivo de configura\u00e7\u00e3o do bash\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_9/editando_saidas_do_shell/","title":"Editando sa\u00eddas do Shell","text":""},{"location":"capitulo_9/editando_saidas_do_shell/#editando-saidas-do-shell","title":"Editando sa\u00eddas do Shell","text":"<p>Muitas vezes, precisamos manipular sa\u00eddas do shell antes de envi\u00e1-las por e-mail, reportar ao chefe ou at\u00e9 mesmo salv\u00e1-las. Utilizando <pre><code>vim -\nou\ngvim -\n</code></pre> a sa\u00edda do Shell \u00e9 redirecionada para o (G)Vim automaticamente, n\u00e3o sendo necess\u00e1rio redirecion\u00e1-la para um arquivo tempor\u00e1rio e, logo ap\u00f3s, abri-lo para edit\u00e1-lo e modific\u00e1-lo. Quem trabalha com sistemas de controle de vers\u00e3o como svn pode visualizar as diferen\u00e7as entre o c\u00f3digo que est\u00e1 sendo editado e o que est\u00e1 no reposit\u00f3rio com sintaxe colorida desta forma: <pre><code>svn diff | view -\n</code></pre> Outra situa\u00e7\u00e3o em que se pode combinar o vim com sa\u00eddas do shell \u00e9 com o comando <code>grep</code>. Usando-se a op\u00e7\u00e3o <code>-l</code> do grep listamos apenas os arquivos que correspondem a um padr\u00e3o. <pre><code>grep -irl voyeg3r .\n./src/img/.svn/entries\n./src/Makefile\n./src/vimbook.tex\n</code></pre> Pode-se em seguida chamar o vim usando substitui\u00e7\u00e3o de comandos, como o comando <code>!!</code> corresponde ao \u00faltimo comando, e neste caso a sa\u00edda corresponde a uma lista de arquivos que cont\u00e9m o padr\u00e3o a ser editado faz-se: <pre><code>vim ${!!}\n</code></pre></p>"},{"location":"capitulo_9/grep/","title":"Grep","text":""},{"location":"capitulo_9/grep/#grep","title":"Grep","text":"<p>Do mesmo jeito que voc\u00ea usa grep na sua linha de comando voc\u00ea pode usar o grep interno do Vim. Exatamente do mesmo jeito: <pre><code>:grep &lt;caminho&gt; &lt;padr\u00e3o&gt; &lt;op\u00e7\u00f5es&gt;\n</code></pre> Use a janela de quickfix<sup>1</sup> aqui tamb\u00e9m para exibir os resultados do grep e poder ir diretamente a eles.</p> <ol> <li> <p>:cope\u00a0\u21a9</p> </li> </ol>"},{"location":"capitulo_9/indent/","title":"Indent","text":""},{"location":"capitulo_9/indent/#indent","title":"Indent","text":"<p>Indent<sup>1</sup> \u00e9 um programa que indenta seu c\u00f3digo fonte de acordo com os padr\u00f5es configurados no seu arquivo HOME/.indent.pro. Vou pressupor que voc\u00ea j\u00e1 saiba usar o indent e como fazer as configura\u00e7\u00f5es necess\u00e1rias para ele funcionar, ent\u00e3o vamos ao funcionamento dele no Vim:</p> <p>Para indentar um bloco de c\u00f3digo, primeiro selecione-o com o modo visual line (com V), depois \u00e9 s\u00f3 entrar com o comando como se fosse qualquer outro comando externo: <pre><code>:!indent\n</code></pre> No caso, como foi selecionado um bloco de c\u00f3digo, ir\u00e3o aparecer alguns caracteres extras, mas o procedimento continua o mesmo: <pre><code>:'&lt;,'&gt;!indent\n</code></pre></p> <ol> <li> <p>http://www.gnu.org/software/indent \u21a9</p> </li> </ol>"},{"location":"capitulo_9/log_do_subversion/","title":"Log do Subversion","text":""},{"location":"capitulo_9/log_do_subversion/#log-do-subversion","title":"Log do Subversion","text":"<p>A vari\u00e1vel de ambiente \\$SVN_EDITOR pode ser usada para se especificar o caminho para o editor de texto de sua prefer\u00eancia, a fim de us\u00e1-lo na hora de dar um commit usando o subversion. <pre><code>export SVN_EDITOR=/usr/bin/vim\nsvn commit\n</code></pre> Ser\u00e1 aberto uma sess\u00e3o no Vim, que depois de salva, ser\u00e1 usada para LOG do commit.</p>"},{"location":"capitulo_9/ordenando/","title":"Ordenando","text":""},{"location":"capitulo_9/ordenando/#ordenando","title":"Ordenando","text":"<p>Podemos usar o comando sort que ordena o conte\u00fado de um arquivo dessa forma: <pre><code>:5,15!sort ..... ordena da linha 5 at\u00e9 a linha 15\n</code></pre> O comando acima ordena da linha 5 at\u00e9 a linha 15.</p> <p>O comando sort existe tanto no Windows quanto nos sistemas Unix. Digitando simplesmente sort, sem argumentos, o comportamento padr\u00e3o \u00e9 de classificar na ordem alfab\u00e9tica (baseando-se na linha inteira). Para mais informa\u00e7\u00f5es sobre argumentos do comando sort, digite: <pre><code>sort --help ou man sort (no Unix) ou\nsort /? (no Windows).\n</code></pre></p>"},{"location":"capitulo_9/ordenando_removendo_linhas_duplicadas_no_vim7/","title":"Ordenando e removendo linhas duplicadas no Vim 7","text":""},{"location":"capitulo_9/ordenando_removendo_linhas_duplicadas_no_vim7/#ordenando-e-removendo-linhas-duplicadas-no-vim-7","title":"Ordenando e removendo linhas duplicadas no Vim 7","text":"<p><pre><code>:sort u\n</code></pre> Quando a ordena\u00e7\u00e3o envolver n\u00fameros faz-se: <pre><code>:sort n\n</code></pre></p>"},{"location":"capitulo_9/referencias/","title":"Refer\u00eancias","text":""},{"location":"capitulo_9/referencias/#referencias","title":"Refer\u00eancias","text":"<ul> <li> <p>http://www.dicas-l.com.br/dicas-l/20070119.php</p> </li> <li> <p>http://vim.wikia.com/wiki/Scientific_calculator</p> </li> <li> <p>http://docs.python.org/library/cmath.html</p> </li> <li> <p>http://docs.python.org/library/math.html</p> </li> </ul>"},{"location":"capitulo_9/removendo_linhas_duplicadas/","title":"Removendo linhas duplicadas","text":""},{"location":"capitulo_9/removendo_linhas_duplicadas/#removendo-linhas-duplicadas","title":"Removendo linhas duplicadas","text":"<p><pre><code>:%!uniq\n</code></pre> O caractere \"%\" representa a regi\u00e3o equivalente ao arquivo atual inteiro. A vers\u00e3o do Vim 7 em diante tem um comando sort que permite remover linhas duplicadas uniq e ordenar, sem a necessidade de usar comandos externos, para mais detalhes: <pre><code>:h sort\n</code></pre></p>"},{"location":"referencias/","title":"Refer\u00eancias","text":"<ul> <li> <p>Best of Vim Tips</p> </li> <li> <p>Vim Resources</p> </li> <li> <p>Vim Bootstrap</p> </li> <li> <p>Vim para Noobs</p> </li> <li> <p>Awesome Vim</p> </li> <li> <p>Aurelio .vimrc</p> </li> <li> <p>Viva o Tux</p> </li> <li> <p>Original Latex Fonts</p> </li> </ul>"}]}